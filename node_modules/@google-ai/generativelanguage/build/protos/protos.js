// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_ai_generativelanguage_protos || ($protobuf.roots._google_ai_generativelanguage_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.ai = (function() {
    
            /**
             * Namespace ai.
             * @memberof google
             * @namespace
             */
            var ai = {};
    
            ai.generativelanguage = (function() {
    
                /**
                 * Namespace generativelanguage.
                 * @memberof google.ai
                 * @namespace
                 */
                var generativelanguage = {};
    
                generativelanguage.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.ai.generativelanguage
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.CitationMetadata = (function() {
    
                        /**
                         * Properties of a CitationMetadata.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface ICitationMetadata
                         * @property {Array.<google.ai.generativelanguage.v1.ICitationSource>|null} [citationSources] CitationMetadata citationSources
                         */
    
                        /**
                         * Constructs a new CitationMetadata.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a CitationMetadata.
                         * @implements ICitationMetadata
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.ICitationMetadata=} [properties] Properties to set
                         */
                        function CitationMetadata(properties) {
                            this.citationSources = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CitationMetadata citationSources.
                         * @member {Array.<google.ai.generativelanguage.v1.ICitationSource>} citationSources
                         * @memberof google.ai.generativelanguage.v1.CitationMetadata
                         * @instance
                         */
                        CitationMetadata.prototype.citationSources = $util.emptyArray;
    
                        /**
                         * Creates a new CitationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.CitationMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICitationMetadata=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.CitationMetadata} CitationMetadata instance
                         */
                        CitationMetadata.create = function create(properties) {
                            return new CitationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified CitationMetadata message. Does not implicitly {@link google.ai.generativelanguage.v1.CitationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.CitationMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICitationMetadata} message CitationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CitationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.citationSources != null && message.citationSources.length)
                                for (var i = 0; i < message.citationSources.length; ++i)
                                    $root.google.ai.generativelanguage.v1.CitationSource.encode(message.citationSources[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CitationMetadata message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.CitationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.CitationMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICitationMetadata} message CitationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CitationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CitationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.CitationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.CitationMetadata} CitationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CitationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.CitationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.citationSources && message.citationSources.length))
                                            message.citationSources = [];
                                        message.citationSources.push($root.google.ai.generativelanguage.v1.CitationSource.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CitationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.CitationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.CitationMetadata} CitationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CitationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CitationMetadata message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.CitationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CitationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.citationSources != null && message.hasOwnProperty("citationSources")) {
                                if (!Array.isArray(message.citationSources))
                                    return "citationSources: array expected";
                                for (var i = 0; i < message.citationSources.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.CitationSource.verify(message.citationSources[i]);
                                    if (error)
                                        return "citationSources." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CitationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.CitationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.CitationMetadata} CitationMetadata
                         */
                        CitationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.CitationMetadata)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.CitationMetadata();
                            if (object.citationSources) {
                                if (!Array.isArray(object.citationSources))
                                    throw TypeError(".google.ai.generativelanguage.v1.CitationMetadata.citationSources: array expected");
                                message.citationSources = [];
                                for (var i = 0; i < object.citationSources.length; ++i) {
                                    if (typeof object.citationSources[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.CitationMetadata.citationSources: object expected");
                                    message.citationSources[i] = $root.google.ai.generativelanguage.v1.CitationSource.fromObject(object.citationSources[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CitationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.CitationMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.CitationMetadata} message CitationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CitationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.citationSources = [];
                            if (message.citationSources && message.citationSources.length) {
                                object.citationSources = [];
                                for (var j = 0; j < message.citationSources.length; ++j)
                                    object.citationSources[j] = $root.google.ai.generativelanguage.v1.CitationSource.toObject(message.citationSources[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CitationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.CitationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CitationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CitationMetadata
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.CitationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CitationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.CitationMetadata";
                        };
    
                        return CitationMetadata;
                    })();
    
                    v1.CitationSource = (function() {
    
                        /**
                         * Properties of a CitationSource.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface ICitationSource
                         * @property {number|null} [startIndex] CitationSource startIndex
                         * @property {number|null} [endIndex] CitationSource endIndex
                         * @property {string|null} [uri] CitationSource uri
                         * @property {string|null} [license] CitationSource license
                         */
    
                        /**
                         * Constructs a new CitationSource.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a CitationSource.
                         * @implements ICitationSource
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.ICitationSource=} [properties] Properties to set
                         */
                        function CitationSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CitationSource startIndex.
                         * @member {number|null|undefined} startIndex
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @instance
                         */
                        CitationSource.prototype.startIndex = null;
    
                        /**
                         * CitationSource endIndex.
                         * @member {number|null|undefined} endIndex
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @instance
                         */
                        CitationSource.prototype.endIndex = null;
    
                        /**
                         * CitationSource uri.
                         * @member {string|null|undefined} uri
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @instance
                         */
                        CitationSource.prototype.uri = null;
    
                        /**
                         * CitationSource license.
                         * @member {string|null|undefined} license
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @instance
                         */
                        CitationSource.prototype.license = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CitationSource _startIndex.
                         * @member {"startIndex"|undefined} _startIndex
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @instance
                         */
                        Object.defineProperty(CitationSource.prototype, "_startIndex", {
                            get: $util.oneOfGetter($oneOfFields = ["startIndex"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CitationSource _endIndex.
                         * @member {"endIndex"|undefined} _endIndex
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @instance
                         */
                        Object.defineProperty(CitationSource.prototype, "_endIndex", {
                            get: $util.oneOfGetter($oneOfFields = ["endIndex"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CitationSource _uri.
                         * @member {"uri"|undefined} _uri
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @instance
                         */
                        Object.defineProperty(CitationSource.prototype, "_uri", {
                            get: $util.oneOfGetter($oneOfFields = ["uri"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CitationSource _license.
                         * @member {"license"|undefined} _license
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @instance
                         */
                        Object.defineProperty(CitationSource.prototype, "_license", {
                            get: $util.oneOfGetter($oneOfFields = ["license"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CitationSource instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICitationSource=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.CitationSource} CitationSource instance
                         */
                        CitationSource.create = function create(properties) {
                            return new CitationSource(properties);
                        };
    
                        /**
                         * Encodes the specified CitationSource message. Does not implicitly {@link google.ai.generativelanguage.v1.CitationSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICitationSource} message CitationSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CitationSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startIndex != null && Object.hasOwnProperty.call(message, "startIndex"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.startIndex);
                            if (message.endIndex != null && Object.hasOwnProperty.call(message, "endIndex"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.endIndex);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                            if (message.license != null && Object.hasOwnProperty.call(message, "license"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.license);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CitationSource message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.CitationSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICitationSource} message CitationSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CitationSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CitationSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.CitationSource} CitationSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CitationSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.CitationSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startIndex = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.endIndex = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.license = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CitationSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.CitationSource} CitationSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CitationSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CitationSource message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CitationSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.startIndex != null && message.hasOwnProperty("startIndex")) {
                                properties._startIndex = 1;
                                if (!$util.isInteger(message.startIndex))
                                    return "startIndex: integer expected";
                            }
                            if (message.endIndex != null && message.hasOwnProperty("endIndex")) {
                                properties._endIndex = 1;
                                if (!$util.isInteger(message.endIndex))
                                    return "endIndex: integer expected";
                            }
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                properties._uri = 1;
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            }
                            if (message.license != null && message.hasOwnProperty("license")) {
                                properties._license = 1;
                                if (!$util.isString(message.license))
                                    return "license: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CitationSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.CitationSource} CitationSource
                         */
                        CitationSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.CitationSource)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.CitationSource();
                            if (object.startIndex != null)
                                message.startIndex = object.startIndex | 0;
                            if (object.endIndex != null)
                                message.endIndex = object.endIndex | 0;
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.license != null)
                                message.license = String(object.license);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CitationSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @static
                         * @param {google.ai.generativelanguage.v1.CitationSource} message CitationSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CitationSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.startIndex != null && message.hasOwnProperty("startIndex")) {
                                object.startIndex = message.startIndex;
                                if (options.oneofs)
                                    object._startIndex = "startIndex";
                            }
                            if (message.endIndex != null && message.hasOwnProperty("endIndex")) {
                                object.endIndex = message.endIndex;
                                if (options.oneofs)
                                    object._endIndex = "endIndex";
                            }
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                object.uri = message.uri;
                                if (options.oneofs)
                                    object._uri = "uri";
                            }
                            if (message.license != null && message.hasOwnProperty("license")) {
                                object.license = message.license;
                                if (options.oneofs)
                                    object._license = "license";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CitationSource to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CitationSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CitationSource
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.CitationSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CitationSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.CitationSource";
                        };
    
                        return CitationSource;
                    })();
    
                    v1.Content = (function() {
    
                        /**
                         * Properties of a Content.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IContent
                         * @property {Array.<google.ai.generativelanguage.v1.IPart>|null} [parts] Content parts
                         * @property {string|null} [role] Content role
                         */
    
                        /**
                         * Constructs a new Content.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a Content.
                         * @implements IContent
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IContent=} [properties] Properties to set
                         */
                        function Content(properties) {
                            this.parts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Content parts.
                         * @member {Array.<google.ai.generativelanguage.v1.IPart>} parts
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @instance
                         */
                        Content.prototype.parts = $util.emptyArray;
    
                        /**
                         * Content role.
                         * @member {string} role
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @instance
                         */
                        Content.prototype.role = "";
    
                        /**
                         * Creates a new Content instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @static
                         * @param {google.ai.generativelanguage.v1.IContent=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.Content} Content instance
                         */
                        Content.create = function create(properties) {
                            return new Content(properties);
                        };
    
                        /**
                         * Encodes the specified Content message. Does not implicitly {@link google.ai.generativelanguage.v1.Content.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @static
                         * @param {google.ai.generativelanguage.v1.IContent} message Content message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Content.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parts != null && message.parts.length)
                                for (var i = 0; i < message.parts.length; ++i)
                                    $root.google.ai.generativelanguage.v1.Part.encode(message.parts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.role != null && Object.hasOwnProperty.call(message, "role"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.role);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Content message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.Content.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @static
                         * @param {google.ai.generativelanguage.v1.IContent} message Content message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Content.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Content message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.Content} Content
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Content.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.Content();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.parts && message.parts.length))
                                            message.parts = [];
                                        message.parts.push($root.google.ai.generativelanguage.v1.Part.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.role = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Content message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.Content} Content
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Content.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Content message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Content.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parts != null && message.hasOwnProperty("parts")) {
                                if (!Array.isArray(message.parts))
                                    return "parts: array expected";
                                for (var i = 0; i < message.parts.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.Part.verify(message.parts[i]);
                                    if (error)
                                        return "parts." + error;
                                }
                            }
                            if (message.role != null && message.hasOwnProperty("role"))
                                if (!$util.isString(message.role))
                                    return "role: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Content message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.Content} Content
                         */
                        Content.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.Content)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.Content();
                            if (object.parts) {
                                if (!Array.isArray(object.parts))
                                    throw TypeError(".google.ai.generativelanguage.v1.Content.parts: array expected");
                                message.parts = [];
                                for (var i = 0; i < object.parts.length; ++i) {
                                    if (typeof object.parts[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.Content.parts: object expected");
                                    message.parts[i] = $root.google.ai.generativelanguage.v1.Part.fromObject(object.parts[i]);
                                }
                            }
                            if (object.role != null)
                                message.role = String(object.role);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Content message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @static
                         * @param {google.ai.generativelanguage.v1.Content} message Content
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Content.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.parts = [];
                            if (options.defaults)
                                object.role = "";
                            if (message.parts && message.parts.length) {
                                object.parts = [];
                                for (var j = 0; j < message.parts.length; ++j)
                                    object.parts[j] = $root.google.ai.generativelanguage.v1.Part.toObject(message.parts[j], options);
                            }
                            if (message.role != null && message.hasOwnProperty("role"))
                                object.role = message.role;
                            return object;
                        };
    
                        /**
                         * Converts this Content to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Content.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Content
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.Content
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Content.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.Content";
                        };
    
                        return Content;
                    })();
    
                    v1.Part = (function() {
    
                        /**
                         * Properties of a Part.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IPart
                         * @property {string|null} [text] Part text
                         * @property {google.ai.generativelanguage.v1.IBlob|null} [inlineData] Part inlineData
                         */
    
                        /**
                         * Constructs a new Part.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a Part.
                         * @implements IPart
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IPart=} [properties] Properties to set
                         */
                        function Part(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Part text.
                         * @member {string|null|undefined} text
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @instance
                         */
                        Part.prototype.text = null;
    
                        /**
                         * Part inlineData.
                         * @member {google.ai.generativelanguage.v1.IBlob|null|undefined} inlineData
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @instance
                         */
                        Part.prototype.inlineData = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Part data.
                         * @member {"text"|"inlineData"|undefined} data
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @instance
                         */
                        Object.defineProperty(Part.prototype, "data", {
                            get: $util.oneOfGetter($oneOfFields = ["text", "inlineData"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Part instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @static
                         * @param {google.ai.generativelanguage.v1.IPart=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.Part} Part instance
                         */
                        Part.create = function create(properties) {
                            return new Part(properties);
                        };
    
                        /**
                         * Encodes the specified Part message. Does not implicitly {@link google.ai.generativelanguage.v1.Part.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @static
                         * @param {google.ai.generativelanguage.v1.IPart} message Part message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Part.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.text);
                            if (message.inlineData != null && Object.hasOwnProperty.call(message, "inlineData"))
                                $root.google.ai.generativelanguage.v1.Blob.encode(message.inlineData, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Part message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.Part.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @static
                         * @param {google.ai.generativelanguage.v1.IPart} message Part message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Part.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Part message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.Part} Part
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Part.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.Part();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.text = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.inlineData = $root.google.ai.generativelanguage.v1.Blob.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Part message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.Part} Part
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Part.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Part message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Part.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.text != null && message.hasOwnProperty("text")) {
                                properties.data = 1;
                                if (!$util.isString(message.text))
                                    return "text: string expected";
                            }
                            if (message.inlineData != null && message.hasOwnProperty("inlineData")) {
                                if (properties.data === 1)
                                    return "data: multiple values";
                                properties.data = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1.Blob.verify(message.inlineData);
                                    if (error)
                                        return "inlineData." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Part message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.Part} Part
                         */
                        Part.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.Part)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.Part();
                            if (object.text != null)
                                message.text = String(object.text);
                            if (object.inlineData != null) {
                                if (typeof object.inlineData !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.Part.inlineData: object expected");
                                message.inlineData = $root.google.ai.generativelanguage.v1.Blob.fromObject(object.inlineData);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Part message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @static
                         * @param {google.ai.generativelanguage.v1.Part} message Part
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Part.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.text != null && message.hasOwnProperty("text")) {
                                object.text = message.text;
                                if (options.oneofs)
                                    object.data = "text";
                            }
                            if (message.inlineData != null && message.hasOwnProperty("inlineData")) {
                                object.inlineData = $root.google.ai.generativelanguage.v1.Blob.toObject(message.inlineData, options);
                                if (options.oneofs)
                                    object.data = "inlineData";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Part to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Part.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Part
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.Part
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Part.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.Part";
                        };
    
                        return Part;
                    })();
    
                    v1.Blob = (function() {
    
                        /**
                         * Properties of a Blob.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IBlob
                         * @property {string|null} [mimeType] Blob mimeType
                         * @property {Uint8Array|null} [data] Blob data
                         */
    
                        /**
                         * Constructs a new Blob.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a Blob.
                         * @implements IBlob
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IBlob=} [properties] Properties to set
                         */
                        function Blob(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Blob mimeType.
                         * @member {string} mimeType
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @instance
                         */
                        Blob.prototype.mimeType = "";
    
                        /**
                         * Blob data.
                         * @member {Uint8Array} data
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @instance
                         */
                        Blob.prototype.data = $util.newBuffer([]);
    
                        /**
                         * Creates a new Blob instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @static
                         * @param {google.ai.generativelanguage.v1.IBlob=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.Blob} Blob instance
                         */
                        Blob.create = function create(properties) {
                            return new Blob(properties);
                        };
    
                        /**
                         * Encodes the specified Blob message. Does not implicitly {@link google.ai.generativelanguage.v1.Blob.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @static
                         * @param {google.ai.generativelanguage.v1.IBlob} message Blob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Blob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mimeType);
                            if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.data);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Blob message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.Blob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @static
                         * @param {google.ai.generativelanguage.v1.IBlob} message Blob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Blob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Blob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.Blob} Blob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Blob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.Blob();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mimeType = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.data = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Blob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.Blob} Blob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Blob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Blob message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Blob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                if (!$util.isString(message.mimeType))
                                    return "mimeType: string expected";
                            if (message.data != null && message.hasOwnProperty("data"))
                                if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                    return "data: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates a Blob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.Blob} Blob
                         */
                        Blob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.Blob)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.Blob();
                            if (object.mimeType != null)
                                message.mimeType = String(object.mimeType);
                            if (object.data != null)
                                if (typeof object.data === "string")
                                    $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                                else if (object.data.length >= 0)
                                    message.data = object.data;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Blob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @static
                         * @param {google.ai.generativelanguage.v1.Blob} message Blob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Blob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.mimeType = "";
                                if (options.bytes === String)
                                    object.data = "";
                                else {
                                    object.data = [];
                                    if (options.bytes !== Array)
                                        object.data = $util.newBuffer(object.data);
                                }
                            }
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                object.mimeType = message.mimeType;
                            if (message.data != null && message.hasOwnProperty("data"))
                                object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                            return object;
                        };
    
                        /**
                         * Converts this Blob to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Blob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Blob
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.Blob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Blob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.Blob";
                        };
    
                        return Blob;
                    })();
    
                    v1.GenerativeService = (function() {
    
                        /**
                         * Constructs a new GenerativeService service.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a GenerativeService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function GenerativeService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (GenerativeService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = GenerativeService;
    
                        /**
                         * Creates new GenerativeService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {GenerativeService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        GenerativeService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1.GenerativeService|generateContent}.
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @typedef GenerateContentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1.GenerateContentResponse} [response] GenerateContentResponse
                         */
    
                        /**
                         * Calls GenerateContent.
                         * @function generateContent
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IGenerateContentRequest} request GenerateContentRequest message or plain object
                         * @param {google.ai.generativelanguage.v1.GenerativeService.GenerateContentCallback} callback Node-style callback called with the error, if any, and GenerateContentResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.generateContent = function generateContent(request, callback) {
                            return this.rpcCall(generateContent, $root.google.ai.generativelanguage.v1.GenerateContentRequest, $root.google.ai.generativelanguage.v1.GenerateContentResponse, request, callback);
                        }, "name", { value: "GenerateContent" });
    
                        /**
                         * Calls GenerateContent.
                         * @function generateContent
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IGenerateContentRequest} request GenerateContentRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1.GenerateContentResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1.GenerativeService|streamGenerateContent}.
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @typedef StreamGenerateContentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1.GenerateContentResponse} [response] GenerateContentResponse
                         */
    
                        /**
                         * Calls StreamGenerateContent.
                         * @function streamGenerateContent
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IGenerateContentRequest} request GenerateContentRequest message or plain object
                         * @param {google.ai.generativelanguage.v1.GenerativeService.StreamGenerateContentCallback} callback Node-style callback called with the error, if any, and GenerateContentResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.streamGenerateContent = function streamGenerateContent(request, callback) {
                            return this.rpcCall(streamGenerateContent, $root.google.ai.generativelanguage.v1.GenerateContentRequest, $root.google.ai.generativelanguage.v1.GenerateContentResponse, request, callback);
                        }, "name", { value: "StreamGenerateContent" });
    
                        /**
                         * Calls StreamGenerateContent.
                         * @function streamGenerateContent
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IGenerateContentRequest} request GenerateContentRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1.GenerateContentResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1.GenerativeService|embedContent}.
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @typedef EmbedContentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1.EmbedContentResponse} [response] EmbedContentResponse
                         */
    
                        /**
                         * Calls EmbedContent.
                         * @function embedContent
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IEmbedContentRequest} request EmbedContentRequest message or plain object
                         * @param {google.ai.generativelanguage.v1.GenerativeService.EmbedContentCallback} callback Node-style callback called with the error, if any, and EmbedContentResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.embedContent = function embedContent(request, callback) {
                            return this.rpcCall(embedContent, $root.google.ai.generativelanguage.v1.EmbedContentRequest, $root.google.ai.generativelanguage.v1.EmbedContentResponse, request, callback);
                        }, "name", { value: "EmbedContent" });
    
                        /**
                         * Calls EmbedContent.
                         * @function embedContent
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IEmbedContentRequest} request EmbedContentRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1.EmbedContentResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1.GenerativeService|batchEmbedContents}.
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @typedef BatchEmbedContentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1.BatchEmbedContentsResponse} [response] BatchEmbedContentsResponse
                         */
    
                        /**
                         * Calls BatchEmbedContents.
                         * @function batchEmbedContents
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IBatchEmbedContentsRequest} request BatchEmbedContentsRequest message or plain object
                         * @param {google.ai.generativelanguage.v1.GenerativeService.BatchEmbedContentsCallback} callback Node-style callback called with the error, if any, and BatchEmbedContentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.batchEmbedContents = function batchEmbedContents(request, callback) {
                            return this.rpcCall(batchEmbedContents, $root.google.ai.generativelanguage.v1.BatchEmbedContentsRequest, $root.google.ai.generativelanguage.v1.BatchEmbedContentsResponse, request, callback);
                        }, "name", { value: "BatchEmbedContents" });
    
                        /**
                         * Calls BatchEmbedContents.
                         * @function batchEmbedContents
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IBatchEmbedContentsRequest} request BatchEmbedContentsRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1.BatchEmbedContentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1.GenerativeService|countTokens}.
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @typedef CountTokensCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1.CountTokensResponse} [response] CountTokensResponse
                         */
    
                        /**
                         * Calls CountTokens.
                         * @function countTokens
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.ICountTokensRequest} request CountTokensRequest message or plain object
                         * @param {google.ai.generativelanguage.v1.GenerativeService.CountTokensCallback} callback Node-style callback called with the error, if any, and CountTokensResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.countTokens = function countTokens(request, callback) {
                            return this.rpcCall(countTokens, $root.google.ai.generativelanguage.v1.CountTokensRequest, $root.google.ai.generativelanguage.v1.CountTokensResponse, request, callback);
                        }, "name", { value: "CountTokens" });
    
                        /**
                         * Calls CountTokens.
                         * @function countTokens
                         * @memberof google.ai.generativelanguage.v1.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.ICountTokensRequest} request CountTokensRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1.CountTokensResponse>} Promise
                         * @variation 2
                         */
    
                        return GenerativeService;
                    })();
    
                    /**
                     * TaskType enum.
                     * @name google.ai.generativelanguage.v1.TaskType
                     * @enum {number}
                     * @property {number} TASK_TYPE_UNSPECIFIED=0 TASK_TYPE_UNSPECIFIED value
                     * @property {number} RETRIEVAL_QUERY=1 RETRIEVAL_QUERY value
                     * @property {number} RETRIEVAL_DOCUMENT=2 RETRIEVAL_DOCUMENT value
                     * @property {number} SEMANTIC_SIMILARITY=3 SEMANTIC_SIMILARITY value
                     * @property {number} CLASSIFICATION=4 CLASSIFICATION value
                     * @property {number} CLUSTERING=5 CLUSTERING value
                     * @property {number} QUESTION_ANSWERING=6 QUESTION_ANSWERING value
                     * @property {number} FACT_VERIFICATION=7 FACT_VERIFICATION value
                     */
                    v1.TaskType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TASK_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "RETRIEVAL_QUERY"] = 1;
                        values[valuesById[2] = "RETRIEVAL_DOCUMENT"] = 2;
                        values[valuesById[3] = "SEMANTIC_SIMILARITY"] = 3;
                        values[valuesById[4] = "CLASSIFICATION"] = 4;
                        values[valuesById[5] = "CLUSTERING"] = 5;
                        values[valuesById[6] = "QUESTION_ANSWERING"] = 6;
                        values[valuesById[7] = "FACT_VERIFICATION"] = 7;
                        return values;
                    })();
    
                    v1.GenerateContentRequest = (function() {
    
                        /**
                         * Properties of a GenerateContentRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IGenerateContentRequest
                         * @property {string|null} [model] GenerateContentRequest model
                         * @property {Array.<google.ai.generativelanguage.v1.IContent>|null} [contents] GenerateContentRequest contents
                         * @property {Array.<google.ai.generativelanguage.v1.ISafetySetting>|null} [safetySettings] GenerateContentRequest safetySettings
                         * @property {google.ai.generativelanguage.v1.IGenerationConfig|null} [generationConfig] GenerateContentRequest generationConfig
                         */
    
                        /**
                         * Constructs a new GenerateContentRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a GenerateContentRequest.
                         * @implements IGenerateContentRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IGenerateContentRequest=} [properties] Properties to set
                         */
                        function GenerateContentRequest(properties) {
                            this.contents = [];
                            this.safetySettings = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateContentRequest model.
                         * @member {string} model
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.model = "";
    
                        /**
                         * GenerateContentRequest contents.
                         * @member {Array.<google.ai.generativelanguage.v1.IContent>} contents
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.contents = $util.emptyArray;
    
                        /**
                         * GenerateContentRequest safetySettings.
                         * @member {Array.<google.ai.generativelanguage.v1.ISafetySetting>} safetySettings
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.safetySettings = $util.emptyArray;
    
                        /**
                         * GenerateContentRequest generationConfig.
                         * @member {google.ai.generativelanguage.v1.IGenerationConfig|null|undefined} generationConfig
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.generationConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GenerateContentRequest _generationConfig.
                         * @member {"generationConfig"|undefined} _generationConfig
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @instance
                         */
                        Object.defineProperty(GenerateContentRequest.prototype, "_generationConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["generationConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GenerateContentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGenerateContentRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.GenerateContentRequest} GenerateContentRequest instance
                         */
                        GenerateContentRequest.create = function create(properties) {
                            return new GenerateContentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateContentRequest message. Does not implicitly {@link google.ai.generativelanguage.v1.GenerateContentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGenerateContentRequest} message GenerateContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateContentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.model != null && Object.hasOwnProperty.call(message, "model"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.model);
                            if (message.contents != null && message.contents.length)
                                for (var i = 0; i < message.contents.length; ++i)
                                    $root.google.ai.generativelanguage.v1.Content.encode(message.contents[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.safetySettings != null && message.safetySettings.length)
                                for (var i = 0; i < message.safetySettings.length; ++i)
                                    $root.google.ai.generativelanguage.v1.SafetySetting.encode(message.safetySettings[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.generationConfig != null && Object.hasOwnProperty.call(message, "generationConfig"))
                                $root.google.ai.generativelanguage.v1.GenerationConfig.encode(message.generationConfig, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateContentRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.GenerateContentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGenerateContentRequest} message GenerateContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateContentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateContentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.GenerateContentRequest} GenerateContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateContentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.GenerateContentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.model = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.contents && message.contents.length))
                                            message.contents = [];
                                        message.contents.push($root.google.ai.generativelanguage.v1.Content.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.safetySettings && message.safetySettings.length))
                                            message.safetySettings = [];
                                        message.safetySettings.push($root.google.ai.generativelanguage.v1.SafetySetting.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.generationConfig = $root.google.ai.generativelanguage.v1.GenerationConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateContentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.GenerateContentRequest} GenerateContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateContentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateContentRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateContentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.model != null && message.hasOwnProperty("model"))
                                if (!$util.isString(message.model))
                                    return "model: string expected";
                            if (message.contents != null && message.hasOwnProperty("contents")) {
                                if (!Array.isArray(message.contents))
                                    return "contents: array expected";
                                for (var i = 0; i < message.contents.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.Content.verify(message.contents[i]);
                                    if (error)
                                        return "contents." + error;
                                }
                            }
                            if (message.safetySettings != null && message.hasOwnProperty("safetySettings")) {
                                if (!Array.isArray(message.safetySettings))
                                    return "safetySettings: array expected";
                                for (var i = 0; i < message.safetySettings.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.SafetySetting.verify(message.safetySettings[i]);
                                    if (error)
                                        return "safetySettings." + error;
                                }
                            }
                            if (message.generationConfig != null && message.hasOwnProperty("generationConfig")) {
                                properties._generationConfig = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1.GenerationConfig.verify(message.generationConfig);
                                    if (error)
                                        return "generationConfig." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenerateContentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.GenerateContentRequest} GenerateContentRequest
                         */
                        GenerateContentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.GenerateContentRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.GenerateContentRequest();
                            if (object.model != null)
                                message.model = String(object.model);
                            if (object.contents) {
                                if (!Array.isArray(object.contents))
                                    throw TypeError(".google.ai.generativelanguage.v1.GenerateContentRequest.contents: array expected");
                                message.contents = [];
                                for (var i = 0; i < object.contents.length; ++i) {
                                    if (typeof object.contents[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.GenerateContentRequest.contents: object expected");
                                    message.contents[i] = $root.google.ai.generativelanguage.v1.Content.fromObject(object.contents[i]);
                                }
                            }
                            if (object.safetySettings) {
                                if (!Array.isArray(object.safetySettings))
                                    throw TypeError(".google.ai.generativelanguage.v1.GenerateContentRequest.safetySettings: array expected");
                                message.safetySettings = [];
                                for (var i = 0; i < object.safetySettings.length; ++i) {
                                    if (typeof object.safetySettings[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.GenerateContentRequest.safetySettings: object expected");
                                    message.safetySettings[i] = $root.google.ai.generativelanguage.v1.SafetySetting.fromObject(object.safetySettings[i]);
                                }
                            }
                            if (object.generationConfig != null) {
                                if (typeof object.generationConfig !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.GenerateContentRequest.generationConfig: object expected");
                                message.generationConfig = $root.google.ai.generativelanguage.v1.GenerationConfig.fromObject(object.generationConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateContentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.GenerateContentRequest} message GenerateContentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateContentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.contents = [];
                                object.safetySettings = [];
                            }
                            if (options.defaults)
                                object.model = "";
                            if (message.model != null && message.hasOwnProperty("model"))
                                object.model = message.model;
                            if (message.contents && message.contents.length) {
                                object.contents = [];
                                for (var j = 0; j < message.contents.length; ++j)
                                    object.contents[j] = $root.google.ai.generativelanguage.v1.Content.toObject(message.contents[j], options);
                            }
                            if (message.safetySettings && message.safetySettings.length) {
                                object.safetySettings = [];
                                for (var j = 0; j < message.safetySettings.length; ++j)
                                    object.safetySettings[j] = $root.google.ai.generativelanguage.v1.SafetySetting.toObject(message.safetySettings[j], options);
                            }
                            if (message.generationConfig != null && message.hasOwnProperty("generationConfig")) {
                                object.generationConfig = $root.google.ai.generativelanguage.v1.GenerationConfig.toObject(message.generationConfig, options);
                                if (options.oneofs)
                                    object._generationConfig = "generationConfig";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GenerateContentRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateContentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateContentRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.GenerateContentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateContentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.GenerateContentRequest";
                        };
    
                        return GenerateContentRequest;
                    })();
    
                    v1.GenerationConfig = (function() {
    
                        /**
                         * Properties of a GenerationConfig.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IGenerationConfig
                         * @property {number|null} [candidateCount] GenerationConfig candidateCount
                         * @property {Array.<string>|null} [stopSequences] GenerationConfig stopSequences
                         * @property {number|null} [maxOutputTokens] GenerationConfig maxOutputTokens
                         * @property {number|null} [temperature] GenerationConfig temperature
                         * @property {number|null} [topP] GenerationConfig topP
                         * @property {number|null} [topK] GenerationConfig topK
                         * @property {number|null} [presencePenalty] GenerationConfig presencePenalty
                         * @property {number|null} [frequencyPenalty] GenerationConfig frequencyPenalty
                         * @property {boolean|null} [responseLogprobs] GenerationConfig responseLogprobs
                         * @property {number|null} [logprobs] GenerationConfig logprobs
                         * @property {boolean|null} [enableEnhancedCivicAnswers] GenerationConfig enableEnhancedCivicAnswers
                         */
    
                        /**
                         * Constructs a new GenerationConfig.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a GenerationConfig.
                         * @implements IGenerationConfig
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IGenerationConfig=} [properties] Properties to set
                         */
                        function GenerationConfig(properties) {
                            this.stopSequences = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerationConfig candidateCount.
                         * @member {number|null|undefined} candidateCount
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        GenerationConfig.prototype.candidateCount = null;
    
                        /**
                         * GenerationConfig stopSequences.
                         * @member {Array.<string>} stopSequences
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        GenerationConfig.prototype.stopSequences = $util.emptyArray;
    
                        /**
                         * GenerationConfig maxOutputTokens.
                         * @member {number|null|undefined} maxOutputTokens
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        GenerationConfig.prototype.maxOutputTokens = null;
    
                        /**
                         * GenerationConfig temperature.
                         * @member {number|null|undefined} temperature
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        GenerationConfig.prototype.temperature = null;
    
                        /**
                         * GenerationConfig topP.
                         * @member {number|null|undefined} topP
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        GenerationConfig.prototype.topP = null;
    
                        /**
                         * GenerationConfig topK.
                         * @member {number|null|undefined} topK
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        GenerationConfig.prototype.topK = null;
    
                        /**
                         * GenerationConfig presencePenalty.
                         * @member {number|null|undefined} presencePenalty
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        GenerationConfig.prototype.presencePenalty = null;
    
                        /**
                         * GenerationConfig frequencyPenalty.
                         * @member {number|null|undefined} frequencyPenalty
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        GenerationConfig.prototype.frequencyPenalty = null;
    
                        /**
                         * GenerationConfig responseLogprobs.
                         * @member {boolean|null|undefined} responseLogprobs
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        GenerationConfig.prototype.responseLogprobs = null;
    
                        /**
                         * GenerationConfig logprobs.
                         * @member {number|null|undefined} logprobs
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        GenerationConfig.prototype.logprobs = null;
    
                        /**
                         * GenerationConfig enableEnhancedCivicAnswers.
                         * @member {boolean|null|undefined} enableEnhancedCivicAnswers
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        GenerationConfig.prototype.enableEnhancedCivicAnswers = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GenerationConfig _candidateCount.
                         * @member {"candidateCount"|undefined} _candidateCount
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        Object.defineProperty(GenerationConfig.prototype, "_candidateCount", {
                            get: $util.oneOfGetter($oneOfFields = ["candidateCount"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerationConfig _maxOutputTokens.
                         * @member {"maxOutputTokens"|undefined} _maxOutputTokens
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        Object.defineProperty(GenerationConfig.prototype, "_maxOutputTokens", {
                            get: $util.oneOfGetter($oneOfFields = ["maxOutputTokens"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerationConfig _temperature.
                         * @member {"temperature"|undefined} _temperature
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        Object.defineProperty(GenerationConfig.prototype, "_temperature", {
                            get: $util.oneOfGetter($oneOfFields = ["temperature"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerationConfig _topP.
                         * @member {"topP"|undefined} _topP
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        Object.defineProperty(GenerationConfig.prototype, "_topP", {
                            get: $util.oneOfGetter($oneOfFields = ["topP"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerationConfig _topK.
                         * @member {"topK"|undefined} _topK
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        Object.defineProperty(GenerationConfig.prototype, "_topK", {
                            get: $util.oneOfGetter($oneOfFields = ["topK"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerationConfig _presencePenalty.
                         * @member {"presencePenalty"|undefined} _presencePenalty
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        Object.defineProperty(GenerationConfig.prototype, "_presencePenalty", {
                            get: $util.oneOfGetter($oneOfFields = ["presencePenalty"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerationConfig _frequencyPenalty.
                         * @member {"frequencyPenalty"|undefined} _frequencyPenalty
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        Object.defineProperty(GenerationConfig.prototype, "_frequencyPenalty", {
                            get: $util.oneOfGetter($oneOfFields = ["frequencyPenalty"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerationConfig _responseLogprobs.
                         * @member {"responseLogprobs"|undefined} _responseLogprobs
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        Object.defineProperty(GenerationConfig.prototype, "_responseLogprobs", {
                            get: $util.oneOfGetter($oneOfFields = ["responseLogprobs"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerationConfig _logprobs.
                         * @member {"logprobs"|undefined} _logprobs
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        Object.defineProperty(GenerationConfig.prototype, "_logprobs", {
                            get: $util.oneOfGetter($oneOfFields = ["logprobs"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerationConfig _enableEnhancedCivicAnswers.
                         * @member {"enableEnhancedCivicAnswers"|undefined} _enableEnhancedCivicAnswers
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         */
                        Object.defineProperty(GenerationConfig.prototype, "_enableEnhancedCivicAnswers", {
                            get: $util.oneOfGetter($oneOfFields = ["enableEnhancedCivicAnswers"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GenerationConfig instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGenerationConfig=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.GenerationConfig} GenerationConfig instance
                         */
                        GenerationConfig.create = function create(properties) {
                            return new GenerationConfig(properties);
                        };
    
                        /**
                         * Encodes the specified GenerationConfig message. Does not implicitly {@link google.ai.generativelanguage.v1.GenerationConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGenerationConfig} message GenerationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerationConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.candidateCount != null && Object.hasOwnProperty.call(message, "candidateCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.candidateCount);
                            if (message.stopSequences != null && message.stopSequences.length)
                                for (var i = 0; i < message.stopSequences.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.stopSequences[i]);
                            if (message.maxOutputTokens != null && Object.hasOwnProperty.call(message, "maxOutputTokens"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.maxOutputTokens);
                            if (message.temperature != null && Object.hasOwnProperty.call(message, "temperature"))
                                writer.uint32(/* id 5, wireType 5 =*/45).float(message.temperature);
                            if (message.topP != null && Object.hasOwnProperty.call(message, "topP"))
                                writer.uint32(/* id 6, wireType 5 =*/53).float(message.topP);
                            if (message.topK != null && Object.hasOwnProperty.call(message, "topK"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.topK);
                            if (message.presencePenalty != null && Object.hasOwnProperty.call(message, "presencePenalty"))
                                writer.uint32(/* id 15, wireType 5 =*/125).float(message.presencePenalty);
                            if (message.frequencyPenalty != null && Object.hasOwnProperty.call(message, "frequencyPenalty"))
                                writer.uint32(/* id 16, wireType 5 =*/133).float(message.frequencyPenalty);
                            if (message.responseLogprobs != null && Object.hasOwnProperty.call(message, "responseLogprobs"))
                                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.responseLogprobs);
                            if (message.logprobs != null && Object.hasOwnProperty.call(message, "logprobs"))
                                writer.uint32(/* id 18, wireType 0 =*/144).int32(message.logprobs);
                            if (message.enableEnhancedCivicAnswers != null && Object.hasOwnProperty.call(message, "enableEnhancedCivicAnswers"))
                                writer.uint32(/* id 19, wireType 0 =*/152).bool(message.enableEnhancedCivicAnswers);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerationConfig message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.GenerationConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGenerationConfig} message GenerationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerationConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerationConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.GenerationConfig} GenerationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerationConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.GenerationConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.candidateCount = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.stopSequences && message.stopSequences.length))
                                            message.stopSequences = [];
                                        message.stopSequences.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        message.maxOutputTokens = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.temperature = reader.float();
                                        break;
                                    }
                                case 6: {
                                        message.topP = reader.float();
                                        break;
                                    }
                                case 7: {
                                        message.topK = reader.int32();
                                        break;
                                    }
                                case 15: {
                                        message.presencePenalty = reader.float();
                                        break;
                                    }
                                case 16: {
                                        message.frequencyPenalty = reader.float();
                                        break;
                                    }
                                case 17: {
                                        message.responseLogprobs = reader.bool();
                                        break;
                                    }
                                case 18: {
                                        message.logprobs = reader.int32();
                                        break;
                                    }
                                case 19: {
                                        message.enableEnhancedCivicAnswers = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerationConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.GenerationConfig} GenerationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerationConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerationConfig message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerationConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.candidateCount != null && message.hasOwnProperty("candidateCount")) {
                                properties._candidateCount = 1;
                                if (!$util.isInteger(message.candidateCount))
                                    return "candidateCount: integer expected";
                            }
                            if (message.stopSequences != null && message.hasOwnProperty("stopSequences")) {
                                if (!Array.isArray(message.stopSequences))
                                    return "stopSequences: array expected";
                                for (var i = 0; i < message.stopSequences.length; ++i)
                                    if (!$util.isString(message.stopSequences[i]))
                                        return "stopSequences: string[] expected";
                            }
                            if (message.maxOutputTokens != null && message.hasOwnProperty("maxOutputTokens")) {
                                properties._maxOutputTokens = 1;
                                if (!$util.isInteger(message.maxOutputTokens))
                                    return "maxOutputTokens: integer expected";
                            }
                            if (message.temperature != null && message.hasOwnProperty("temperature")) {
                                properties._temperature = 1;
                                if (typeof message.temperature !== "number")
                                    return "temperature: number expected";
                            }
                            if (message.topP != null && message.hasOwnProperty("topP")) {
                                properties._topP = 1;
                                if (typeof message.topP !== "number")
                                    return "topP: number expected";
                            }
                            if (message.topK != null && message.hasOwnProperty("topK")) {
                                properties._topK = 1;
                                if (!$util.isInteger(message.topK))
                                    return "topK: integer expected";
                            }
                            if (message.presencePenalty != null && message.hasOwnProperty("presencePenalty")) {
                                properties._presencePenalty = 1;
                                if (typeof message.presencePenalty !== "number")
                                    return "presencePenalty: number expected";
                            }
                            if (message.frequencyPenalty != null && message.hasOwnProperty("frequencyPenalty")) {
                                properties._frequencyPenalty = 1;
                                if (typeof message.frequencyPenalty !== "number")
                                    return "frequencyPenalty: number expected";
                            }
                            if (message.responseLogprobs != null && message.hasOwnProperty("responseLogprobs")) {
                                properties._responseLogprobs = 1;
                                if (typeof message.responseLogprobs !== "boolean")
                                    return "responseLogprobs: boolean expected";
                            }
                            if (message.logprobs != null && message.hasOwnProperty("logprobs")) {
                                properties._logprobs = 1;
                                if (!$util.isInteger(message.logprobs))
                                    return "logprobs: integer expected";
                            }
                            if (message.enableEnhancedCivicAnswers != null && message.hasOwnProperty("enableEnhancedCivicAnswers")) {
                                properties._enableEnhancedCivicAnswers = 1;
                                if (typeof message.enableEnhancedCivicAnswers !== "boolean")
                                    return "enableEnhancedCivicAnswers: boolean expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenerationConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.GenerationConfig} GenerationConfig
                         */
                        GenerationConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.GenerationConfig)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.GenerationConfig();
                            if (object.candidateCount != null)
                                message.candidateCount = object.candidateCount | 0;
                            if (object.stopSequences) {
                                if (!Array.isArray(object.stopSequences))
                                    throw TypeError(".google.ai.generativelanguage.v1.GenerationConfig.stopSequences: array expected");
                                message.stopSequences = [];
                                for (var i = 0; i < object.stopSequences.length; ++i)
                                    message.stopSequences[i] = String(object.stopSequences[i]);
                            }
                            if (object.maxOutputTokens != null)
                                message.maxOutputTokens = object.maxOutputTokens | 0;
                            if (object.temperature != null)
                                message.temperature = Number(object.temperature);
                            if (object.topP != null)
                                message.topP = Number(object.topP);
                            if (object.topK != null)
                                message.topK = object.topK | 0;
                            if (object.presencePenalty != null)
                                message.presencePenalty = Number(object.presencePenalty);
                            if (object.frequencyPenalty != null)
                                message.frequencyPenalty = Number(object.frequencyPenalty);
                            if (object.responseLogprobs != null)
                                message.responseLogprobs = Boolean(object.responseLogprobs);
                            if (object.logprobs != null)
                                message.logprobs = object.logprobs | 0;
                            if (object.enableEnhancedCivicAnswers != null)
                                message.enableEnhancedCivicAnswers = Boolean(object.enableEnhancedCivicAnswers);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerationConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1.GenerationConfig} message GenerationConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerationConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stopSequences = [];
                            if (message.candidateCount != null && message.hasOwnProperty("candidateCount")) {
                                object.candidateCount = message.candidateCount;
                                if (options.oneofs)
                                    object._candidateCount = "candidateCount";
                            }
                            if (message.stopSequences && message.stopSequences.length) {
                                object.stopSequences = [];
                                for (var j = 0; j < message.stopSequences.length; ++j)
                                    object.stopSequences[j] = message.stopSequences[j];
                            }
                            if (message.maxOutputTokens != null && message.hasOwnProperty("maxOutputTokens")) {
                                object.maxOutputTokens = message.maxOutputTokens;
                                if (options.oneofs)
                                    object._maxOutputTokens = "maxOutputTokens";
                            }
                            if (message.temperature != null && message.hasOwnProperty("temperature")) {
                                object.temperature = options.json && !isFinite(message.temperature) ? String(message.temperature) : message.temperature;
                                if (options.oneofs)
                                    object._temperature = "temperature";
                            }
                            if (message.topP != null && message.hasOwnProperty("topP")) {
                                object.topP = options.json && !isFinite(message.topP) ? String(message.topP) : message.topP;
                                if (options.oneofs)
                                    object._topP = "topP";
                            }
                            if (message.topK != null && message.hasOwnProperty("topK")) {
                                object.topK = message.topK;
                                if (options.oneofs)
                                    object._topK = "topK";
                            }
                            if (message.presencePenalty != null && message.hasOwnProperty("presencePenalty")) {
                                object.presencePenalty = options.json && !isFinite(message.presencePenalty) ? String(message.presencePenalty) : message.presencePenalty;
                                if (options.oneofs)
                                    object._presencePenalty = "presencePenalty";
                            }
                            if (message.frequencyPenalty != null && message.hasOwnProperty("frequencyPenalty")) {
                                object.frequencyPenalty = options.json && !isFinite(message.frequencyPenalty) ? String(message.frequencyPenalty) : message.frequencyPenalty;
                                if (options.oneofs)
                                    object._frequencyPenalty = "frequencyPenalty";
                            }
                            if (message.responseLogprobs != null && message.hasOwnProperty("responseLogprobs")) {
                                object.responseLogprobs = message.responseLogprobs;
                                if (options.oneofs)
                                    object._responseLogprobs = "responseLogprobs";
                            }
                            if (message.logprobs != null && message.hasOwnProperty("logprobs")) {
                                object.logprobs = message.logprobs;
                                if (options.oneofs)
                                    object._logprobs = "logprobs";
                            }
                            if (message.enableEnhancedCivicAnswers != null && message.hasOwnProperty("enableEnhancedCivicAnswers")) {
                                object.enableEnhancedCivicAnswers = message.enableEnhancedCivicAnswers;
                                if (options.oneofs)
                                    object._enableEnhancedCivicAnswers = "enableEnhancedCivicAnswers";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GenerationConfig to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerationConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerationConfig
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.GenerationConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerationConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.GenerationConfig";
                        };
    
                        return GenerationConfig;
                    })();
    
                    v1.GenerateContentResponse = (function() {
    
                        /**
                         * Properties of a GenerateContentResponse.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IGenerateContentResponse
                         * @property {Array.<google.ai.generativelanguage.v1.ICandidate>|null} [candidates] GenerateContentResponse candidates
                         * @property {google.ai.generativelanguage.v1.GenerateContentResponse.IPromptFeedback|null} [promptFeedback] GenerateContentResponse promptFeedback
                         * @property {google.ai.generativelanguage.v1.GenerateContentResponse.IUsageMetadata|null} [usageMetadata] GenerateContentResponse usageMetadata
                         * @property {string|null} [modelVersion] GenerateContentResponse modelVersion
                         */
    
                        /**
                         * Constructs a new GenerateContentResponse.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a GenerateContentResponse.
                         * @implements IGenerateContentResponse
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IGenerateContentResponse=} [properties] Properties to set
                         */
                        function GenerateContentResponse(properties) {
                            this.candidates = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateContentResponse candidates.
                         * @member {Array.<google.ai.generativelanguage.v1.ICandidate>} candidates
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @instance
                         */
                        GenerateContentResponse.prototype.candidates = $util.emptyArray;
    
                        /**
                         * GenerateContentResponse promptFeedback.
                         * @member {google.ai.generativelanguage.v1.GenerateContentResponse.IPromptFeedback|null|undefined} promptFeedback
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @instance
                         */
                        GenerateContentResponse.prototype.promptFeedback = null;
    
                        /**
                         * GenerateContentResponse usageMetadata.
                         * @member {google.ai.generativelanguage.v1.GenerateContentResponse.IUsageMetadata|null|undefined} usageMetadata
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @instance
                         */
                        GenerateContentResponse.prototype.usageMetadata = null;
    
                        /**
                         * GenerateContentResponse modelVersion.
                         * @member {string} modelVersion
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @instance
                         */
                        GenerateContentResponse.prototype.modelVersion = "";
    
                        /**
                         * Creates a new GenerateContentResponse instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGenerateContentResponse=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.GenerateContentResponse} GenerateContentResponse instance
                         */
                        GenerateContentResponse.create = function create(properties) {
                            return new GenerateContentResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateContentResponse message. Does not implicitly {@link google.ai.generativelanguage.v1.GenerateContentResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGenerateContentResponse} message GenerateContentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateContentResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.candidates != null && message.candidates.length)
                                for (var i = 0; i < message.candidates.length; ++i)
                                    $root.google.ai.generativelanguage.v1.Candidate.encode(message.candidates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.promptFeedback != null && Object.hasOwnProperty.call(message, "promptFeedback"))
                                $root.google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.encode(message.promptFeedback, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.usageMetadata != null && Object.hasOwnProperty.call(message, "usageMetadata"))
                                $root.google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata.encode(message.usageMetadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.modelVersion != null && Object.hasOwnProperty.call(message, "modelVersion"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.modelVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateContentResponse message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.GenerateContentResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGenerateContentResponse} message GenerateContentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateContentResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateContentResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.GenerateContentResponse} GenerateContentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateContentResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.GenerateContentResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.candidates && message.candidates.length))
                                            message.candidates = [];
                                        message.candidates.push($root.google.ai.generativelanguage.v1.Candidate.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.promptFeedback = $root.google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.usageMetadata = $root.google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.modelVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateContentResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.GenerateContentResponse} GenerateContentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateContentResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateContentResponse message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateContentResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.candidates != null && message.hasOwnProperty("candidates")) {
                                if (!Array.isArray(message.candidates))
                                    return "candidates: array expected";
                                for (var i = 0; i < message.candidates.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.Candidate.verify(message.candidates[i]);
                                    if (error)
                                        return "candidates." + error;
                                }
                            }
                            if (message.promptFeedback != null && message.hasOwnProperty("promptFeedback")) {
                                var error = $root.google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.verify(message.promptFeedback);
                                if (error)
                                    return "promptFeedback." + error;
                            }
                            if (message.usageMetadata != null && message.hasOwnProperty("usageMetadata")) {
                                var error = $root.google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata.verify(message.usageMetadata);
                                if (error)
                                    return "usageMetadata." + error;
                            }
                            if (message.modelVersion != null && message.hasOwnProperty("modelVersion"))
                                if (!$util.isString(message.modelVersion))
                                    return "modelVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateContentResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.GenerateContentResponse} GenerateContentResponse
                         */
                        GenerateContentResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.GenerateContentResponse)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.GenerateContentResponse();
                            if (object.candidates) {
                                if (!Array.isArray(object.candidates))
                                    throw TypeError(".google.ai.generativelanguage.v1.GenerateContentResponse.candidates: array expected");
                                message.candidates = [];
                                for (var i = 0; i < object.candidates.length; ++i) {
                                    if (typeof object.candidates[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.GenerateContentResponse.candidates: object expected");
                                    message.candidates[i] = $root.google.ai.generativelanguage.v1.Candidate.fromObject(object.candidates[i]);
                                }
                            }
                            if (object.promptFeedback != null) {
                                if (typeof object.promptFeedback !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.GenerateContentResponse.promptFeedback: object expected");
                                message.promptFeedback = $root.google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.fromObject(object.promptFeedback);
                            }
                            if (object.usageMetadata != null) {
                                if (typeof object.usageMetadata !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.GenerateContentResponse.usageMetadata: object expected");
                                message.usageMetadata = $root.google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata.fromObject(object.usageMetadata);
                            }
                            if (object.modelVersion != null)
                                message.modelVersion = String(object.modelVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateContentResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.GenerateContentResponse} message GenerateContentResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateContentResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.candidates = [];
                            if (options.defaults) {
                                object.promptFeedback = null;
                                object.usageMetadata = null;
                                object.modelVersion = "";
                            }
                            if (message.candidates && message.candidates.length) {
                                object.candidates = [];
                                for (var j = 0; j < message.candidates.length; ++j)
                                    object.candidates[j] = $root.google.ai.generativelanguage.v1.Candidate.toObject(message.candidates[j], options);
                            }
                            if (message.promptFeedback != null && message.hasOwnProperty("promptFeedback"))
                                object.promptFeedback = $root.google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.toObject(message.promptFeedback, options);
                            if (message.usageMetadata != null && message.hasOwnProperty("usageMetadata"))
                                object.usageMetadata = $root.google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata.toObject(message.usageMetadata, options);
                            if (message.modelVersion != null && message.hasOwnProperty("modelVersion"))
                                object.modelVersion = message.modelVersion;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateContentResponse to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateContentResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateContentResponse
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateContentResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.GenerateContentResponse";
                        };
    
                        GenerateContentResponse.PromptFeedback = (function() {
    
                            /**
                             * Properties of a PromptFeedback.
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                             * @interface IPromptFeedback
                             * @property {google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.BlockReason|null} [blockReason] PromptFeedback blockReason
                             * @property {Array.<google.ai.generativelanguage.v1.ISafetyRating>|null} [safetyRatings] PromptFeedback safetyRatings
                             */
    
                            /**
                             * Constructs a new PromptFeedback.
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                             * @classdesc Represents a PromptFeedback.
                             * @implements IPromptFeedback
                             * @constructor
                             * @param {google.ai.generativelanguage.v1.GenerateContentResponse.IPromptFeedback=} [properties] Properties to set
                             */
                            function PromptFeedback(properties) {
                                this.safetyRatings = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PromptFeedback blockReason.
                             * @member {google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.BlockReason} blockReason
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @instance
                             */
                            PromptFeedback.prototype.blockReason = 0;
    
                            /**
                             * PromptFeedback safetyRatings.
                             * @member {Array.<google.ai.generativelanguage.v1.ISafetyRating>} safetyRatings
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @instance
                             */
                            PromptFeedback.prototype.safetyRatings = $util.emptyArray;
    
                            /**
                             * Creates a new PromptFeedback instance using the specified properties.
                             * @function create
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @static
                             * @param {google.ai.generativelanguage.v1.GenerateContentResponse.IPromptFeedback=} [properties] Properties to set
                             * @returns {google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback} PromptFeedback instance
                             */
                            PromptFeedback.create = function create(properties) {
                                return new PromptFeedback(properties);
                            };
    
                            /**
                             * Encodes the specified PromptFeedback message. Does not implicitly {@link google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.verify|verify} messages.
                             * @function encode
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @static
                             * @param {google.ai.generativelanguage.v1.GenerateContentResponse.IPromptFeedback} message PromptFeedback message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PromptFeedback.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.blockReason != null && Object.hasOwnProperty.call(message, "blockReason"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.blockReason);
                                if (message.safetyRatings != null && message.safetyRatings.length)
                                    for (var i = 0; i < message.safetyRatings.length; ++i)
                                        $root.google.ai.generativelanguage.v1.SafetyRating.encode(message.safetyRatings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PromptFeedback message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @static
                             * @param {google.ai.generativelanguage.v1.GenerateContentResponse.IPromptFeedback} message PromptFeedback message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PromptFeedback.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PromptFeedback message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback} PromptFeedback
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PromptFeedback.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.blockReason = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.safetyRatings && message.safetyRatings.length))
                                                message.safetyRatings = [];
                                            message.safetyRatings.push($root.google.ai.generativelanguage.v1.SafetyRating.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PromptFeedback message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback} PromptFeedback
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PromptFeedback.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PromptFeedback message.
                             * @function verify
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PromptFeedback.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.blockReason != null && message.hasOwnProperty("blockReason"))
                                    switch (message.blockReason) {
                                    default:
                                        return "blockReason: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                        break;
                                    }
                                if (message.safetyRatings != null && message.hasOwnProperty("safetyRatings")) {
                                    if (!Array.isArray(message.safetyRatings))
                                        return "safetyRatings: array expected";
                                    for (var i = 0; i < message.safetyRatings.length; ++i) {
                                        var error = $root.google.ai.generativelanguage.v1.SafetyRating.verify(message.safetyRatings[i]);
                                        if (error)
                                            return "safetyRatings." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a PromptFeedback message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback} PromptFeedback
                             */
                            PromptFeedback.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback)
                                    return object;
                                var message = new $root.google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback();
                                switch (object.blockReason) {
                                default:
                                    if (typeof object.blockReason === "number") {
                                        message.blockReason = object.blockReason;
                                        break;
                                    }
                                    break;
                                case "BLOCK_REASON_UNSPECIFIED":
                                case 0:
                                    message.blockReason = 0;
                                    break;
                                case "SAFETY":
                                case 1:
                                    message.blockReason = 1;
                                    break;
                                case "OTHER":
                                case 2:
                                    message.blockReason = 2;
                                    break;
                                case "BLOCKLIST":
                                case 3:
                                    message.blockReason = 3;
                                    break;
                                case "PROHIBITED_CONTENT":
                                case 4:
                                    message.blockReason = 4;
                                    break;
                                case "IMAGE_SAFETY":
                                case 5:
                                    message.blockReason = 5;
                                    break;
                                }
                                if (object.safetyRatings) {
                                    if (!Array.isArray(object.safetyRatings))
                                        throw TypeError(".google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.safetyRatings: array expected");
                                    message.safetyRatings = [];
                                    for (var i = 0; i < object.safetyRatings.length; ++i) {
                                        if (typeof object.safetyRatings[i] !== "object")
                                            throw TypeError(".google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.safetyRatings: object expected");
                                        message.safetyRatings[i] = $root.google.ai.generativelanguage.v1.SafetyRating.fromObject(object.safetyRatings[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PromptFeedback message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @static
                             * @param {google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback} message PromptFeedback
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PromptFeedback.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.safetyRatings = [];
                                if (options.defaults)
                                    object.blockReason = options.enums === String ? "BLOCK_REASON_UNSPECIFIED" : 0;
                                if (message.blockReason != null && message.hasOwnProperty("blockReason"))
                                    object.blockReason = options.enums === String ? $root.google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.BlockReason[message.blockReason] === undefined ? message.blockReason : $root.google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.BlockReason[message.blockReason] : message.blockReason;
                                if (message.safetyRatings && message.safetyRatings.length) {
                                    object.safetyRatings = [];
                                    for (var j = 0; j < message.safetyRatings.length; ++j)
                                        object.safetyRatings[j] = $root.google.ai.generativelanguage.v1.SafetyRating.toObject(message.safetyRatings[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this PromptFeedback to JSON.
                             * @function toJSON
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PromptFeedback.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PromptFeedback
                             * @function getTypeUrl
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PromptFeedback.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback";
                            };
    
                            /**
                             * BlockReason enum.
                             * @name google.ai.generativelanguage.v1.GenerateContentResponse.PromptFeedback.BlockReason
                             * @enum {number}
                             * @property {number} BLOCK_REASON_UNSPECIFIED=0 BLOCK_REASON_UNSPECIFIED value
                             * @property {number} SAFETY=1 SAFETY value
                             * @property {number} OTHER=2 OTHER value
                             * @property {number} BLOCKLIST=3 BLOCKLIST value
                             * @property {number} PROHIBITED_CONTENT=4 PROHIBITED_CONTENT value
                             * @property {number} IMAGE_SAFETY=5 IMAGE_SAFETY value
                             */
                            PromptFeedback.BlockReason = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "BLOCK_REASON_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SAFETY"] = 1;
                                values[valuesById[2] = "OTHER"] = 2;
                                values[valuesById[3] = "BLOCKLIST"] = 3;
                                values[valuesById[4] = "PROHIBITED_CONTENT"] = 4;
                                values[valuesById[5] = "IMAGE_SAFETY"] = 5;
                                return values;
                            })();
    
                            return PromptFeedback;
                        })();
    
                        GenerateContentResponse.UsageMetadata = (function() {
    
                            /**
                             * Properties of a UsageMetadata.
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                             * @interface IUsageMetadata
                             * @property {number|null} [promptTokenCount] UsageMetadata promptTokenCount
                             * @property {number|null} [candidatesTokenCount] UsageMetadata candidatesTokenCount
                             * @property {number|null} [totalTokenCount] UsageMetadata totalTokenCount
                             */
    
                            /**
                             * Constructs a new UsageMetadata.
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse
                             * @classdesc Represents a UsageMetadata.
                             * @implements IUsageMetadata
                             * @constructor
                             * @param {google.ai.generativelanguage.v1.GenerateContentResponse.IUsageMetadata=} [properties] Properties to set
                             */
                            function UsageMetadata(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UsageMetadata promptTokenCount.
                             * @member {number} promptTokenCount
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @instance
                             */
                            UsageMetadata.prototype.promptTokenCount = 0;
    
                            /**
                             * UsageMetadata candidatesTokenCount.
                             * @member {number} candidatesTokenCount
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @instance
                             */
                            UsageMetadata.prototype.candidatesTokenCount = 0;
    
                            /**
                             * UsageMetadata totalTokenCount.
                             * @member {number} totalTokenCount
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @instance
                             */
                            UsageMetadata.prototype.totalTokenCount = 0;
    
                            /**
                             * Creates a new UsageMetadata instance using the specified properties.
                             * @function create
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @static
                             * @param {google.ai.generativelanguage.v1.GenerateContentResponse.IUsageMetadata=} [properties] Properties to set
                             * @returns {google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata} UsageMetadata instance
                             */
                            UsageMetadata.create = function create(properties) {
                                return new UsageMetadata(properties);
                            };
    
                            /**
                             * Encodes the specified UsageMetadata message. Does not implicitly {@link google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata.verify|verify} messages.
                             * @function encode
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @static
                             * @param {google.ai.generativelanguage.v1.GenerateContentResponse.IUsageMetadata} message UsageMetadata message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UsageMetadata.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.promptTokenCount != null && Object.hasOwnProperty.call(message, "promptTokenCount"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.promptTokenCount);
                                if (message.candidatesTokenCount != null && Object.hasOwnProperty.call(message, "candidatesTokenCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.candidatesTokenCount);
                                if (message.totalTokenCount != null && Object.hasOwnProperty.call(message, "totalTokenCount"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.totalTokenCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UsageMetadata message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @static
                             * @param {google.ai.generativelanguage.v1.GenerateContentResponse.IUsageMetadata} message UsageMetadata message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UsageMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a UsageMetadata message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata} UsageMetadata
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UsageMetadata.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.promptTokenCount = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.candidatesTokenCount = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.totalTokenCount = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a UsageMetadata message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata} UsageMetadata
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UsageMetadata.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a UsageMetadata message.
                             * @function verify
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UsageMetadata.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.promptTokenCount != null && message.hasOwnProperty("promptTokenCount"))
                                    if (!$util.isInteger(message.promptTokenCount))
                                        return "promptTokenCount: integer expected";
                                if (message.candidatesTokenCount != null && message.hasOwnProperty("candidatesTokenCount"))
                                    if (!$util.isInteger(message.candidatesTokenCount))
                                        return "candidatesTokenCount: integer expected";
                                if (message.totalTokenCount != null && message.hasOwnProperty("totalTokenCount"))
                                    if (!$util.isInteger(message.totalTokenCount))
                                        return "totalTokenCount: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a UsageMetadata message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata} UsageMetadata
                             */
                            UsageMetadata.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata)
                                    return object;
                                var message = new $root.google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata();
                                if (object.promptTokenCount != null)
                                    message.promptTokenCount = object.promptTokenCount | 0;
                                if (object.candidatesTokenCount != null)
                                    message.candidatesTokenCount = object.candidatesTokenCount | 0;
                                if (object.totalTokenCount != null)
                                    message.totalTokenCount = object.totalTokenCount | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a UsageMetadata message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @static
                             * @param {google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata} message UsageMetadata
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UsageMetadata.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.promptTokenCount = 0;
                                    object.candidatesTokenCount = 0;
                                    object.totalTokenCount = 0;
                                }
                                if (message.promptTokenCount != null && message.hasOwnProperty("promptTokenCount"))
                                    object.promptTokenCount = message.promptTokenCount;
                                if (message.candidatesTokenCount != null && message.hasOwnProperty("candidatesTokenCount"))
                                    object.candidatesTokenCount = message.candidatesTokenCount;
                                if (message.totalTokenCount != null && message.hasOwnProperty("totalTokenCount"))
                                    object.totalTokenCount = message.totalTokenCount;
                                return object;
                            };
    
                            /**
                             * Converts this UsageMetadata to JSON.
                             * @function toJSON
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UsageMetadata.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UsageMetadata
                             * @function getTypeUrl
                             * @memberof google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UsageMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.ai.generativelanguage.v1.GenerateContentResponse.UsageMetadata";
                            };
    
                            return UsageMetadata;
                        })();
    
                        return GenerateContentResponse;
                    })();
    
                    v1.Candidate = (function() {
    
                        /**
                         * Properties of a Candidate.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface ICandidate
                         * @property {number|null} [index] Candidate index
                         * @property {google.ai.generativelanguage.v1.IContent|null} [content] Candidate content
                         * @property {google.ai.generativelanguage.v1.Candidate.FinishReason|null} [finishReason] Candidate finishReason
                         * @property {Array.<google.ai.generativelanguage.v1.ISafetyRating>|null} [safetyRatings] Candidate safetyRatings
                         * @property {google.ai.generativelanguage.v1.ICitationMetadata|null} [citationMetadata] Candidate citationMetadata
                         * @property {number|null} [tokenCount] Candidate tokenCount
                         * @property {google.ai.generativelanguage.v1.IGroundingMetadata|null} [groundingMetadata] Candidate groundingMetadata
                         * @property {number|null} [avgLogprobs] Candidate avgLogprobs
                         * @property {google.ai.generativelanguage.v1.ILogprobsResult|null} [logprobsResult] Candidate logprobsResult
                         */
    
                        /**
                         * Constructs a new Candidate.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a Candidate.
                         * @implements ICandidate
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.ICandidate=} [properties] Properties to set
                         */
                        function Candidate(properties) {
                            this.safetyRatings = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Candidate index.
                         * @member {number|null|undefined} index
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @instance
                         */
                        Candidate.prototype.index = null;
    
                        /**
                         * Candidate content.
                         * @member {google.ai.generativelanguage.v1.IContent|null|undefined} content
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @instance
                         */
                        Candidate.prototype.content = null;
    
                        /**
                         * Candidate finishReason.
                         * @member {google.ai.generativelanguage.v1.Candidate.FinishReason} finishReason
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @instance
                         */
                        Candidate.prototype.finishReason = 0;
    
                        /**
                         * Candidate safetyRatings.
                         * @member {Array.<google.ai.generativelanguage.v1.ISafetyRating>} safetyRatings
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @instance
                         */
                        Candidate.prototype.safetyRatings = $util.emptyArray;
    
                        /**
                         * Candidate citationMetadata.
                         * @member {google.ai.generativelanguage.v1.ICitationMetadata|null|undefined} citationMetadata
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @instance
                         */
                        Candidate.prototype.citationMetadata = null;
    
                        /**
                         * Candidate tokenCount.
                         * @member {number} tokenCount
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @instance
                         */
                        Candidate.prototype.tokenCount = 0;
    
                        /**
                         * Candidate groundingMetadata.
                         * @member {google.ai.generativelanguage.v1.IGroundingMetadata|null|undefined} groundingMetadata
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @instance
                         */
                        Candidate.prototype.groundingMetadata = null;
    
                        /**
                         * Candidate avgLogprobs.
                         * @member {number} avgLogprobs
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @instance
                         */
                        Candidate.prototype.avgLogprobs = 0;
    
                        /**
                         * Candidate logprobsResult.
                         * @member {google.ai.generativelanguage.v1.ILogprobsResult|null|undefined} logprobsResult
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @instance
                         */
                        Candidate.prototype.logprobsResult = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Candidate _index.
                         * @member {"index"|undefined} _index
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @instance
                         */
                        Object.defineProperty(Candidate.prototype, "_index", {
                            get: $util.oneOfGetter($oneOfFields = ["index"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Candidate instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICandidate=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.Candidate} Candidate instance
                         */
                        Candidate.create = function create(properties) {
                            return new Candidate(properties);
                        };
    
                        /**
                         * Encodes the specified Candidate message. Does not implicitly {@link google.ai.generativelanguage.v1.Candidate.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICandidate} message Candidate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Candidate.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                $root.google.ai.generativelanguage.v1.Content.encode(message.content, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.finishReason != null && Object.hasOwnProperty.call(message, "finishReason"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.finishReason);
                            if (message.index != null && Object.hasOwnProperty.call(message, "index"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.index);
                            if (message.safetyRatings != null && message.safetyRatings.length)
                                for (var i = 0; i < message.safetyRatings.length; ++i)
                                    $root.google.ai.generativelanguage.v1.SafetyRating.encode(message.safetyRatings[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.citationMetadata != null && Object.hasOwnProperty.call(message, "citationMetadata"))
                                $root.google.ai.generativelanguage.v1.CitationMetadata.encode(message.citationMetadata, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.tokenCount != null && Object.hasOwnProperty.call(message, "tokenCount"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.tokenCount);
                            if (message.groundingMetadata != null && Object.hasOwnProperty.call(message, "groundingMetadata"))
                                $root.google.ai.generativelanguage.v1.GroundingMetadata.encode(message.groundingMetadata, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.avgLogprobs != null && Object.hasOwnProperty.call(message, "avgLogprobs"))
                                writer.uint32(/* id 10, wireType 1 =*/81).double(message.avgLogprobs);
                            if (message.logprobsResult != null && Object.hasOwnProperty.call(message, "logprobsResult"))
                                $root.google.ai.generativelanguage.v1.LogprobsResult.encode(message.logprobsResult, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Candidate message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.Candidate.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICandidate} message Candidate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Candidate.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Candidate message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.Candidate} Candidate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Candidate.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.Candidate();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.index = reader.int32();
                                        break;
                                    }
                                case 1: {
                                        message.content = $root.google.ai.generativelanguage.v1.Content.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.finishReason = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.safetyRatings && message.safetyRatings.length))
                                            message.safetyRatings = [];
                                        message.safetyRatings.push($root.google.ai.generativelanguage.v1.SafetyRating.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        message.citationMetadata = $root.google.ai.generativelanguage.v1.CitationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.tokenCount = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.groundingMetadata = $root.google.ai.generativelanguage.v1.GroundingMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.avgLogprobs = reader.double();
                                        break;
                                    }
                                case 11: {
                                        message.logprobsResult = $root.google.ai.generativelanguage.v1.LogprobsResult.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Candidate message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.Candidate} Candidate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Candidate.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Candidate message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Candidate.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.index != null && message.hasOwnProperty("index")) {
                                properties._index = 1;
                                if (!$util.isInteger(message.index))
                                    return "index: integer expected";
                            }
                            if (message.content != null && message.hasOwnProperty("content")) {
                                var error = $root.google.ai.generativelanguage.v1.Content.verify(message.content);
                                if (error)
                                    return "content." + error;
                            }
                            if (message.finishReason != null && message.hasOwnProperty("finishReason"))
                                switch (message.finishReason) {
                                default:
                                    return "finishReason: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 6:
                                case 5:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                    break;
                                }
                            if (message.safetyRatings != null && message.hasOwnProperty("safetyRatings")) {
                                if (!Array.isArray(message.safetyRatings))
                                    return "safetyRatings: array expected";
                                for (var i = 0; i < message.safetyRatings.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.SafetyRating.verify(message.safetyRatings[i]);
                                    if (error)
                                        return "safetyRatings." + error;
                                }
                            }
                            if (message.citationMetadata != null && message.hasOwnProperty("citationMetadata")) {
                                var error = $root.google.ai.generativelanguage.v1.CitationMetadata.verify(message.citationMetadata);
                                if (error)
                                    return "citationMetadata." + error;
                            }
                            if (message.tokenCount != null && message.hasOwnProperty("tokenCount"))
                                if (!$util.isInteger(message.tokenCount))
                                    return "tokenCount: integer expected";
                            if (message.groundingMetadata != null && message.hasOwnProperty("groundingMetadata")) {
                                var error = $root.google.ai.generativelanguage.v1.GroundingMetadata.verify(message.groundingMetadata);
                                if (error)
                                    return "groundingMetadata." + error;
                            }
                            if (message.avgLogprobs != null && message.hasOwnProperty("avgLogprobs"))
                                if (typeof message.avgLogprobs !== "number")
                                    return "avgLogprobs: number expected";
                            if (message.logprobsResult != null && message.hasOwnProperty("logprobsResult")) {
                                var error = $root.google.ai.generativelanguage.v1.LogprobsResult.verify(message.logprobsResult);
                                if (error)
                                    return "logprobsResult." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Candidate message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.Candidate} Candidate
                         */
                        Candidate.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.Candidate)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.Candidate();
                            if (object.index != null)
                                message.index = object.index | 0;
                            if (object.content != null) {
                                if (typeof object.content !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.Candidate.content: object expected");
                                message.content = $root.google.ai.generativelanguage.v1.Content.fromObject(object.content);
                            }
                            switch (object.finishReason) {
                            default:
                                if (typeof object.finishReason === "number") {
                                    message.finishReason = object.finishReason;
                                    break;
                                }
                                break;
                            case "FINISH_REASON_UNSPECIFIED":
                            case 0:
                                message.finishReason = 0;
                                break;
                            case "STOP":
                            case 1:
                                message.finishReason = 1;
                                break;
                            case "MAX_TOKENS":
                            case 2:
                                message.finishReason = 2;
                                break;
                            case "SAFETY":
                            case 3:
                                message.finishReason = 3;
                                break;
                            case "RECITATION":
                            case 4:
                                message.finishReason = 4;
                                break;
                            case "LANGUAGE":
                            case 6:
                                message.finishReason = 6;
                                break;
                            case "OTHER":
                            case 5:
                                message.finishReason = 5;
                                break;
                            case "BLOCKLIST":
                            case 7:
                                message.finishReason = 7;
                                break;
                            case "PROHIBITED_CONTENT":
                            case 8:
                                message.finishReason = 8;
                                break;
                            case "SPII":
                            case 9:
                                message.finishReason = 9;
                                break;
                            case "MALFORMED_FUNCTION_CALL":
                            case 10:
                                message.finishReason = 10;
                                break;
                            case "IMAGE_SAFETY":
                            case 11:
                                message.finishReason = 11;
                                break;
                            }
                            if (object.safetyRatings) {
                                if (!Array.isArray(object.safetyRatings))
                                    throw TypeError(".google.ai.generativelanguage.v1.Candidate.safetyRatings: array expected");
                                message.safetyRatings = [];
                                for (var i = 0; i < object.safetyRatings.length; ++i) {
                                    if (typeof object.safetyRatings[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.Candidate.safetyRatings: object expected");
                                    message.safetyRatings[i] = $root.google.ai.generativelanguage.v1.SafetyRating.fromObject(object.safetyRatings[i]);
                                }
                            }
                            if (object.citationMetadata != null) {
                                if (typeof object.citationMetadata !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.Candidate.citationMetadata: object expected");
                                message.citationMetadata = $root.google.ai.generativelanguage.v1.CitationMetadata.fromObject(object.citationMetadata);
                            }
                            if (object.tokenCount != null)
                                message.tokenCount = object.tokenCount | 0;
                            if (object.groundingMetadata != null) {
                                if (typeof object.groundingMetadata !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.Candidate.groundingMetadata: object expected");
                                message.groundingMetadata = $root.google.ai.generativelanguage.v1.GroundingMetadata.fromObject(object.groundingMetadata);
                            }
                            if (object.avgLogprobs != null)
                                message.avgLogprobs = Number(object.avgLogprobs);
                            if (object.logprobsResult != null) {
                                if (typeof object.logprobsResult !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.Candidate.logprobsResult: object expected");
                                message.logprobsResult = $root.google.ai.generativelanguage.v1.LogprobsResult.fromObject(object.logprobsResult);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Candidate message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @static
                         * @param {google.ai.generativelanguage.v1.Candidate} message Candidate
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Candidate.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.safetyRatings = [];
                            if (options.defaults) {
                                object.content = null;
                                object.finishReason = options.enums === String ? "FINISH_REASON_UNSPECIFIED" : 0;
                                object.citationMetadata = null;
                                object.tokenCount = 0;
                                object.groundingMetadata = null;
                                object.avgLogprobs = 0;
                                object.logprobsResult = null;
                            }
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = $root.google.ai.generativelanguage.v1.Content.toObject(message.content, options);
                            if (message.finishReason != null && message.hasOwnProperty("finishReason"))
                                object.finishReason = options.enums === String ? $root.google.ai.generativelanguage.v1.Candidate.FinishReason[message.finishReason] === undefined ? message.finishReason : $root.google.ai.generativelanguage.v1.Candidate.FinishReason[message.finishReason] : message.finishReason;
                            if (message.index != null && message.hasOwnProperty("index")) {
                                object.index = message.index;
                                if (options.oneofs)
                                    object._index = "index";
                            }
                            if (message.safetyRatings && message.safetyRatings.length) {
                                object.safetyRatings = [];
                                for (var j = 0; j < message.safetyRatings.length; ++j)
                                    object.safetyRatings[j] = $root.google.ai.generativelanguage.v1.SafetyRating.toObject(message.safetyRatings[j], options);
                            }
                            if (message.citationMetadata != null && message.hasOwnProperty("citationMetadata"))
                                object.citationMetadata = $root.google.ai.generativelanguage.v1.CitationMetadata.toObject(message.citationMetadata, options);
                            if (message.tokenCount != null && message.hasOwnProperty("tokenCount"))
                                object.tokenCount = message.tokenCount;
                            if (message.groundingMetadata != null && message.hasOwnProperty("groundingMetadata"))
                                object.groundingMetadata = $root.google.ai.generativelanguage.v1.GroundingMetadata.toObject(message.groundingMetadata, options);
                            if (message.avgLogprobs != null && message.hasOwnProperty("avgLogprobs"))
                                object.avgLogprobs = options.json && !isFinite(message.avgLogprobs) ? String(message.avgLogprobs) : message.avgLogprobs;
                            if (message.logprobsResult != null && message.hasOwnProperty("logprobsResult"))
                                object.logprobsResult = $root.google.ai.generativelanguage.v1.LogprobsResult.toObject(message.logprobsResult, options);
                            return object;
                        };
    
                        /**
                         * Converts this Candidate to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Candidate.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Candidate
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.Candidate
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Candidate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.Candidate";
                        };
    
                        /**
                         * FinishReason enum.
                         * @name google.ai.generativelanguage.v1.Candidate.FinishReason
                         * @enum {number}
                         * @property {number} FINISH_REASON_UNSPECIFIED=0 FINISH_REASON_UNSPECIFIED value
                         * @property {number} STOP=1 STOP value
                         * @property {number} MAX_TOKENS=2 MAX_TOKENS value
                         * @property {number} SAFETY=3 SAFETY value
                         * @property {number} RECITATION=4 RECITATION value
                         * @property {number} LANGUAGE=6 LANGUAGE value
                         * @property {number} OTHER=5 OTHER value
                         * @property {number} BLOCKLIST=7 BLOCKLIST value
                         * @property {number} PROHIBITED_CONTENT=8 PROHIBITED_CONTENT value
                         * @property {number} SPII=9 SPII value
                         * @property {number} MALFORMED_FUNCTION_CALL=10 MALFORMED_FUNCTION_CALL value
                         * @property {number} IMAGE_SAFETY=11 IMAGE_SAFETY value
                         */
                        Candidate.FinishReason = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "FINISH_REASON_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "STOP"] = 1;
                            values[valuesById[2] = "MAX_TOKENS"] = 2;
                            values[valuesById[3] = "SAFETY"] = 3;
                            values[valuesById[4] = "RECITATION"] = 4;
                            values[valuesById[6] = "LANGUAGE"] = 6;
                            values[valuesById[5] = "OTHER"] = 5;
                            values[valuesById[7] = "BLOCKLIST"] = 7;
                            values[valuesById[8] = "PROHIBITED_CONTENT"] = 8;
                            values[valuesById[9] = "SPII"] = 9;
                            values[valuesById[10] = "MALFORMED_FUNCTION_CALL"] = 10;
                            values[valuesById[11] = "IMAGE_SAFETY"] = 11;
                            return values;
                        })();
    
                        return Candidate;
                    })();
    
                    v1.LogprobsResult = (function() {
    
                        /**
                         * Properties of a LogprobsResult.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface ILogprobsResult
                         * @property {Array.<google.ai.generativelanguage.v1.LogprobsResult.ITopCandidates>|null} [topCandidates] LogprobsResult topCandidates
                         * @property {Array.<google.ai.generativelanguage.v1.LogprobsResult.ICandidate>|null} [chosenCandidates] LogprobsResult chosenCandidates
                         */
    
                        /**
                         * Constructs a new LogprobsResult.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a LogprobsResult.
                         * @implements ILogprobsResult
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.ILogprobsResult=} [properties] Properties to set
                         */
                        function LogprobsResult(properties) {
                            this.topCandidates = [];
                            this.chosenCandidates = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LogprobsResult topCandidates.
                         * @member {Array.<google.ai.generativelanguage.v1.LogprobsResult.ITopCandidates>} topCandidates
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @instance
                         */
                        LogprobsResult.prototype.topCandidates = $util.emptyArray;
    
                        /**
                         * LogprobsResult chosenCandidates.
                         * @member {Array.<google.ai.generativelanguage.v1.LogprobsResult.ICandidate>} chosenCandidates
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @instance
                         */
                        LogprobsResult.prototype.chosenCandidates = $util.emptyArray;
    
                        /**
                         * Creates a new LogprobsResult instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @static
                         * @param {google.ai.generativelanguage.v1.ILogprobsResult=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.LogprobsResult} LogprobsResult instance
                         */
                        LogprobsResult.create = function create(properties) {
                            return new LogprobsResult(properties);
                        };
    
                        /**
                         * Encodes the specified LogprobsResult message. Does not implicitly {@link google.ai.generativelanguage.v1.LogprobsResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @static
                         * @param {google.ai.generativelanguage.v1.ILogprobsResult} message LogprobsResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LogprobsResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.topCandidates != null && message.topCandidates.length)
                                for (var i = 0; i < message.topCandidates.length; ++i)
                                    $root.google.ai.generativelanguage.v1.LogprobsResult.TopCandidates.encode(message.topCandidates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.chosenCandidates != null && message.chosenCandidates.length)
                                for (var i = 0; i < message.chosenCandidates.length; ++i)
                                    $root.google.ai.generativelanguage.v1.LogprobsResult.Candidate.encode(message.chosenCandidates[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LogprobsResult message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.LogprobsResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @static
                         * @param {google.ai.generativelanguage.v1.ILogprobsResult} message LogprobsResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LogprobsResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LogprobsResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.LogprobsResult} LogprobsResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LogprobsResult.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.LogprobsResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.topCandidates && message.topCandidates.length))
                                            message.topCandidates = [];
                                        message.topCandidates.push($root.google.ai.generativelanguage.v1.LogprobsResult.TopCandidates.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.chosenCandidates && message.chosenCandidates.length))
                                            message.chosenCandidates = [];
                                        message.chosenCandidates.push($root.google.ai.generativelanguage.v1.LogprobsResult.Candidate.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LogprobsResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.LogprobsResult} LogprobsResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LogprobsResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LogprobsResult message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LogprobsResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.topCandidates != null && message.hasOwnProperty("topCandidates")) {
                                if (!Array.isArray(message.topCandidates))
                                    return "topCandidates: array expected";
                                for (var i = 0; i < message.topCandidates.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.LogprobsResult.TopCandidates.verify(message.topCandidates[i]);
                                    if (error)
                                        return "topCandidates." + error;
                                }
                            }
                            if (message.chosenCandidates != null && message.hasOwnProperty("chosenCandidates")) {
                                if (!Array.isArray(message.chosenCandidates))
                                    return "chosenCandidates: array expected";
                                for (var i = 0; i < message.chosenCandidates.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.LogprobsResult.Candidate.verify(message.chosenCandidates[i]);
                                    if (error)
                                        return "chosenCandidates." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LogprobsResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.LogprobsResult} LogprobsResult
                         */
                        LogprobsResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.LogprobsResult)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.LogprobsResult();
                            if (object.topCandidates) {
                                if (!Array.isArray(object.topCandidates))
                                    throw TypeError(".google.ai.generativelanguage.v1.LogprobsResult.topCandidates: array expected");
                                message.topCandidates = [];
                                for (var i = 0; i < object.topCandidates.length; ++i) {
                                    if (typeof object.topCandidates[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.LogprobsResult.topCandidates: object expected");
                                    message.topCandidates[i] = $root.google.ai.generativelanguage.v1.LogprobsResult.TopCandidates.fromObject(object.topCandidates[i]);
                                }
                            }
                            if (object.chosenCandidates) {
                                if (!Array.isArray(object.chosenCandidates))
                                    throw TypeError(".google.ai.generativelanguage.v1.LogprobsResult.chosenCandidates: array expected");
                                message.chosenCandidates = [];
                                for (var i = 0; i < object.chosenCandidates.length; ++i) {
                                    if (typeof object.chosenCandidates[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.LogprobsResult.chosenCandidates: object expected");
                                    message.chosenCandidates[i] = $root.google.ai.generativelanguage.v1.LogprobsResult.Candidate.fromObject(object.chosenCandidates[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LogprobsResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @static
                         * @param {google.ai.generativelanguage.v1.LogprobsResult} message LogprobsResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LogprobsResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.topCandidates = [];
                                object.chosenCandidates = [];
                            }
                            if (message.topCandidates && message.topCandidates.length) {
                                object.topCandidates = [];
                                for (var j = 0; j < message.topCandidates.length; ++j)
                                    object.topCandidates[j] = $root.google.ai.generativelanguage.v1.LogprobsResult.TopCandidates.toObject(message.topCandidates[j], options);
                            }
                            if (message.chosenCandidates && message.chosenCandidates.length) {
                                object.chosenCandidates = [];
                                for (var j = 0; j < message.chosenCandidates.length; ++j)
                                    object.chosenCandidates[j] = $root.google.ai.generativelanguage.v1.LogprobsResult.Candidate.toObject(message.chosenCandidates[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LogprobsResult to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LogprobsResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LogprobsResult
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.LogprobsResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LogprobsResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.LogprobsResult";
                        };
    
                        LogprobsResult.Candidate = (function() {
    
                            /**
                             * Properties of a Candidate.
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult
                             * @interface ICandidate
                             * @property {string|null} [token] Candidate token
                             * @property {number|null} [tokenId] Candidate tokenId
                             * @property {number|null} [logProbability] Candidate logProbability
                             */
    
                            /**
                             * Constructs a new Candidate.
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult
                             * @classdesc Represents a Candidate.
                             * @implements ICandidate
                             * @constructor
                             * @param {google.ai.generativelanguage.v1.LogprobsResult.ICandidate=} [properties] Properties to set
                             */
                            function Candidate(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Candidate token.
                             * @member {string|null|undefined} token
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @instance
                             */
                            Candidate.prototype.token = null;
    
                            /**
                             * Candidate tokenId.
                             * @member {number|null|undefined} tokenId
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @instance
                             */
                            Candidate.prototype.tokenId = null;
    
                            /**
                             * Candidate logProbability.
                             * @member {number|null|undefined} logProbability
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @instance
                             */
                            Candidate.prototype.logProbability = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Candidate _token.
                             * @member {"token"|undefined} _token
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @instance
                             */
                            Object.defineProperty(Candidate.prototype, "_token", {
                                get: $util.oneOfGetter($oneOfFields = ["token"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Candidate _tokenId.
                             * @member {"tokenId"|undefined} _tokenId
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @instance
                             */
                            Object.defineProperty(Candidate.prototype, "_tokenId", {
                                get: $util.oneOfGetter($oneOfFields = ["tokenId"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Candidate _logProbability.
                             * @member {"logProbability"|undefined} _logProbability
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @instance
                             */
                            Object.defineProperty(Candidate.prototype, "_logProbability", {
                                get: $util.oneOfGetter($oneOfFields = ["logProbability"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Candidate instance using the specified properties.
                             * @function create
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @static
                             * @param {google.ai.generativelanguage.v1.LogprobsResult.ICandidate=} [properties] Properties to set
                             * @returns {google.ai.generativelanguage.v1.LogprobsResult.Candidate} Candidate instance
                             */
                            Candidate.create = function create(properties) {
                                return new Candidate(properties);
                            };
    
                            /**
                             * Encodes the specified Candidate message. Does not implicitly {@link google.ai.generativelanguage.v1.LogprobsResult.Candidate.verify|verify} messages.
                             * @function encode
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @static
                             * @param {google.ai.generativelanguage.v1.LogprobsResult.ICandidate} message Candidate message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Candidate.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.token != null && Object.hasOwnProperty.call(message, "token"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.token);
                                if (message.logProbability != null && Object.hasOwnProperty.call(message, "logProbability"))
                                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.logProbability);
                                if (message.tokenId != null && Object.hasOwnProperty.call(message, "tokenId"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.tokenId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Candidate message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.LogprobsResult.Candidate.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @static
                             * @param {google.ai.generativelanguage.v1.LogprobsResult.ICandidate} message Candidate message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Candidate.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Candidate message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.ai.generativelanguage.v1.LogprobsResult.Candidate} Candidate
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Candidate.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.LogprobsResult.Candidate();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.token = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.tokenId = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.logProbability = reader.float();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Candidate message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.ai.generativelanguage.v1.LogprobsResult.Candidate} Candidate
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Candidate.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Candidate message.
                             * @function verify
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Candidate.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.token != null && message.hasOwnProperty("token")) {
                                    properties._token = 1;
                                    if (!$util.isString(message.token))
                                        return "token: string expected";
                                }
                                if (message.tokenId != null && message.hasOwnProperty("tokenId")) {
                                    properties._tokenId = 1;
                                    if (!$util.isInteger(message.tokenId))
                                        return "tokenId: integer expected";
                                }
                                if (message.logProbability != null && message.hasOwnProperty("logProbability")) {
                                    properties._logProbability = 1;
                                    if (typeof message.logProbability !== "number")
                                        return "logProbability: number expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Candidate message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.ai.generativelanguage.v1.LogprobsResult.Candidate} Candidate
                             */
                            Candidate.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.ai.generativelanguage.v1.LogprobsResult.Candidate)
                                    return object;
                                var message = new $root.google.ai.generativelanguage.v1.LogprobsResult.Candidate();
                                if (object.token != null)
                                    message.token = String(object.token);
                                if (object.tokenId != null)
                                    message.tokenId = object.tokenId | 0;
                                if (object.logProbability != null)
                                    message.logProbability = Number(object.logProbability);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Candidate message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @static
                             * @param {google.ai.generativelanguage.v1.LogprobsResult.Candidate} message Candidate
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Candidate.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.token != null && message.hasOwnProperty("token")) {
                                    object.token = message.token;
                                    if (options.oneofs)
                                        object._token = "token";
                                }
                                if (message.logProbability != null && message.hasOwnProperty("logProbability")) {
                                    object.logProbability = options.json && !isFinite(message.logProbability) ? String(message.logProbability) : message.logProbability;
                                    if (options.oneofs)
                                        object._logProbability = "logProbability";
                                }
                                if (message.tokenId != null && message.hasOwnProperty("tokenId")) {
                                    object.tokenId = message.tokenId;
                                    if (options.oneofs)
                                        object._tokenId = "tokenId";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Candidate to JSON.
                             * @function toJSON
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Candidate.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Candidate
                             * @function getTypeUrl
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.Candidate
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Candidate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.ai.generativelanguage.v1.LogprobsResult.Candidate";
                            };
    
                            return Candidate;
                        })();
    
                        LogprobsResult.TopCandidates = (function() {
    
                            /**
                             * Properties of a TopCandidates.
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult
                             * @interface ITopCandidates
                             * @property {Array.<google.ai.generativelanguage.v1.LogprobsResult.ICandidate>|null} [candidates] TopCandidates candidates
                             */
    
                            /**
                             * Constructs a new TopCandidates.
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult
                             * @classdesc Represents a TopCandidates.
                             * @implements ITopCandidates
                             * @constructor
                             * @param {google.ai.generativelanguage.v1.LogprobsResult.ITopCandidates=} [properties] Properties to set
                             */
                            function TopCandidates(properties) {
                                this.candidates = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TopCandidates candidates.
                             * @member {Array.<google.ai.generativelanguage.v1.LogprobsResult.ICandidate>} candidates
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.TopCandidates
                             * @instance
                             */
                            TopCandidates.prototype.candidates = $util.emptyArray;
    
                            /**
                             * Creates a new TopCandidates instance using the specified properties.
                             * @function create
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.TopCandidates
                             * @static
                             * @param {google.ai.generativelanguage.v1.LogprobsResult.ITopCandidates=} [properties] Properties to set
                             * @returns {google.ai.generativelanguage.v1.LogprobsResult.TopCandidates} TopCandidates instance
                             */
                            TopCandidates.create = function create(properties) {
                                return new TopCandidates(properties);
                            };
    
                            /**
                             * Encodes the specified TopCandidates message. Does not implicitly {@link google.ai.generativelanguage.v1.LogprobsResult.TopCandidates.verify|verify} messages.
                             * @function encode
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.TopCandidates
                             * @static
                             * @param {google.ai.generativelanguage.v1.LogprobsResult.ITopCandidates} message TopCandidates message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TopCandidates.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.candidates != null && message.candidates.length)
                                    for (var i = 0; i < message.candidates.length; ++i)
                                        $root.google.ai.generativelanguage.v1.LogprobsResult.Candidate.encode(message.candidates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TopCandidates message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.LogprobsResult.TopCandidates.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.TopCandidates
                             * @static
                             * @param {google.ai.generativelanguage.v1.LogprobsResult.ITopCandidates} message TopCandidates message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TopCandidates.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TopCandidates message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.TopCandidates
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.ai.generativelanguage.v1.LogprobsResult.TopCandidates} TopCandidates
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TopCandidates.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.LogprobsResult.TopCandidates();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.candidates && message.candidates.length))
                                                message.candidates = [];
                                            message.candidates.push($root.google.ai.generativelanguage.v1.LogprobsResult.Candidate.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TopCandidates message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.TopCandidates
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.ai.generativelanguage.v1.LogprobsResult.TopCandidates} TopCandidates
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TopCandidates.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TopCandidates message.
                             * @function verify
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.TopCandidates
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TopCandidates.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.candidates != null && message.hasOwnProperty("candidates")) {
                                    if (!Array.isArray(message.candidates))
                                        return "candidates: array expected";
                                    for (var i = 0; i < message.candidates.length; ++i) {
                                        var error = $root.google.ai.generativelanguage.v1.LogprobsResult.Candidate.verify(message.candidates[i]);
                                        if (error)
                                            return "candidates." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a TopCandidates message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.TopCandidates
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.ai.generativelanguage.v1.LogprobsResult.TopCandidates} TopCandidates
                             */
                            TopCandidates.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.ai.generativelanguage.v1.LogprobsResult.TopCandidates)
                                    return object;
                                var message = new $root.google.ai.generativelanguage.v1.LogprobsResult.TopCandidates();
                                if (object.candidates) {
                                    if (!Array.isArray(object.candidates))
                                        throw TypeError(".google.ai.generativelanguage.v1.LogprobsResult.TopCandidates.candidates: array expected");
                                    message.candidates = [];
                                    for (var i = 0; i < object.candidates.length; ++i) {
                                        if (typeof object.candidates[i] !== "object")
                                            throw TypeError(".google.ai.generativelanguage.v1.LogprobsResult.TopCandidates.candidates: object expected");
                                        message.candidates[i] = $root.google.ai.generativelanguage.v1.LogprobsResult.Candidate.fromObject(object.candidates[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TopCandidates message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.TopCandidates
                             * @static
                             * @param {google.ai.generativelanguage.v1.LogprobsResult.TopCandidates} message TopCandidates
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TopCandidates.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.candidates = [];
                                if (message.candidates && message.candidates.length) {
                                    object.candidates = [];
                                    for (var j = 0; j < message.candidates.length; ++j)
                                        object.candidates[j] = $root.google.ai.generativelanguage.v1.LogprobsResult.Candidate.toObject(message.candidates[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this TopCandidates to JSON.
                             * @function toJSON
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.TopCandidates
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TopCandidates.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TopCandidates
                             * @function getTypeUrl
                             * @memberof google.ai.generativelanguage.v1.LogprobsResult.TopCandidates
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TopCandidates.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.ai.generativelanguage.v1.LogprobsResult.TopCandidates";
                            };
    
                            return TopCandidates;
                        })();
    
                        return LogprobsResult;
                    })();
    
                    v1.RetrievalMetadata = (function() {
    
                        /**
                         * Properties of a RetrievalMetadata.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IRetrievalMetadata
                         * @property {number|null} [googleSearchDynamicRetrievalScore] RetrievalMetadata googleSearchDynamicRetrievalScore
                         */
    
                        /**
                         * Constructs a new RetrievalMetadata.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a RetrievalMetadata.
                         * @implements IRetrievalMetadata
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IRetrievalMetadata=} [properties] Properties to set
                         */
                        function RetrievalMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrievalMetadata googleSearchDynamicRetrievalScore.
                         * @member {number} googleSearchDynamicRetrievalScore
                         * @memberof google.ai.generativelanguage.v1.RetrievalMetadata
                         * @instance
                         */
                        RetrievalMetadata.prototype.googleSearchDynamicRetrievalScore = 0;
    
                        /**
                         * Creates a new RetrievalMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.RetrievalMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.IRetrievalMetadata=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.RetrievalMetadata} RetrievalMetadata instance
                         */
                        RetrievalMetadata.create = function create(properties) {
                            return new RetrievalMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified RetrievalMetadata message. Does not implicitly {@link google.ai.generativelanguage.v1.RetrievalMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.RetrievalMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.IRetrievalMetadata} message RetrievalMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrievalMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.googleSearchDynamicRetrievalScore != null && Object.hasOwnProperty.call(message, "googleSearchDynamicRetrievalScore"))
                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.googleSearchDynamicRetrievalScore);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrievalMetadata message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.RetrievalMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.RetrievalMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.IRetrievalMetadata} message RetrievalMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrievalMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrievalMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.RetrievalMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.RetrievalMetadata} RetrievalMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrievalMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.RetrievalMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.googleSearchDynamicRetrievalScore = reader.float();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrievalMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.RetrievalMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.RetrievalMetadata} RetrievalMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrievalMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrievalMetadata message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.RetrievalMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrievalMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.googleSearchDynamicRetrievalScore != null && message.hasOwnProperty("googleSearchDynamicRetrievalScore"))
                                if (typeof message.googleSearchDynamicRetrievalScore !== "number")
                                    return "googleSearchDynamicRetrievalScore: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetrievalMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.RetrievalMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.RetrievalMetadata} RetrievalMetadata
                         */
                        RetrievalMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.RetrievalMetadata)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.RetrievalMetadata();
                            if (object.googleSearchDynamicRetrievalScore != null)
                                message.googleSearchDynamicRetrievalScore = Number(object.googleSearchDynamicRetrievalScore);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrievalMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.RetrievalMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.RetrievalMetadata} message RetrievalMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrievalMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.googleSearchDynamicRetrievalScore = 0;
                            if (message.googleSearchDynamicRetrievalScore != null && message.hasOwnProperty("googleSearchDynamicRetrievalScore"))
                                object.googleSearchDynamicRetrievalScore = options.json && !isFinite(message.googleSearchDynamicRetrievalScore) ? String(message.googleSearchDynamicRetrievalScore) : message.googleSearchDynamicRetrievalScore;
                            return object;
                        };
    
                        /**
                         * Converts this RetrievalMetadata to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.RetrievalMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrievalMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrievalMetadata
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.RetrievalMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrievalMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.RetrievalMetadata";
                        };
    
                        return RetrievalMetadata;
                    })();
    
                    v1.GroundingMetadata = (function() {
    
                        /**
                         * Properties of a GroundingMetadata.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IGroundingMetadata
                         * @property {google.ai.generativelanguage.v1.ISearchEntryPoint|null} [searchEntryPoint] GroundingMetadata searchEntryPoint
                         * @property {Array.<google.ai.generativelanguage.v1.IGroundingChunk>|null} [groundingChunks] GroundingMetadata groundingChunks
                         * @property {Array.<google.ai.generativelanguage.v1.IGroundingSupport>|null} [groundingSupports] GroundingMetadata groundingSupports
                         * @property {google.ai.generativelanguage.v1.IRetrievalMetadata|null} [retrievalMetadata] GroundingMetadata retrievalMetadata
                         * @property {Array.<string>|null} [webSearchQueries] GroundingMetadata webSearchQueries
                         */
    
                        /**
                         * Constructs a new GroundingMetadata.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a GroundingMetadata.
                         * @implements IGroundingMetadata
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IGroundingMetadata=} [properties] Properties to set
                         */
                        function GroundingMetadata(properties) {
                            this.groundingChunks = [];
                            this.groundingSupports = [];
                            this.webSearchQueries = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GroundingMetadata searchEntryPoint.
                         * @member {google.ai.generativelanguage.v1.ISearchEntryPoint|null|undefined} searchEntryPoint
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @instance
                         */
                        GroundingMetadata.prototype.searchEntryPoint = null;
    
                        /**
                         * GroundingMetadata groundingChunks.
                         * @member {Array.<google.ai.generativelanguage.v1.IGroundingChunk>} groundingChunks
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @instance
                         */
                        GroundingMetadata.prototype.groundingChunks = $util.emptyArray;
    
                        /**
                         * GroundingMetadata groundingSupports.
                         * @member {Array.<google.ai.generativelanguage.v1.IGroundingSupport>} groundingSupports
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @instance
                         */
                        GroundingMetadata.prototype.groundingSupports = $util.emptyArray;
    
                        /**
                         * GroundingMetadata retrievalMetadata.
                         * @member {google.ai.generativelanguage.v1.IRetrievalMetadata|null|undefined} retrievalMetadata
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @instance
                         */
                        GroundingMetadata.prototype.retrievalMetadata = null;
    
                        /**
                         * GroundingMetadata webSearchQueries.
                         * @member {Array.<string>} webSearchQueries
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @instance
                         */
                        GroundingMetadata.prototype.webSearchQueries = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GroundingMetadata _searchEntryPoint.
                         * @member {"searchEntryPoint"|undefined} _searchEntryPoint
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @instance
                         */
                        Object.defineProperty(GroundingMetadata.prototype, "_searchEntryPoint", {
                            get: $util.oneOfGetter($oneOfFields = ["searchEntryPoint"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GroundingMetadata _retrievalMetadata.
                         * @member {"retrievalMetadata"|undefined} _retrievalMetadata
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @instance
                         */
                        Object.defineProperty(GroundingMetadata.prototype, "_retrievalMetadata", {
                            get: $util.oneOfGetter($oneOfFields = ["retrievalMetadata"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GroundingMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGroundingMetadata=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.GroundingMetadata} GroundingMetadata instance
                         */
                        GroundingMetadata.create = function create(properties) {
                            return new GroundingMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified GroundingMetadata message. Does not implicitly {@link google.ai.generativelanguage.v1.GroundingMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGroundingMetadata} message GroundingMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GroundingMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.searchEntryPoint != null && Object.hasOwnProperty.call(message, "searchEntryPoint"))
                                $root.google.ai.generativelanguage.v1.SearchEntryPoint.encode(message.searchEntryPoint, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.groundingChunks != null && message.groundingChunks.length)
                                for (var i = 0; i < message.groundingChunks.length; ++i)
                                    $root.google.ai.generativelanguage.v1.GroundingChunk.encode(message.groundingChunks[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.groundingSupports != null && message.groundingSupports.length)
                                for (var i = 0; i < message.groundingSupports.length; ++i)
                                    $root.google.ai.generativelanguage.v1.GroundingSupport.encode(message.groundingSupports[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.retrievalMetadata != null && Object.hasOwnProperty.call(message, "retrievalMetadata"))
                                $root.google.ai.generativelanguage.v1.RetrievalMetadata.encode(message.retrievalMetadata, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.webSearchQueries != null && message.webSearchQueries.length)
                                for (var i = 0; i < message.webSearchQueries.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.webSearchQueries[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GroundingMetadata message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.GroundingMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGroundingMetadata} message GroundingMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GroundingMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GroundingMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.GroundingMetadata} GroundingMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GroundingMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.GroundingMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.searchEntryPoint = $root.google.ai.generativelanguage.v1.SearchEntryPoint.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        if (!(message.groundingChunks && message.groundingChunks.length))
                                            message.groundingChunks = [];
                                        message.groundingChunks.push($root.google.ai.generativelanguage.v1.GroundingChunk.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.groundingSupports && message.groundingSupports.length))
                                            message.groundingSupports = [];
                                        message.groundingSupports.push($root.google.ai.generativelanguage.v1.GroundingSupport.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.retrievalMetadata = $root.google.ai.generativelanguage.v1.RetrievalMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.webSearchQueries && message.webSearchQueries.length))
                                            message.webSearchQueries = [];
                                        message.webSearchQueries.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GroundingMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.GroundingMetadata} GroundingMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GroundingMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GroundingMetadata message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GroundingMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.searchEntryPoint != null && message.hasOwnProperty("searchEntryPoint")) {
                                properties._searchEntryPoint = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1.SearchEntryPoint.verify(message.searchEntryPoint);
                                    if (error)
                                        return "searchEntryPoint." + error;
                                }
                            }
                            if (message.groundingChunks != null && message.hasOwnProperty("groundingChunks")) {
                                if (!Array.isArray(message.groundingChunks))
                                    return "groundingChunks: array expected";
                                for (var i = 0; i < message.groundingChunks.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.GroundingChunk.verify(message.groundingChunks[i]);
                                    if (error)
                                        return "groundingChunks." + error;
                                }
                            }
                            if (message.groundingSupports != null && message.hasOwnProperty("groundingSupports")) {
                                if (!Array.isArray(message.groundingSupports))
                                    return "groundingSupports: array expected";
                                for (var i = 0; i < message.groundingSupports.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.GroundingSupport.verify(message.groundingSupports[i]);
                                    if (error)
                                        return "groundingSupports." + error;
                                }
                            }
                            if (message.retrievalMetadata != null && message.hasOwnProperty("retrievalMetadata")) {
                                properties._retrievalMetadata = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1.RetrievalMetadata.verify(message.retrievalMetadata);
                                    if (error)
                                        return "retrievalMetadata." + error;
                                }
                            }
                            if (message.webSearchQueries != null && message.hasOwnProperty("webSearchQueries")) {
                                if (!Array.isArray(message.webSearchQueries))
                                    return "webSearchQueries: array expected";
                                for (var i = 0; i < message.webSearchQueries.length; ++i)
                                    if (!$util.isString(message.webSearchQueries[i]))
                                        return "webSearchQueries: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GroundingMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.GroundingMetadata} GroundingMetadata
                         */
                        GroundingMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.GroundingMetadata)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.GroundingMetadata();
                            if (object.searchEntryPoint != null) {
                                if (typeof object.searchEntryPoint !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.GroundingMetadata.searchEntryPoint: object expected");
                                message.searchEntryPoint = $root.google.ai.generativelanguage.v1.SearchEntryPoint.fromObject(object.searchEntryPoint);
                            }
                            if (object.groundingChunks) {
                                if (!Array.isArray(object.groundingChunks))
                                    throw TypeError(".google.ai.generativelanguage.v1.GroundingMetadata.groundingChunks: array expected");
                                message.groundingChunks = [];
                                for (var i = 0; i < object.groundingChunks.length; ++i) {
                                    if (typeof object.groundingChunks[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.GroundingMetadata.groundingChunks: object expected");
                                    message.groundingChunks[i] = $root.google.ai.generativelanguage.v1.GroundingChunk.fromObject(object.groundingChunks[i]);
                                }
                            }
                            if (object.groundingSupports) {
                                if (!Array.isArray(object.groundingSupports))
                                    throw TypeError(".google.ai.generativelanguage.v1.GroundingMetadata.groundingSupports: array expected");
                                message.groundingSupports = [];
                                for (var i = 0; i < object.groundingSupports.length; ++i) {
                                    if (typeof object.groundingSupports[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.GroundingMetadata.groundingSupports: object expected");
                                    message.groundingSupports[i] = $root.google.ai.generativelanguage.v1.GroundingSupport.fromObject(object.groundingSupports[i]);
                                }
                            }
                            if (object.retrievalMetadata != null) {
                                if (typeof object.retrievalMetadata !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.GroundingMetadata.retrievalMetadata: object expected");
                                message.retrievalMetadata = $root.google.ai.generativelanguage.v1.RetrievalMetadata.fromObject(object.retrievalMetadata);
                            }
                            if (object.webSearchQueries) {
                                if (!Array.isArray(object.webSearchQueries))
                                    throw TypeError(".google.ai.generativelanguage.v1.GroundingMetadata.webSearchQueries: array expected");
                                message.webSearchQueries = [];
                                for (var i = 0; i < object.webSearchQueries.length; ++i)
                                    message.webSearchQueries[i] = String(object.webSearchQueries[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GroundingMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1.GroundingMetadata} message GroundingMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GroundingMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.groundingChunks = [];
                                object.groundingSupports = [];
                                object.webSearchQueries = [];
                            }
                            if (message.searchEntryPoint != null && message.hasOwnProperty("searchEntryPoint")) {
                                object.searchEntryPoint = $root.google.ai.generativelanguage.v1.SearchEntryPoint.toObject(message.searchEntryPoint, options);
                                if (options.oneofs)
                                    object._searchEntryPoint = "searchEntryPoint";
                            }
                            if (message.groundingChunks && message.groundingChunks.length) {
                                object.groundingChunks = [];
                                for (var j = 0; j < message.groundingChunks.length; ++j)
                                    object.groundingChunks[j] = $root.google.ai.generativelanguage.v1.GroundingChunk.toObject(message.groundingChunks[j], options);
                            }
                            if (message.groundingSupports && message.groundingSupports.length) {
                                object.groundingSupports = [];
                                for (var j = 0; j < message.groundingSupports.length; ++j)
                                    object.groundingSupports[j] = $root.google.ai.generativelanguage.v1.GroundingSupport.toObject(message.groundingSupports[j], options);
                            }
                            if (message.retrievalMetadata != null && message.hasOwnProperty("retrievalMetadata")) {
                                object.retrievalMetadata = $root.google.ai.generativelanguage.v1.RetrievalMetadata.toObject(message.retrievalMetadata, options);
                                if (options.oneofs)
                                    object._retrievalMetadata = "retrievalMetadata";
                            }
                            if (message.webSearchQueries && message.webSearchQueries.length) {
                                object.webSearchQueries = [];
                                for (var j = 0; j < message.webSearchQueries.length; ++j)
                                    object.webSearchQueries[j] = message.webSearchQueries[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GroundingMetadata to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GroundingMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GroundingMetadata
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.GroundingMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GroundingMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.GroundingMetadata";
                        };
    
                        return GroundingMetadata;
                    })();
    
                    v1.SearchEntryPoint = (function() {
    
                        /**
                         * Properties of a SearchEntryPoint.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface ISearchEntryPoint
                         * @property {string|null} [renderedContent] SearchEntryPoint renderedContent
                         * @property {Uint8Array|null} [sdkBlob] SearchEntryPoint sdkBlob
                         */
    
                        /**
                         * Constructs a new SearchEntryPoint.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a SearchEntryPoint.
                         * @implements ISearchEntryPoint
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.ISearchEntryPoint=} [properties] Properties to set
                         */
                        function SearchEntryPoint(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchEntryPoint renderedContent.
                         * @member {string} renderedContent
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @instance
                         */
                        SearchEntryPoint.prototype.renderedContent = "";
    
                        /**
                         * SearchEntryPoint sdkBlob.
                         * @member {Uint8Array} sdkBlob
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @instance
                         */
                        SearchEntryPoint.prototype.sdkBlob = $util.newBuffer([]);
    
                        /**
                         * Creates a new SearchEntryPoint instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISearchEntryPoint=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.SearchEntryPoint} SearchEntryPoint instance
                         */
                        SearchEntryPoint.create = function create(properties) {
                            return new SearchEntryPoint(properties);
                        };
    
                        /**
                         * Encodes the specified SearchEntryPoint message. Does not implicitly {@link google.ai.generativelanguage.v1.SearchEntryPoint.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISearchEntryPoint} message SearchEntryPoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchEntryPoint.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.renderedContent != null && Object.hasOwnProperty.call(message, "renderedContent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.renderedContent);
                            if (message.sdkBlob != null && Object.hasOwnProperty.call(message, "sdkBlob"))
                                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.sdkBlob);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchEntryPoint message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.SearchEntryPoint.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISearchEntryPoint} message SearchEntryPoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchEntryPoint.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchEntryPoint message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.SearchEntryPoint} SearchEntryPoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchEntryPoint.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.SearchEntryPoint();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.renderedContent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.sdkBlob = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchEntryPoint message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.SearchEntryPoint} SearchEntryPoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchEntryPoint.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchEntryPoint message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchEntryPoint.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.renderedContent != null && message.hasOwnProperty("renderedContent"))
                                if (!$util.isString(message.renderedContent))
                                    return "renderedContent: string expected";
                            if (message.sdkBlob != null && message.hasOwnProperty("sdkBlob"))
                                if (!(message.sdkBlob && typeof message.sdkBlob.length === "number" || $util.isString(message.sdkBlob)))
                                    return "sdkBlob: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchEntryPoint message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.SearchEntryPoint} SearchEntryPoint
                         */
                        SearchEntryPoint.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.SearchEntryPoint)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.SearchEntryPoint();
                            if (object.renderedContent != null)
                                message.renderedContent = String(object.renderedContent);
                            if (object.sdkBlob != null)
                                if (typeof object.sdkBlob === "string")
                                    $util.base64.decode(object.sdkBlob, message.sdkBlob = $util.newBuffer($util.base64.length(object.sdkBlob)), 0);
                                else if (object.sdkBlob.length >= 0)
                                    message.sdkBlob = object.sdkBlob;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchEntryPoint message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @static
                         * @param {google.ai.generativelanguage.v1.SearchEntryPoint} message SearchEntryPoint
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchEntryPoint.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.renderedContent = "";
                                if (options.bytes === String)
                                    object.sdkBlob = "";
                                else {
                                    object.sdkBlob = [];
                                    if (options.bytes !== Array)
                                        object.sdkBlob = $util.newBuffer(object.sdkBlob);
                                }
                            }
                            if (message.renderedContent != null && message.hasOwnProperty("renderedContent"))
                                object.renderedContent = message.renderedContent;
                            if (message.sdkBlob != null && message.hasOwnProperty("sdkBlob"))
                                object.sdkBlob = options.bytes === String ? $util.base64.encode(message.sdkBlob, 0, message.sdkBlob.length) : options.bytes === Array ? Array.prototype.slice.call(message.sdkBlob) : message.sdkBlob;
                            return object;
                        };
    
                        /**
                         * Converts this SearchEntryPoint to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchEntryPoint.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchEntryPoint
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.SearchEntryPoint
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchEntryPoint.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.SearchEntryPoint";
                        };
    
                        return SearchEntryPoint;
                    })();
    
                    v1.GroundingChunk = (function() {
    
                        /**
                         * Properties of a GroundingChunk.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IGroundingChunk
                         * @property {google.ai.generativelanguage.v1.GroundingChunk.IWeb|null} [web] GroundingChunk web
                         */
    
                        /**
                         * Constructs a new GroundingChunk.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a GroundingChunk.
                         * @implements IGroundingChunk
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IGroundingChunk=} [properties] Properties to set
                         */
                        function GroundingChunk(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GroundingChunk web.
                         * @member {google.ai.generativelanguage.v1.GroundingChunk.IWeb|null|undefined} web
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @instance
                         */
                        GroundingChunk.prototype.web = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GroundingChunk chunkType.
                         * @member {"web"|undefined} chunkType
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @instance
                         */
                        Object.defineProperty(GroundingChunk.prototype, "chunkType", {
                            get: $util.oneOfGetter($oneOfFields = ["web"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GroundingChunk instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGroundingChunk=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.GroundingChunk} GroundingChunk instance
                         */
                        GroundingChunk.create = function create(properties) {
                            return new GroundingChunk(properties);
                        };
    
                        /**
                         * Encodes the specified GroundingChunk message. Does not implicitly {@link google.ai.generativelanguage.v1.GroundingChunk.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGroundingChunk} message GroundingChunk message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GroundingChunk.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.web != null && Object.hasOwnProperty.call(message, "web"))
                                $root.google.ai.generativelanguage.v1.GroundingChunk.Web.encode(message.web, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GroundingChunk message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.GroundingChunk.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGroundingChunk} message GroundingChunk message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GroundingChunk.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GroundingChunk message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.GroundingChunk} GroundingChunk
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GroundingChunk.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.GroundingChunk();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.web = $root.google.ai.generativelanguage.v1.GroundingChunk.Web.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GroundingChunk message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.GroundingChunk} GroundingChunk
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GroundingChunk.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GroundingChunk message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GroundingChunk.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.web != null && message.hasOwnProperty("web")) {
                                properties.chunkType = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1.GroundingChunk.Web.verify(message.web);
                                    if (error)
                                        return "web." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GroundingChunk message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.GroundingChunk} GroundingChunk
                         */
                        GroundingChunk.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.GroundingChunk)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.GroundingChunk();
                            if (object.web != null) {
                                if (typeof object.web !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.GroundingChunk.web: object expected");
                                message.web = $root.google.ai.generativelanguage.v1.GroundingChunk.Web.fromObject(object.web);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GroundingChunk message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @static
                         * @param {google.ai.generativelanguage.v1.GroundingChunk} message GroundingChunk
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GroundingChunk.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.web != null && message.hasOwnProperty("web")) {
                                object.web = $root.google.ai.generativelanguage.v1.GroundingChunk.Web.toObject(message.web, options);
                                if (options.oneofs)
                                    object.chunkType = "web";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GroundingChunk to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GroundingChunk.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GroundingChunk
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.GroundingChunk
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GroundingChunk.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.GroundingChunk";
                        };
    
                        GroundingChunk.Web = (function() {
    
                            /**
                             * Properties of a Web.
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk
                             * @interface IWeb
                             * @property {string|null} [uri] Web uri
                             * @property {string|null} [title] Web title
                             */
    
                            /**
                             * Constructs a new Web.
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk
                             * @classdesc Represents a Web.
                             * @implements IWeb
                             * @constructor
                             * @param {google.ai.generativelanguage.v1.GroundingChunk.IWeb=} [properties] Properties to set
                             */
                            function Web(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Web uri.
                             * @member {string|null|undefined} uri
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @instance
                             */
                            Web.prototype.uri = null;
    
                            /**
                             * Web title.
                             * @member {string|null|undefined} title
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @instance
                             */
                            Web.prototype.title = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Web _uri.
                             * @member {"uri"|undefined} _uri
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @instance
                             */
                            Object.defineProperty(Web.prototype, "_uri", {
                                get: $util.oneOfGetter($oneOfFields = ["uri"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Web _title.
                             * @member {"title"|undefined} _title
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @instance
                             */
                            Object.defineProperty(Web.prototype, "_title", {
                                get: $util.oneOfGetter($oneOfFields = ["title"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Web instance using the specified properties.
                             * @function create
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @static
                             * @param {google.ai.generativelanguage.v1.GroundingChunk.IWeb=} [properties] Properties to set
                             * @returns {google.ai.generativelanguage.v1.GroundingChunk.Web} Web instance
                             */
                            Web.create = function create(properties) {
                                return new Web(properties);
                            };
    
                            /**
                             * Encodes the specified Web message. Does not implicitly {@link google.ai.generativelanguage.v1.GroundingChunk.Web.verify|verify} messages.
                             * @function encode
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @static
                             * @param {google.ai.generativelanguage.v1.GroundingChunk.IWeb} message Web message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Web.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                                if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.title);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Web message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.GroundingChunk.Web.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @static
                             * @param {google.ai.generativelanguage.v1.GroundingChunk.IWeb} message Web message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Web.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Web message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.ai.generativelanguage.v1.GroundingChunk.Web} Web
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Web.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.GroundingChunk.Web();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.uri = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.title = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Web message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.ai.generativelanguage.v1.GroundingChunk.Web} Web
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Web.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Web message.
                             * @function verify
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Web.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.uri != null && message.hasOwnProperty("uri")) {
                                    properties._uri = 1;
                                    if (!$util.isString(message.uri))
                                        return "uri: string expected";
                                }
                                if (message.title != null && message.hasOwnProperty("title")) {
                                    properties._title = 1;
                                    if (!$util.isString(message.title))
                                        return "title: string expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Web message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.ai.generativelanguage.v1.GroundingChunk.Web} Web
                             */
                            Web.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.ai.generativelanguage.v1.GroundingChunk.Web)
                                    return object;
                                var message = new $root.google.ai.generativelanguage.v1.GroundingChunk.Web();
                                if (object.uri != null)
                                    message.uri = String(object.uri);
                                if (object.title != null)
                                    message.title = String(object.title);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Web message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @static
                             * @param {google.ai.generativelanguage.v1.GroundingChunk.Web} message Web
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Web.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.uri != null && message.hasOwnProperty("uri")) {
                                    object.uri = message.uri;
                                    if (options.oneofs)
                                        object._uri = "uri";
                                }
                                if (message.title != null && message.hasOwnProperty("title")) {
                                    object.title = message.title;
                                    if (options.oneofs)
                                        object._title = "title";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Web to JSON.
                             * @function toJSON
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Web.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Web
                             * @function getTypeUrl
                             * @memberof google.ai.generativelanguage.v1.GroundingChunk.Web
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Web.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.ai.generativelanguage.v1.GroundingChunk.Web";
                            };
    
                            return Web;
                        })();
    
                        return GroundingChunk;
                    })();
    
                    v1.Segment = (function() {
    
                        /**
                         * Properties of a Segment.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface ISegment
                         * @property {number|null} [partIndex] Segment partIndex
                         * @property {number|null} [startIndex] Segment startIndex
                         * @property {number|null} [endIndex] Segment endIndex
                         * @property {string|null} [text] Segment text
                         */
    
                        /**
                         * Constructs a new Segment.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a Segment.
                         * @implements ISegment
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.ISegment=} [properties] Properties to set
                         */
                        function Segment(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Segment partIndex.
                         * @member {number} partIndex
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @instance
                         */
                        Segment.prototype.partIndex = 0;
    
                        /**
                         * Segment startIndex.
                         * @member {number} startIndex
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @instance
                         */
                        Segment.prototype.startIndex = 0;
    
                        /**
                         * Segment endIndex.
                         * @member {number} endIndex
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @instance
                         */
                        Segment.prototype.endIndex = 0;
    
                        /**
                         * Segment text.
                         * @member {string} text
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @instance
                         */
                        Segment.prototype.text = "";
    
                        /**
                         * Creates a new Segment instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISegment=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.Segment} Segment instance
                         */
                        Segment.create = function create(properties) {
                            return new Segment(properties);
                        };
    
                        /**
                         * Encodes the specified Segment message. Does not implicitly {@link google.ai.generativelanguage.v1.Segment.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISegment} message Segment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Segment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.partIndex != null && Object.hasOwnProperty.call(message, "partIndex"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.partIndex);
                            if (message.startIndex != null && Object.hasOwnProperty.call(message, "startIndex"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.startIndex);
                            if (message.endIndex != null && Object.hasOwnProperty.call(message, "endIndex"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.endIndex);
                            if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.text);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Segment message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.Segment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISegment} message Segment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Segment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Segment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.Segment} Segment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Segment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.Segment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.partIndex = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.startIndex = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.endIndex = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.text = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Segment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.Segment} Segment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Segment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Segment message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Segment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.partIndex != null && message.hasOwnProperty("partIndex"))
                                if (!$util.isInteger(message.partIndex))
                                    return "partIndex: integer expected";
                            if (message.startIndex != null && message.hasOwnProperty("startIndex"))
                                if (!$util.isInteger(message.startIndex))
                                    return "startIndex: integer expected";
                            if (message.endIndex != null && message.hasOwnProperty("endIndex"))
                                if (!$util.isInteger(message.endIndex))
                                    return "endIndex: integer expected";
                            if (message.text != null && message.hasOwnProperty("text"))
                                if (!$util.isString(message.text))
                                    return "text: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Segment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.Segment} Segment
                         */
                        Segment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.Segment)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.Segment();
                            if (object.partIndex != null)
                                message.partIndex = object.partIndex | 0;
                            if (object.startIndex != null)
                                message.startIndex = object.startIndex | 0;
                            if (object.endIndex != null)
                                message.endIndex = object.endIndex | 0;
                            if (object.text != null)
                                message.text = String(object.text);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Segment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @static
                         * @param {google.ai.generativelanguage.v1.Segment} message Segment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Segment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.partIndex = 0;
                                object.startIndex = 0;
                                object.endIndex = 0;
                                object.text = "";
                            }
                            if (message.partIndex != null && message.hasOwnProperty("partIndex"))
                                object.partIndex = message.partIndex;
                            if (message.startIndex != null && message.hasOwnProperty("startIndex"))
                                object.startIndex = message.startIndex;
                            if (message.endIndex != null && message.hasOwnProperty("endIndex"))
                                object.endIndex = message.endIndex;
                            if (message.text != null && message.hasOwnProperty("text"))
                                object.text = message.text;
                            return object;
                        };
    
                        /**
                         * Converts this Segment to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Segment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Segment
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.Segment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Segment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.Segment";
                        };
    
                        return Segment;
                    })();
    
                    v1.GroundingSupport = (function() {
    
                        /**
                         * Properties of a GroundingSupport.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IGroundingSupport
                         * @property {google.ai.generativelanguage.v1.ISegment|null} [segment] GroundingSupport segment
                         * @property {Array.<number>|null} [groundingChunkIndices] GroundingSupport groundingChunkIndices
                         * @property {Array.<number>|null} [confidenceScores] GroundingSupport confidenceScores
                         */
    
                        /**
                         * Constructs a new GroundingSupport.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a GroundingSupport.
                         * @implements IGroundingSupport
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IGroundingSupport=} [properties] Properties to set
                         */
                        function GroundingSupport(properties) {
                            this.groundingChunkIndices = [];
                            this.confidenceScores = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GroundingSupport segment.
                         * @member {google.ai.generativelanguage.v1.ISegment|null|undefined} segment
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @instance
                         */
                        GroundingSupport.prototype.segment = null;
    
                        /**
                         * GroundingSupport groundingChunkIndices.
                         * @member {Array.<number>} groundingChunkIndices
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @instance
                         */
                        GroundingSupport.prototype.groundingChunkIndices = $util.emptyArray;
    
                        /**
                         * GroundingSupport confidenceScores.
                         * @member {Array.<number>} confidenceScores
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @instance
                         */
                        GroundingSupport.prototype.confidenceScores = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GroundingSupport _segment.
                         * @member {"segment"|undefined} _segment
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @instance
                         */
                        Object.defineProperty(GroundingSupport.prototype, "_segment", {
                            get: $util.oneOfGetter($oneOfFields = ["segment"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GroundingSupport instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGroundingSupport=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.GroundingSupport} GroundingSupport instance
                         */
                        GroundingSupport.create = function create(properties) {
                            return new GroundingSupport(properties);
                        };
    
                        /**
                         * Encodes the specified GroundingSupport message. Does not implicitly {@link google.ai.generativelanguage.v1.GroundingSupport.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGroundingSupport} message GroundingSupport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GroundingSupport.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.segment != null && Object.hasOwnProperty.call(message, "segment"))
                                $root.google.ai.generativelanguage.v1.Segment.encode(message.segment, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.groundingChunkIndices != null && message.groundingChunkIndices.length) {
                                writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                for (var i = 0; i < message.groundingChunkIndices.length; ++i)
                                    writer.int32(message.groundingChunkIndices[i]);
                                writer.ldelim();
                            }
                            if (message.confidenceScores != null && message.confidenceScores.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.confidenceScores.length; ++i)
                                    writer.float(message.confidenceScores[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GroundingSupport message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.GroundingSupport.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGroundingSupport} message GroundingSupport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GroundingSupport.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GroundingSupport message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.GroundingSupport} GroundingSupport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GroundingSupport.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.GroundingSupport();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.segment = $root.google.ai.generativelanguage.v1.Segment.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        if (!(message.groundingChunkIndices && message.groundingChunkIndices.length))
                                            message.groundingChunkIndices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.groundingChunkIndices.push(reader.int32());
                                        } else
                                            message.groundingChunkIndices.push(reader.int32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.confidenceScores && message.confidenceScores.length))
                                            message.confidenceScores = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.confidenceScores.push(reader.float());
                                        } else
                                            message.confidenceScores.push(reader.float());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GroundingSupport message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.GroundingSupport} GroundingSupport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GroundingSupport.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GroundingSupport message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GroundingSupport.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.segment != null && message.hasOwnProperty("segment")) {
                                properties._segment = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1.Segment.verify(message.segment);
                                    if (error)
                                        return "segment." + error;
                                }
                            }
                            if (message.groundingChunkIndices != null && message.hasOwnProperty("groundingChunkIndices")) {
                                if (!Array.isArray(message.groundingChunkIndices))
                                    return "groundingChunkIndices: array expected";
                                for (var i = 0; i < message.groundingChunkIndices.length; ++i)
                                    if (!$util.isInteger(message.groundingChunkIndices[i]))
                                        return "groundingChunkIndices: integer[] expected";
                            }
                            if (message.confidenceScores != null && message.hasOwnProperty("confidenceScores")) {
                                if (!Array.isArray(message.confidenceScores))
                                    return "confidenceScores: array expected";
                                for (var i = 0; i < message.confidenceScores.length; ++i)
                                    if (typeof message.confidenceScores[i] !== "number")
                                        return "confidenceScores: number[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GroundingSupport message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.GroundingSupport} GroundingSupport
                         */
                        GroundingSupport.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.GroundingSupport)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.GroundingSupport();
                            if (object.segment != null) {
                                if (typeof object.segment !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.GroundingSupport.segment: object expected");
                                message.segment = $root.google.ai.generativelanguage.v1.Segment.fromObject(object.segment);
                            }
                            if (object.groundingChunkIndices) {
                                if (!Array.isArray(object.groundingChunkIndices))
                                    throw TypeError(".google.ai.generativelanguage.v1.GroundingSupport.groundingChunkIndices: array expected");
                                message.groundingChunkIndices = [];
                                for (var i = 0; i < object.groundingChunkIndices.length; ++i)
                                    message.groundingChunkIndices[i] = object.groundingChunkIndices[i] | 0;
                            }
                            if (object.confidenceScores) {
                                if (!Array.isArray(object.confidenceScores))
                                    throw TypeError(".google.ai.generativelanguage.v1.GroundingSupport.confidenceScores: array expected");
                                message.confidenceScores = [];
                                for (var i = 0; i < object.confidenceScores.length; ++i)
                                    message.confidenceScores[i] = Number(object.confidenceScores[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GroundingSupport message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @static
                         * @param {google.ai.generativelanguage.v1.GroundingSupport} message GroundingSupport
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GroundingSupport.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.groundingChunkIndices = [];
                                object.confidenceScores = [];
                            }
                            if (message.segment != null && message.hasOwnProperty("segment")) {
                                object.segment = $root.google.ai.generativelanguage.v1.Segment.toObject(message.segment, options);
                                if (options.oneofs)
                                    object._segment = "segment";
                            }
                            if (message.groundingChunkIndices && message.groundingChunkIndices.length) {
                                object.groundingChunkIndices = [];
                                for (var j = 0; j < message.groundingChunkIndices.length; ++j)
                                    object.groundingChunkIndices[j] = message.groundingChunkIndices[j];
                            }
                            if (message.confidenceScores && message.confidenceScores.length) {
                                object.confidenceScores = [];
                                for (var j = 0; j < message.confidenceScores.length; ++j)
                                    object.confidenceScores[j] = options.json && !isFinite(message.confidenceScores[j]) ? String(message.confidenceScores[j]) : message.confidenceScores[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GroundingSupport to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GroundingSupport.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GroundingSupport
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.GroundingSupport
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GroundingSupport.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.GroundingSupport";
                        };
    
                        return GroundingSupport;
                    })();
    
                    v1.EmbedContentRequest = (function() {
    
                        /**
                         * Properties of an EmbedContentRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IEmbedContentRequest
                         * @property {string|null} [model] EmbedContentRequest model
                         * @property {google.ai.generativelanguage.v1.IContent|null} [content] EmbedContentRequest content
                         * @property {google.ai.generativelanguage.v1.TaskType|null} [taskType] EmbedContentRequest taskType
                         * @property {string|null} [title] EmbedContentRequest title
                         * @property {number|null} [outputDimensionality] EmbedContentRequest outputDimensionality
                         */
    
                        /**
                         * Constructs a new EmbedContentRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents an EmbedContentRequest.
                         * @implements IEmbedContentRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IEmbedContentRequest=} [properties] Properties to set
                         */
                        function EmbedContentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EmbedContentRequest model.
                         * @member {string} model
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @instance
                         */
                        EmbedContentRequest.prototype.model = "";
    
                        /**
                         * EmbedContentRequest content.
                         * @member {google.ai.generativelanguage.v1.IContent|null|undefined} content
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @instance
                         */
                        EmbedContentRequest.prototype.content = null;
    
                        /**
                         * EmbedContentRequest taskType.
                         * @member {google.ai.generativelanguage.v1.TaskType|null|undefined} taskType
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @instance
                         */
                        EmbedContentRequest.prototype.taskType = null;
    
                        /**
                         * EmbedContentRequest title.
                         * @member {string|null|undefined} title
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @instance
                         */
                        EmbedContentRequest.prototype.title = null;
    
                        /**
                         * EmbedContentRequest outputDimensionality.
                         * @member {number|null|undefined} outputDimensionality
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @instance
                         */
                        EmbedContentRequest.prototype.outputDimensionality = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * EmbedContentRequest _taskType.
                         * @member {"taskType"|undefined} _taskType
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @instance
                         */
                        Object.defineProperty(EmbedContentRequest.prototype, "_taskType", {
                            get: $util.oneOfGetter($oneOfFields = ["taskType"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * EmbedContentRequest _title.
                         * @member {"title"|undefined} _title
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @instance
                         */
                        Object.defineProperty(EmbedContentRequest.prototype, "_title", {
                            get: $util.oneOfGetter($oneOfFields = ["title"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * EmbedContentRequest _outputDimensionality.
                         * @member {"outputDimensionality"|undefined} _outputDimensionality
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @instance
                         */
                        Object.defineProperty(EmbedContentRequest.prototype, "_outputDimensionality", {
                            get: $util.oneOfGetter($oneOfFields = ["outputDimensionality"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new EmbedContentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IEmbedContentRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.EmbedContentRequest} EmbedContentRequest instance
                         */
                        EmbedContentRequest.create = function create(properties) {
                            return new EmbedContentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified EmbedContentRequest message. Does not implicitly {@link google.ai.generativelanguage.v1.EmbedContentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IEmbedContentRequest} message EmbedContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EmbedContentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.model != null && Object.hasOwnProperty.call(message, "model"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.model);
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                $root.google.ai.generativelanguage.v1.Content.encode(message.content, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.taskType != null && Object.hasOwnProperty.call(message, "taskType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.taskType);
                            if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.title);
                            if (message.outputDimensionality != null && Object.hasOwnProperty.call(message, "outputDimensionality"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.outputDimensionality);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EmbedContentRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.EmbedContentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IEmbedContentRequest} message EmbedContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EmbedContentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EmbedContentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.EmbedContentRequest} EmbedContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EmbedContentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.EmbedContentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.model = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.content = $root.google.ai.generativelanguage.v1.Content.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.taskType = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.title = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.outputDimensionality = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EmbedContentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.EmbedContentRequest} EmbedContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EmbedContentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EmbedContentRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EmbedContentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.model != null && message.hasOwnProperty("model"))
                                if (!$util.isString(message.model))
                                    return "model: string expected";
                            if (message.content != null && message.hasOwnProperty("content")) {
                                var error = $root.google.ai.generativelanguage.v1.Content.verify(message.content);
                                if (error)
                                    return "content." + error;
                            }
                            if (message.taskType != null && message.hasOwnProperty("taskType")) {
                                properties._taskType = 1;
                                switch (message.taskType) {
                                default:
                                    return "taskType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            }
                            if (message.title != null && message.hasOwnProperty("title")) {
                                properties._title = 1;
                                if (!$util.isString(message.title))
                                    return "title: string expected";
                            }
                            if (message.outputDimensionality != null && message.hasOwnProperty("outputDimensionality")) {
                                properties._outputDimensionality = 1;
                                if (!$util.isInteger(message.outputDimensionality))
                                    return "outputDimensionality: integer expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EmbedContentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.EmbedContentRequest} EmbedContentRequest
                         */
                        EmbedContentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.EmbedContentRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.EmbedContentRequest();
                            if (object.model != null)
                                message.model = String(object.model);
                            if (object.content != null) {
                                if (typeof object.content !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.EmbedContentRequest.content: object expected");
                                message.content = $root.google.ai.generativelanguage.v1.Content.fromObject(object.content);
                            }
                            switch (object.taskType) {
                            default:
                                if (typeof object.taskType === "number") {
                                    message.taskType = object.taskType;
                                    break;
                                }
                                break;
                            case "TASK_TYPE_UNSPECIFIED":
                            case 0:
                                message.taskType = 0;
                                break;
                            case "RETRIEVAL_QUERY":
                            case 1:
                                message.taskType = 1;
                                break;
                            case "RETRIEVAL_DOCUMENT":
                            case 2:
                                message.taskType = 2;
                                break;
                            case "SEMANTIC_SIMILARITY":
                            case 3:
                                message.taskType = 3;
                                break;
                            case "CLASSIFICATION":
                            case 4:
                                message.taskType = 4;
                                break;
                            case "CLUSTERING":
                            case 5:
                                message.taskType = 5;
                                break;
                            case "QUESTION_ANSWERING":
                            case 6:
                                message.taskType = 6;
                                break;
                            case "FACT_VERIFICATION":
                            case 7:
                                message.taskType = 7;
                                break;
                            }
                            if (object.title != null)
                                message.title = String(object.title);
                            if (object.outputDimensionality != null)
                                message.outputDimensionality = object.outputDimensionality | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EmbedContentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.EmbedContentRequest} message EmbedContentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EmbedContentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.model = "";
                                object.content = null;
                            }
                            if (message.model != null && message.hasOwnProperty("model"))
                                object.model = message.model;
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = $root.google.ai.generativelanguage.v1.Content.toObject(message.content, options);
                            if (message.taskType != null && message.hasOwnProperty("taskType")) {
                                object.taskType = options.enums === String ? $root.google.ai.generativelanguage.v1.TaskType[message.taskType] === undefined ? message.taskType : $root.google.ai.generativelanguage.v1.TaskType[message.taskType] : message.taskType;
                                if (options.oneofs)
                                    object._taskType = "taskType";
                            }
                            if (message.title != null && message.hasOwnProperty("title")) {
                                object.title = message.title;
                                if (options.oneofs)
                                    object._title = "title";
                            }
                            if (message.outputDimensionality != null && message.hasOwnProperty("outputDimensionality")) {
                                object.outputDimensionality = message.outputDimensionality;
                                if (options.oneofs)
                                    object._outputDimensionality = "outputDimensionality";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this EmbedContentRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EmbedContentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EmbedContentRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.EmbedContentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EmbedContentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.EmbedContentRequest";
                        };
    
                        return EmbedContentRequest;
                    })();
    
                    v1.ContentEmbedding = (function() {
    
                        /**
                         * Properties of a ContentEmbedding.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IContentEmbedding
                         * @property {Array.<number>|null} [values] ContentEmbedding values
                         */
    
                        /**
                         * Constructs a new ContentEmbedding.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a ContentEmbedding.
                         * @implements IContentEmbedding
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IContentEmbedding=} [properties] Properties to set
                         */
                        function ContentEmbedding(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContentEmbedding values.
                         * @member {Array.<number>} values
                         * @memberof google.ai.generativelanguage.v1.ContentEmbedding
                         * @instance
                         */
                        ContentEmbedding.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new ContentEmbedding instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.ContentEmbedding
                         * @static
                         * @param {google.ai.generativelanguage.v1.IContentEmbedding=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.ContentEmbedding} ContentEmbedding instance
                         */
                        ContentEmbedding.create = function create(properties) {
                            return new ContentEmbedding(properties);
                        };
    
                        /**
                         * Encodes the specified ContentEmbedding message. Does not implicitly {@link google.ai.generativelanguage.v1.ContentEmbedding.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.ContentEmbedding
                         * @static
                         * @param {google.ai.generativelanguage.v1.IContentEmbedding} message ContentEmbedding message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContentEmbedding.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && message.values.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.values.length; ++i)
                                    writer.float(message.values[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContentEmbedding message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.ContentEmbedding.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.ContentEmbedding
                         * @static
                         * @param {google.ai.generativelanguage.v1.IContentEmbedding} message ContentEmbedding message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContentEmbedding.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContentEmbedding message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.ContentEmbedding
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.ContentEmbedding} ContentEmbedding
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContentEmbedding.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.ContentEmbedding();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.values.push(reader.float());
                                        } else
                                            message.values.push(reader.float());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContentEmbedding message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.ContentEmbedding
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.ContentEmbedding} ContentEmbedding
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContentEmbedding.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContentEmbedding message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.ContentEmbedding
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContentEmbedding.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i)
                                    if (typeof message.values[i] !== "number")
                                        return "values: number[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ContentEmbedding message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.ContentEmbedding
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.ContentEmbedding} ContentEmbedding
                         */
                        ContentEmbedding.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.ContentEmbedding)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.ContentEmbedding();
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.ai.generativelanguage.v1.ContentEmbedding.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i)
                                    message.values[i] = Number(object.values[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContentEmbedding message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.ContentEmbedding
                         * @static
                         * @param {google.ai.generativelanguage.v1.ContentEmbedding} message ContentEmbedding
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContentEmbedding.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = options.json && !isFinite(message.values[j]) ? String(message.values[j]) : message.values[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ContentEmbedding to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.ContentEmbedding
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContentEmbedding.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContentEmbedding
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.ContentEmbedding
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContentEmbedding.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.ContentEmbedding";
                        };
    
                        return ContentEmbedding;
                    })();
    
                    v1.EmbedContentResponse = (function() {
    
                        /**
                         * Properties of an EmbedContentResponse.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IEmbedContentResponse
                         * @property {google.ai.generativelanguage.v1.IContentEmbedding|null} [embedding] EmbedContentResponse embedding
                         */
    
                        /**
                         * Constructs a new EmbedContentResponse.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents an EmbedContentResponse.
                         * @implements IEmbedContentResponse
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IEmbedContentResponse=} [properties] Properties to set
                         */
                        function EmbedContentResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EmbedContentResponse embedding.
                         * @member {google.ai.generativelanguage.v1.IContentEmbedding|null|undefined} embedding
                         * @memberof google.ai.generativelanguage.v1.EmbedContentResponse
                         * @instance
                         */
                        EmbedContentResponse.prototype.embedding = null;
    
                        /**
                         * Creates a new EmbedContentResponse instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.EmbedContentResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IEmbedContentResponse=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.EmbedContentResponse} EmbedContentResponse instance
                         */
                        EmbedContentResponse.create = function create(properties) {
                            return new EmbedContentResponse(properties);
                        };
    
                        /**
                         * Encodes the specified EmbedContentResponse message. Does not implicitly {@link google.ai.generativelanguage.v1.EmbedContentResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.EmbedContentResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IEmbedContentResponse} message EmbedContentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EmbedContentResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.embedding != null && Object.hasOwnProperty.call(message, "embedding"))
                                $root.google.ai.generativelanguage.v1.ContentEmbedding.encode(message.embedding, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EmbedContentResponse message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.EmbedContentResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.EmbedContentResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IEmbedContentResponse} message EmbedContentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EmbedContentResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EmbedContentResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.EmbedContentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.EmbedContentResponse} EmbedContentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EmbedContentResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.EmbedContentResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.embedding = $root.google.ai.generativelanguage.v1.ContentEmbedding.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EmbedContentResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.EmbedContentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.EmbedContentResponse} EmbedContentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EmbedContentResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EmbedContentResponse message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.EmbedContentResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EmbedContentResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.embedding != null && message.hasOwnProperty("embedding")) {
                                var error = $root.google.ai.generativelanguage.v1.ContentEmbedding.verify(message.embedding);
                                if (error)
                                    return "embedding." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EmbedContentResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.EmbedContentResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.EmbedContentResponse} EmbedContentResponse
                         */
                        EmbedContentResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.EmbedContentResponse)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.EmbedContentResponse();
                            if (object.embedding != null) {
                                if (typeof object.embedding !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.EmbedContentResponse.embedding: object expected");
                                message.embedding = $root.google.ai.generativelanguage.v1.ContentEmbedding.fromObject(object.embedding);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EmbedContentResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.EmbedContentResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.EmbedContentResponse} message EmbedContentResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EmbedContentResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.embedding = null;
                            if (message.embedding != null && message.hasOwnProperty("embedding"))
                                object.embedding = $root.google.ai.generativelanguage.v1.ContentEmbedding.toObject(message.embedding, options);
                            return object;
                        };
    
                        /**
                         * Converts this EmbedContentResponse to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.EmbedContentResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EmbedContentResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EmbedContentResponse
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.EmbedContentResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EmbedContentResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.EmbedContentResponse";
                        };
    
                        return EmbedContentResponse;
                    })();
    
                    v1.BatchEmbedContentsRequest = (function() {
    
                        /**
                         * Properties of a BatchEmbedContentsRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IBatchEmbedContentsRequest
                         * @property {string|null} [model] BatchEmbedContentsRequest model
                         * @property {Array.<google.ai.generativelanguage.v1.IEmbedContentRequest>|null} [requests] BatchEmbedContentsRequest requests
                         */
    
                        /**
                         * Constructs a new BatchEmbedContentsRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a BatchEmbedContentsRequest.
                         * @implements IBatchEmbedContentsRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IBatchEmbedContentsRequest=} [properties] Properties to set
                         */
                        function BatchEmbedContentsRequest(properties) {
                            this.requests = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchEmbedContentsRequest model.
                         * @member {string} model
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @instance
                         */
                        BatchEmbedContentsRequest.prototype.model = "";
    
                        /**
                         * BatchEmbedContentsRequest requests.
                         * @member {Array.<google.ai.generativelanguage.v1.IEmbedContentRequest>} requests
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @instance
                         */
                        BatchEmbedContentsRequest.prototype.requests = $util.emptyArray;
    
                        /**
                         * Creates a new BatchEmbedContentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IBatchEmbedContentsRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.BatchEmbedContentsRequest} BatchEmbedContentsRequest instance
                         */
                        BatchEmbedContentsRequest.create = function create(properties) {
                            return new BatchEmbedContentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified BatchEmbedContentsRequest message. Does not implicitly {@link google.ai.generativelanguage.v1.BatchEmbedContentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IBatchEmbedContentsRequest} message BatchEmbedContentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchEmbedContentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.model != null && Object.hasOwnProperty.call(message, "model"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.model);
                            if (message.requests != null && message.requests.length)
                                for (var i = 0; i < message.requests.length; ++i)
                                    $root.google.ai.generativelanguage.v1.EmbedContentRequest.encode(message.requests[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchEmbedContentsRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.BatchEmbedContentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IBatchEmbedContentsRequest} message BatchEmbedContentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchEmbedContentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchEmbedContentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.BatchEmbedContentsRequest} BatchEmbedContentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchEmbedContentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.BatchEmbedContentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.model = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.requests && message.requests.length))
                                            message.requests = [];
                                        message.requests.push($root.google.ai.generativelanguage.v1.EmbedContentRequest.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchEmbedContentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.BatchEmbedContentsRequest} BatchEmbedContentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchEmbedContentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchEmbedContentsRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchEmbedContentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.model != null && message.hasOwnProperty("model"))
                                if (!$util.isString(message.model))
                                    return "model: string expected";
                            if (message.requests != null && message.hasOwnProperty("requests")) {
                                if (!Array.isArray(message.requests))
                                    return "requests: array expected";
                                for (var i = 0; i < message.requests.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.EmbedContentRequest.verify(message.requests[i]);
                                    if (error)
                                        return "requests." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchEmbedContentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.BatchEmbedContentsRequest} BatchEmbedContentsRequest
                         */
                        BatchEmbedContentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.BatchEmbedContentsRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.BatchEmbedContentsRequest();
                            if (object.model != null)
                                message.model = String(object.model);
                            if (object.requests) {
                                if (!Array.isArray(object.requests))
                                    throw TypeError(".google.ai.generativelanguage.v1.BatchEmbedContentsRequest.requests: array expected");
                                message.requests = [];
                                for (var i = 0; i < object.requests.length; ++i) {
                                    if (typeof object.requests[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.BatchEmbedContentsRequest.requests: object expected");
                                    message.requests[i] = $root.google.ai.generativelanguage.v1.EmbedContentRequest.fromObject(object.requests[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchEmbedContentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.BatchEmbedContentsRequest} message BatchEmbedContentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchEmbedContentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.requests = [];
                            if (options.defaults)
                                object.model = "";
                            if (message.model != null && message.hasOwnProperty("model"))
                                object.model = message.model;
                            if (message.requests && message.requests.length) {
                                object.requests = [];
                                for (var j = 0; j < message.requests.length; ++j)
                                    object.requests[j] = $root.google.ai.generativelanguage.v1.EmbedContentRequest.toObject(message.requests[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchEmbedContentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchEmbedContentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchEmbedContentsRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchEmbedContentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.BatchEmbedContentsRequest";
                        };
    
                        return BatchEmbedContentsRequest;
                    })();
    
                    v1.BatchEmbedContentsResponse = (function() {
    
                        /**
                         * Properties of a BatchEmbedContentsResponse.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IBatchEmbedContentsResponse
                         * @property {Array.<google.ai.generativelanguage.v1.IContentEmbedding>|null} [embeddings] BatchEmbedContentsResponse embeddings
                         */
    
                        /**
                         * Constructs a new BatchEmbedContentsResponse.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a BatchEmbedContentsResponse.
                         * @implements IBatchEmbedContentsResponse
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IBatchEmbedContentsResponse=} [properties] Properties to set
                         */
                        function BatchEmbedContentsResponse(properties) {
                            this.embeddings = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchEmbedContentsResponse embeddings.
                         * @member {Array.<google.ai.generativelanguage.v1.IContentEmbedding>} embeddings
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsResponse
                         * @instance
                         */
                        BatchEmbedContentsResponse.prototype.embeddings = $util.emptyArray;
    
                        /**
                         * Creates a new BatchEmbedContentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IBatchEmbedContentsResponse=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.BatchEmbedContentsResponse} BatchEmbedContentsResponse instance
                         */
                        BatchEmbedContentsResponse.create = function create(properties) {
                            return new BatchEmbedContentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified BatchEmbedContentsResponse message. Does not implicitly {@link google.ai.generativelanguage.v1.BatchEmbedContentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IBatchEmbedContentsResponse} message BatchEmbedContentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchEmbedContentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.embeddings != null && message.embeddings.length)
                                for (var i = 0; i < message.embeddings.length; ++i)
                                    $root.google.ai.generativelanguage.v1.ContentEmbedding.encode(message.embeddings[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchEmbedContentsResponse message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.BatchEmbedContentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IBatchEmbedContentsResponse} message BatchEmbedContentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchEmbedContentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchEmbedContentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.BatchEmbedContentsResponse} BatchEmbedContentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchEmbedContentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.BatchEmbedContentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.embeddings && message.embeddings.length))
                                            message.embeddings = [];
                                        message.embeddings.push($root.google.ai.generativelanguage.v1.ContentEmbedding.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchEmbedContentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.BatchEmbedContentsResponse} BatchEmbedContentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchEmbedContentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchEmbedContentsResponse message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchEmbedContentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.embeddings != null && message.hasOwnProperty("embeddings")) {
                                if (!Array.isArray(message.embeddings))
                                    return "embeddings: array expected";
                                for (var i = 0; i < message.embeddings.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.ContentEmbedding.verify(message.embeddings[i]);
                                    if (error)
                                        return "embeddings." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchEmbedContentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.BatchEmbedContentsResponse} BatchEmbedContentsResponse
                         */
                        BatchEmbedContentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.BatchEmbedContentsResponse)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.BatchEmbedContentsResponse();
                            if (object.embeddings) {
                                if (!Array.isArray(object.embeddings))
                                    throw TypeError(".google.ai.generativelanguage.v1.BatchEmbedContentsResponse.embeddings: array expected");
                                message.embeddings = [];
                                for (var i = 0; i < object.embeddings.length; ++i) {
                                    if (typeof object.embeddings[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.BatchEmbedContentsResponse.embeddings: object expected");
                                    message.embeddings[i] = $root.google.ai.generativelanguage.v1.ContentEmbedding.fromObject(object.embeddings[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchEmbedContentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.BatchEmbedContentsResponse} message BatchEmbedContentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchEmbedContentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.embeddings = [];
                            if (message.embeddings && message.embeddings.length) {
                                object.embeddings = [];
                                for (var j = 0; j < message.embeddings.length; ++j)
                                    object.embeddings[j] = $root.google.ai.generativelanguage.v1.ContentEmbedding.toObject(message.embeddings[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchEmbedContentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchEmbedContentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchEmbedContentsResponse
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.BatchEmbedContentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchEmbedContentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.BatchEmbedContentsResponse";
                        };
    
                        return BatchEmbedContentsResponse;
                    })();
    
                    v1.CountTokensRequest = (function() {
    
                        /**
                         * Properties of a CountTokensRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface ICountTokensRequest
                         * @property {string|null} [model] CountTokensRequest model
                         * @property {Array.<google.ai.generativelanguage.v1.IContent>|null} [contents] CountTokensRequest contents
                         * @property {google.ai.generativelanguage.v1.IGenerateContentRequest|null} [generateContentRequest] CountTokensRequest generateContentRequest
                         */
    
                        /**
                         * Constructs a new CountTokensRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a CountTokensRequest.
                         * @implements ICountTokensRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.ICountTokensRequest=} [properties] Properties to set
                         */
                        function CountTokensRequest(properties) {
                            this.contents = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CountTokensRequest model.
                         * @member {string} model
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @instance
                         */
                        CountTokensRequest.prototype.model = "";
    
                        /**
                         * CountTokensRequest contents.
                         * @member {Array.<google.ai.generativelanguage.v1.IContent>} contents
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @instance
                         */
                        CountTokensRequest.prototype.contents = $util.emptyArray;
    
                        /**
                         * CountTokensRequest generateContentRequest.
                         * @member {google.ai.generativelanguage.v1.IGenerateContentRequest|null|undefined} generateContentRequest
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @instance
                         */
                        CountTokensRequest.prototype.generateContentRequest = null;
    
                        /**
                         * Creates a new CountTokensRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICountTokensRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.CountTokensRequest} CountTokensRequest instance
                         */
                        CountTokensRequest.create = function create(properties) {
                            return new CountTokensRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CountTokensRequest message. Does not implicitly {@link google.ai.generativelanguage.v1.CountTokensRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICountTokensRequest} message CountTokensRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CountTokensRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.model != null && Object.hasOwnProperty.call(message, "model"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.model);
                            if (message.contents != null && message.contents.length)
                                for (var i = 0; i < message.contents.length; ++i)
                                    $root.google.ai.generativelanguage.v1.Content.encode(message.contents[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.generateContentRequest != null && Object.hasOwnProperty.call(message, "generateContentRequest"))
                                $root.google.ai.generativelanguage.v1.GenerateContentRequest.encode(message.generateContentRequest, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CountTokensRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.CountTokensRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICountTokensRequest} message CountTokensRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CountTokensRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CountTokensRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.CountTokensRequest} CountTokensRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CountTokensRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.CountTokensRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.model = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.contents && message.contents.length))
                                            message.contents = [];
                                        message.contents.push($root.google.ai.generativelanguage.v1.Content.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.generateContentRequest = $root.google.ai.generativelanguage.v1.GenerateContentRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CountTokensRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.CountTokensRequest} CountTokensRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CountTokensRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CountTokensRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CountTokensRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.model != null && message.hasOwnProperty("model"))
                                if (!$util.isString(message.model))
                                    return "model: string expected";
                            if (message.contents != null && message.hasOwnProperty("contents")) {
                                if (!Array.isArray(message.contents))
                                    return "contents: array expected";
                                for (var i = 0; i < message.contents.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.Content.verify(message.contents[i]);
                                    if (error)
                                        return "contents." + error;
                                }
                            }
                            if (message.generateContentRequest != null && message.hasOwnProperty("generateContentRequest")) {
                                var error = $root.google.ai.generativelanguage.v1.GenerateContentRequest.verify(message.generateContentRequest);
                                if (error)
                                    return "generateContentRequest." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CountTokensRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.CountTokensRequest} CountTokensRequest
                         */
                        CountTokensRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.CountTokensRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.CountTokensRequest();
                            if (object.model != null)
                                message.model = String(object.model);
                            if (object.contents) {
                                if (!Array.isArray(object.contents))
                                    throw TypeError(".google.ai.generativelanguage.v1.CountTokensRequest.contents: array expected");
                                message.contents = [];
                                for (var i = 0; i < object.contents.length; ++i) {
                                    if (typeof object.contents[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.CountTokensRequest.contents: object expected");
                                    message.contents[i] = $root.google.ai.generativelanguage.v1.Content.fromObject(object.contents[i]);
                                }
                            }
                            if (object.generateContentRequest != null) {
                                if (typeof object.generateContentRequest !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1.CountTokensRequest.generateContentRequest: object expected");
                                message.generateContentRequest = $root.google.ai.generativelanguage.v1.GenerateContentRequest.fromObject(object.generateContentRequest);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CountTokensRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.CountTokensRequest} message CountTokensRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CountTokensRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.contents = [];
                            if (options.defaults) {
                                object.model = "";
                                object.generateContentRequest = null;
                            }
                            if (message.model != null && message.hasOwnProperty("model"))
                                object.model = message.model;
                            if (message.contents && message.contents.length) {
                                object.contents = [];
                                for (var j = 0; j < message.contents.length; ++j)
                                    object.contents[j] = $root.google.ai.generativelanguage.v1.Content.toObject(message.contents[j], options);
                            }
                            if (message.generateContentRequest != null && message.hasOwnProperty("generateContentRequest"))
                                object.generateContentRequest = $root.google.ai.generativelanguage.v1.GenerateContentRequest.toObject(message.generateContentRequest, options);
                            return object;
                        };
    
                        /**
                         * Converts this CountTokensRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CountTokensRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CountTokensRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.CountTokensRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CountTokensRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.CountTokensRequest";
                        };
    
                        return CountTokensRequest;
                    })();
    
                    v1.CountTokensResponse = (function() {
    
                        /**
                         * Properties of a CountTokensResponse.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface ICountTokensResponse
                         * @property {number|null} [totalTokens] CountTokensResponse totalTokens
                         */
    
                        /**
                         * Constructs a new CountTokensResponse.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a CountTokensResponse.
                         * @implements ICountTokensResponse
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.ICountTokensResponse=} [properties] Properties to set
                         */
                        function CountTokensResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CountTokensResponse totalTokens.
                         * @member {number} totalTokens
                         * @memberof google.ai.generativelanguage.v1.CountTokensResponse
                         * @instance
                         */
                        CountTokensResponse.prototype.totalTokens = 0;
    
                        /**
                         * Creates a new CountTokensResponse instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.CountTokensResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICountTokensResponse=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.CountTokensResponse} CountTokensResponse instance
                         */
                        CountTokensResponse.create = function create(properties) {
                            return new CountTokensResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CountTokensResponse message. Does not implicitly {@link google.ai.generativelanguage.v1.CountTokensResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.CountTokensResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICountTokensResponse} message CountTokensResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CountTokensResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.totalTokens != null && Object.hasOwnProperty.call(message, "totalTokens"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.totalTokens);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CountTokensResponse message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.CountTokensResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.CountTokensResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.ICountTokensResponse} message CountTokensResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CountTokensResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CountTokensResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.CountTokensResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.CountTokensResponse} CountTokensResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CountTokensResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.CountTokensResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.totalTokens = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CountTokensResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.CountTokensResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.CountTokensResponse} CountTokensResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CountTokensResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CountTokensResponse message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.CountTokensResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CountTokensResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.totalTokens != null && message.hasOwnProperty("totalTokens"))
                                if (!$util.isInteger(message.totalTokens))
                                    return "totalTokens: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a CountTokensResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.CountTokensResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.CountTokensResponse} CountTokensResponse
                         */
                        CountTokensResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.CountTokensResponse)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.CountTokensResponse();
                            if (object.totalTokens != null)
                                message.totalTokens = object.totalTokens | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CountTokensResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.CountTokensResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.CountTokensResponse} message CountTokensResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CountTokensResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.totalTokens = 0;
                            if (message.totalTokens != null && message.hasOwnProperty("totalTokens"))
                                object.totalTokens = message.totalTokens;
                            return object;
                        };
    
                        /**
                         * Converts this CountTokensResponse to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.CountTokensResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CountTokensResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CountTokensResponse
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.CountTokensResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CountTokensResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.CountTokensResponse";
                        };
    
                        return CountTokensResponse;
                    })();
    
                    /**
                     * HarmCategory enum.
                     * @name google.ai.generativelanguage.v1.HarmCategory
                     * @enum {number}
                     * @property {number} HARM_CATEGORY_UNSPECIFIED=0 HARM_CATEGORY_UNSPECIFIED value
                     * @property {number} HARM_CATEGORY_DEROGATORY=1 HARM_CATEGORY_DEROGATORY value
                     * @property {number} HARM_CATEGORY_TOXICITY=2 HARM_CATEGORY_TOXICITY value
                     * @property {number} HARM_CATEGORY_VIOLENCE=3 HARM_CATEGORY_VIOLENCE value
                     * @property {number} HARM_CATEGORY_SEXUAL=4 HARM_CATEGORY_SEXUAL value
                     * @property {number} HARM_CATEGORY_MEDICAL=5 HARM_CATEGORY_MEDICAL value
                     * @property {number} HARM_CATEGORY_DANGEROUS=6 HARM_CATEGORY_DANGEROUS value
                     * @property {number} HARM_CATEGORY_HARASSMENT=7 HARM_CATEGORY_HARASSMENT value
                     * @property {number} HARM_CATEGORY_HATE_SPEECH=8 HARM_CATEGORY_HATE_SPEECH value
                     * @property {number} HARM_CATEGORY_SEXUALLY_EXPLICIT=9 HARM_CATEGORY_SEXUALLY_EXPLICIT value
                     * @property {number} HARM_CATEGORY_DANGEROUS_CONTENT=10 HARM_CATEGORY_DANGEROUS_CONTENT value
                     * @property {number} HARM_CATEGORY_CIVIC_INTEGRITY=11 HARM_CATEGORY_CIVIC_INTEGRITY value
                     */
                    v1.HarmCategory = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "HARM_CATEGORY_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "HARM_CATEGORY_DEROGATORY"] = 1;
                        values[valuesById[2] = "HARM_CATEGORY_TOXICITY"] = 2;
                        values[valuesById[3] = "HARM_CATEGORY_VIOLENCE"] = 3;
                        values[valuesById[4] = "HARM_CATEGORY_SEXUAL"] = 4;
                        values[valuesById[5] = "HARM_CATEGORY_MEDICAL"] = 5;
                        values[valuesById[6] = "HARM_CATEGORY_DANGEROUS"] = 6;
                        values[valuesById[7] = "HARM_CATEGORY_HARASSMENT"] = 7;
                        values[valuesById[8] = "HARM_CATEGORY_HATE_SPEECH"] = 8;
                        values[valuesById[9] = "HARM_CATEGORY_SEXUALLY_EXPLICIT"] = 9;
                        values[valuesById[10] = "HARM_CATEGORY_DANGEROUS_CONTENT"] = 10;
                        values[valuesById[11] = "HARM_CATEGORY_CIVIC_INTEGRITY"] = 11;
                        return values;
                    })();
    
                    v1.SafetyRating = (function() {
    
                        /**
                         * Properties of a SafetyRating.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface ISafetyRating
                         * @property {google.ai.generativelanguage.v1.HarmCategory|null} [category] SafetyRating category
                         * @property {google.ai.generativelanguage.v1.SafetyRating.HarmProbability|null} [probability] SafetyRating probability
                         * @property {boolean|null} [blocked] SafetyRating blocked
                         */
    
                        /**
                         * Constructs a new SafetyRating.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a SafetyRating.
                         * @implements ISafetyRating
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.ISafetyRating=} [properties] Properties to set
                         */
                        function SafetyRating(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SafetyRating category.
                         * @member {google.ai.generativelanguage.v1.HarmCategory} category
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @instance
                         */
                        SafetyRating.prototype.category = 0;
    
                        /**
                         * SafetyRating probability.
                         * @member {google.ai.generativelanguage.v1.SafetyRating.HarmProbability} probability
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @instance
                         */
                        SafetyRating.prototype.probability = 0;
    
                        /**
                         * SafetyRating blocked.
                         * @member {boolean} blocked
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @instance
                         */
                        SafetyRating.prototype.blocked = false;
    
                        /**
                         * Creates a new SafetyRating instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISafetyRating=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.SafetyRating} SafetyRating instance
                         */
                        SafetyRating.create = function create(properties) {
                            return new SafetyRating(properties);
                        };
    
                        /**
                         * Encodes the specified SafetyRating message. Does not implicitly {@link google.ai.generativelanguage.v1.SafetyRating.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISafetyRating} message SafetyRating message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SafetyRating.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.category != null && Object.hasOwnProperty.call(message, "category"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.category);
                            if (message.probability != null && Object.hasOwnProperty.call(message, "probability"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.probability);
                            if (message.blocked != null && Object.hasOwnProperty.call(message, "blocked"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.blocked);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SafetyRating message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.SafetyRating.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISafetyRating} message SafetyRating message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SafetyRating.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SafetyRating message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.SafetyRating} SafetyRating
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SafetyRating.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.SafetyRating();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.category = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.probability = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.blocked = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SafetyRating message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.SafetyRating} SafetyRating
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SafetyRating.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SafetyRating message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SafetyRating.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.category != null && message.hasOwnProperty("category"))
                                switch (message.category) {
                                default:
                                    return "category: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                    break;
                                }
                            if (message.probability != null && message.hasOwnProperty("probability"))
                                switch (message.probability) {
                                default:
                                    return "probability: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.blocked != null && message.hasOwnProperty("blocked"))
                                if (typeof message.blocked !== "boolean")
                                    return "blocked: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a SafetyRating message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.SafetyRating} SafetyRating
                         */
                        SafetyRating.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.SafetyRating)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.SafetyRating();
                            switch (object.category) {
                            default:
                                if (typeof object.category === "number") {
                                    message.category = object.category;
                                    break;
                                }
                                break;
                            case "HARM_CATEGORY_UNSPECIFIED":
                            case 0:
                                message.category = 0;
                                break;
                            case "HARM_CATEGORY_DEROGATORY":
                            case 1:
                                message.category = 1;
                                break;
                            case "HARM_CATEGORY_TOXICITY":
                            case 2:
                                message.category = 2;
                                break;
                            case "HARM_CATEGORY_VIOLENCE":
                            case 3:
                                message.category = 3;
                                break;
                            case "HARM_CATEGORY_SEXUAL":
                            case 4:
                                message.category = 4;
                                break;
                            case "HARM_CATEGORY_MEDICAL":
                            case 5:
                                message.category = 5;
                                break;
                            case "HARM_CATEGORY_DANGEROUS":
                            case 6:
                                message.category = 6;
                                break;
                            case "HARM_CATEGORY_HARASSMENT":
                            case 7:
                                message.category = 7;
                                break;
                            case "HARM_CATEGORY_HATE_SPEECH":
                            case 8:
                                message.category = 8;
                                break;
                            case "HARM_CATEGORY_SEXUALLY_EXPLICIT":
                            case 9:
                                message.category = 9;
                                break;
                            case "HARM_CATEGORY_DANGEROUS_CONTENT":
                            case 10:
                                message.category = 10;
                                break;
                            case "HARM_CATEGORY_CIVIC_INTEGRITY":
                            case 11:
                                message.category = 11;
                                break;
                            }
                            switch (object.probability) {
                            default:
                                if (typeof object.probability === "number") {
                                    message.probability = object.probability;
                                    break;
                                }
                                break;
                            case "HARM_PROBABILITY_UNSPECIFIED":
                            case 0:
                                message.probability = 0;
                                break;
                            case "NEGLIGIBLE":
                            case 1:
                                message.probability = 1;
                                break;
                            case "LOW":
                            case 2:
                                message.probability = 2;
                                break;
                            case "MEDIUM":
                            case 3:
                                message.probability = 3;
                                break;
                            case "HIGH":
                            case 4:
                                message.probability = 4;
                                break;
                            }
                            if (object.blocked != null)
                                message.blocked = Boolean(object.blocked);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SafetyRating message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @static
                         * @param {google.ai.generativelanguage.v1.SafetyRating} message SafetyRating
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SafetyRating.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.category = options.enums === String ? "HARM_CATEGORY_UNSPECIFIED" : 0;
                                object.probability = options.enums === String ? "HARM_PROBABILITY_UNSPECIFIED" : 0;
                                object.blocked = false;
                            }
                            if (message.category != null && message.hasOwnProperty("category"))
                                object.category = options.enums === String ? $root.google.ai.generativelanguage.v1.HarmCategory[message.category] === undefined ? message.category : $root.google.ai.generativelanguage.v1.HarmCategory[message.category] : message.category;
                            if (message.probability != null && message.hasOwnProperty("probability"))
                                object.probability = options.enums === String ? $root.google.ai.generativelanguage.v1.SafetyRating.HarmProbability[message.probability] === undefined ? message.probability : $root.google.ai.generativelanguage.v1.SafetyRating.HarmProbability[message.probability] : message.probability;
                            if (message.blocked != null && message.hasOwnProperty("blocked"))
                                object.blocked = message.blocked;
                            return object;
                        };
    
                        /**
                         * Converts this SafetyRating to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SafetyRating.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SafetyRating
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.SafetyRating
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SafetyRating.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.SafetyRating";
                        };
    
                        /**
                         * HarmProbability enum.
                         * @name google.ai.generativelanguage.v1.SafetyRating.HarmProbability
                         * @enum {number}
                         * @property {number} HARM_PROBABILITY_UNSPECIFIED=0 HARM_PROBABILITY_UNSPECIFIED value
                         * @property {number} NEGLIGIBLE=1 NEGLIGIBLE value
                         * @property {number} LOW=2 LOW value
                         * @property {number} MEDIUM=3 MEDIUM value
                         * @property {number} HIGH=4 HIGH value
                         */
                        SafetyRating.HarmProbability = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "HARM_PROBABILITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NEGLIGIBLE"] = 1;
                            values[valuesById[2] = "LOW"] = 2;
                            values[valuesById[3] = "MEDIUM"] = 3;
                            values[valuesById[4] = "HIGH"] = 4;
                            return values;
                        })();
    
                        return SafetyRating;
                    })();
    
                    v1.SafetySetting = (function() {
    
                        /**
                         * Properties of a SafetySetting.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface ISafetySetting
                         * @property {google.ai.generativelanguage.v1.HarmCategory|null} [category] SafetySetting category
                         * @property {google.ai.generativelanguage.v1.SafetySetting.HarmBlockThreshold|null} [threshold] SafetySetting threshold
                         */
    
                        /**
                         * Constructs a new SafetySetting.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a SafetySetting.
                         * @implements ISafetySetting
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.ISafetySetting=} [properties] Properties to set
                         */
                        function SafetySetting(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SafetySetting category.
                         * @member {google.ai.generativelanguage.v1.HarmCategory} category
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @instance
                         */
                        SafetySetting.prototype.category = 0;
    
                        /**
                         * SafetySetting threshold.
                         * @member {google.ai.generativelanguage.v1.SafetySetting.HarmBlockThreshold} threshold
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @instance
                         */
                        SafetySetting.prototype.threshold = 0;
    
                        /**
                         * Creates a new SafetySetting instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISafetySetting=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.SafetySetting} SafetySetting instance
                         */
                        SafetySetting.create = function create(properties) {
                            return new SafetySetting(properties);
                        };
    
                        /**
                         * Encodes the specified SafetySetting message. Does not implicitly {@link google.ai.generativelanguage.v1.SafetySetting.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISafetySetting} message SafetySetting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SafetySetting.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.category != null && Object.hasOwnProperty.call(message, "category"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.category);
                            if (message.threshold != null && Object.hasOwnProperty.call(message, "threshold"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.threshold);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SafetySetting message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.SafetySetting.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @static
                         * @param {google.ai.generativelanguage.v1.ISafetySetting} message SafetySetting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SafetySetting.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SafetySetting message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.SafetySetting} SafetySetting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SafetySetting.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.SafetySetting();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.category = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.threshold = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SafetySetting message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.SafetySetting} SafetySetting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SafetySetting.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SafetySetting message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SafetySetting.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.category != null && message.hasOwnProperty("category"))
                                switch (message.category) {
                                default:
                                    return "category: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                    break;
                                }
                            if (message.threshold != null && message.hasOwnProperty("threshold"))
                                switch (message.threshold) {
                                default:
                                    return "threshold: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a SafetySetting message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.SafetySetting} SafetySetting
                         */
                        SafetySetting.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.SafetySetting)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.SafetySetting();
                            switch (object.category) {
                            default:
                                if (typeof object.category === "number") {
                                    message.category = object.category;
                                    break;
                                }
                                break;
                            case "HARM_CATEGORY_UNSPECIFIED":
                            case 0:
                                message.category = 0;
                                break;
                            case "HARM_CATEGORY_DEROGATORY":
                            case 1:
                                message.category = 1;
                                break;
                            case "HARM_CATEGORY_TOXICITY":
                            case 2:
                                message.category = 2;
                                break;
                            case "HARM_CATEGORY_VIOLENCE":
                            case 3:
                                message.category = 3;
                                break;
                            case "HARM_CATEGORY_SEXUAL":
                            case 4:
                                message.category = 4;
                                break;
                            case "HARM_CATEGORY_MEDICAL":
                            case 5:
                                message.category = 5;
                                break;
                            case "HARM_CATEGORY_DANGEROUS":
                            case 6:
                                message.category = 6;
                                break;
                            case "HARM_CATEGORY_HARASSMENT":
                            case 7:
                                message.category = 7;
                                break;
                            case "HARM_CATEGORY_HATE_SPEECH":
                            case 8:
                                message.category = 8;
                                break;
                            case "HARM_CATEGORY_SEXUALLY_EXPLICIT":
                            case 9:
                                message.category = 9;
                                break;
                            case "HARM_CATEGORY_DANGEROUS_CONTENT":
                            case 10:
                                message.category = 10;
                                break;
                            case "HARM_CATEGORY_CIVIC_INTEGRITY":
                            case 11:
                                message.category = 11;
                                break;
                            }
                            switch (object.threshold) {
                            default:
                                if (typeof object.threshold === "number") {
                                    message.threshold = object.threshold;
                                    break;
                                }
                                break;
                            case "HARM_BLOCK_THRESHOLD_UNSPECIFIED":
                            case 0:
                                message.threshold = 0;
                                break;
                            case "BLOCK_LOW_AND_ABOVE":
                            case 1:
                                message.threshold = 1;
                                break;
                            case "BLOCK_MEDIUM_AND_ABOVE":
                            case 2:
                                message.threshold = 2;
                                break;
                            case "BLOCK_ONLY_HIGH":
                            case 3:
                                message.threshold = 3;
                                break;
                            case "BLOCK_NONE":
                            case 4:
                                message.threshold = 4;
                                break;
                            case "OFF":
                            case 5:
                                message.threshold = 5;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SafetySetting message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @static
                         * @param {google.ai.generativelanguage.v1.SafetySetting} message SafetySetting
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SafetySetting.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.category = options.enums === String ? "HARM_CATEGORY_UNSPECIFIED" : 0;
                                object.threshold = options.enums === String ? "HARM_BLOCK_THRESHOLD_UNSPECIFIED" : 0;
                            }
                            if (message.category != null && message.hasOwnProperty("category"))
                                object.category = options.enums === String ? $root.google.ai.generativelanguage.v1.HarmCategory[message.category] === undefined ? message.category : $root.google.ai.generativelanguage.v1.HarmCategory[message.category] : message.category;
                            if (message.threshold != null && message.hasOwnProperty("threshold"))
                                object.threshold = options.enums === String ? $root.google.ai.generativelanguage.v1.SafetySetting.HarmBlockThreshold[message.threshold] === undefined ? message.threshold : $root.google.ai.generativelanguage.v1.SafetySetting.HarmBlockThreshold[message.threshold] : message.threshold;
                            return object;
                        };
    
                        /**
                         * Converts this SafetySetting to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SafetySetting.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SafetySetting
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.SafetySetting
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SafetySetting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.SafetySetting";
                        };
    
                        /**
                         * HarmBlockThreshold enum.
                         * @name google.ai.generativelanguage.v1.SafetySetting.HarmBlockThreshold
                         * @enum {number}
                         * @property {number} HARM_BLOCK_THRESHOLD_UNSPECIFIED=0 HARM_BLOCK_THRESHOLD_UNSPECIFIED value
                         * @property {number} BLOCK_LOW_AND_ABOVE=1 BLOCK_LOW_AND_ABOVE value
                         * @property {number} BLOCK_MEDIUM_AND_ABOVE=2 BLOCK_MEDIUM_AND_ABOVE value
                         * @property {number} BLOCK_ONLY_HIGH=3 BLOCK_ONLY_HIGH value
                         * @property {number} BLOCK_NONE=4 BLOCK_NONE value
                         * @property {number} OFF=5 OFF value
                         */
                        SafetySetting.HarmBlockThreshold = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "HARM_BLOCK_THRESHOLD_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BLOCK_LOW_AND_ABOVE"] = 1;
                            values[valuesById[2] = "BLOCK_MEDIUM_AND_ABOVE"] = 2;
                            values[valuesById[3] = "BLOCK_ONLY_HIGH"] = 3;
                            values[valuesById[4] = "BLOCK_NONE"] = 4;
                            values[valuesById[5] = "OFF"] = 5;
                            return values;
                        })();
    
                        return SafetySetting;
                    })();
    
                    v1.Model = (function() {
    
                        /**
                         * Properties of a Model.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IModel
                         * @property {string|null} [name] Model name
                         * @property {string|null} [baseModelId] Model baseModelId
                         * @property {string|null} [version] Model version
                         * @property {string|null} [displayName] Model displayName
                         * @property {string|null} [description] Model description
                         * @property {number|null} [inputTokenLimit] Model inputTokenLimit
                         * @property {number|null} [outputTokenLimit] Model outputTokenLimit
                         * @property {Array.<string>|null} [supportedGenerationMethods] Model supportedGenerationMethods
                         * @property {number|null} [temperature] Model temperature
                         * @property {number|null} [maxTemperature] Model maxTemperature
                         * @property {number|null} [topP] Model topP
                         * @property {number|null} [topK] Model topK
                         */
    
                        /**
                         * Constructs a new Model.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a Model.
                         * @implements IModel
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IModel=} [properties] Properties to set
                         */
                        function Model(properties) {
                            this.supportedGenerationMethods = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Model name.
                         * @member {string} name
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.name = "";
    
                        /**
                         * Model baseModelId.
                         * @member {string} baseModelId
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.baseModelId = "";
    
                        /**
                         * Model version.
                         * @member {string} version
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.version = "";
    
                        /**
                         * Model displayName.
                         * @member {string} displayName
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.displayName = "";
    
                        /**
                         * Model description.
                         * @member {string} description
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.description = "";
    
                        /**
                         * Model inputTokenLimit.
                         * @member {number} inputTokenLimit
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.inputTokenLimit = 0;
    
                        /**
                         * Model outputTokenLimit.
                         * @member {number} outputTokenLimit
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.outputTokenLimit = 0;
    
                        /**
                         * Model supportedGenerationMethods.
                         * @member {Array.<string>} supportedGenerationMethods
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.supportedGenerationMethods = $util.emptyArray;
    
                        /**
                         * Model temperature.
                         * @member {number|null|undefined} temperature
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.temperature = null;
    
                        /**
                         * Model maxTemperature.
                         * @member {number|null|undefined} maxTemperature
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.maxTemperature = null;
    
                        /**
                         * Model topP.
                         * @member {number|null|undefined} topP
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.topP = null;
    
                        /**
                         * Model topK.
                         * @member {number|null|undefined} topK
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Model.prototype.topK = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Model _temperature.
                         * @member {"temperature"|undefined} _temperature
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Object.defineProperty(Model.prototype, "_temperature", {
                            get: $util.oneOfGetter($oneOfFields = ["temperature"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Model _maxTemperature.
                         * @member {"maxTemperature"|undefined} _maxTemperature
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Object.defineProperty(Model.prototype, "_maxTemperature", {
                            get: $util.oneOfGetter($oneOfFields = ["maxTemperature"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Model _topP.
                         * @member {"topP"|undefined} _topP
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Object.defineProperty(Model.prototype, "_topP", {
                            get: $util.oneOfGetter($oneOfFields = ["topP"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Model _topK.
                         * @member {"topK"|undefined} _topK
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         */
                        Object.defineProperty(Model.prototype, "_topK", {
                            get: $util.oneOfGetter($oneOfFields = ["topK"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Model instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @static
                         * @param {google.ai.generativelanguage.v1.IModel=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.Model} Model instance
                         */
                        Model.create = function create(properties) {
                            return new Model(properties);
                        };
    
                        /**
                         * Encodes the specified Model message. Does not implicitly {@link google.ai.generativelanguage.v1.Model.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @static
                         * @param {google.ai.generativelanguage.v1.IModel} message Model message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Model.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.baseModelId != null && Object.hasOwnProperty.call(message, "baseModelId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.baseModelId);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.version);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.displayName);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);
                            if (message.inputTokenLimit != null && Object.hasOwnProperty.call(message, "inputTokenLimit"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.inputTokenLimit);
                            if (message.outputTokenLimit != null && Object.hasOwnProperty.call(message, "outputTokenLimit"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.outputTokenLimit);
                            if (message.supportedGenerationMethods != null && message.supportedGenerationMethods.length)
                                for (var i = 0; i < message.supportedGenerationMethods.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.supportedGenerationMethods[i]);
                            if (message.temperature != null && Object.hasOwnProperty.call(message, "temperature"))
                                writer.uint32(/* id 9, wireType 5 =*/77).float(message.temperature);
                            if (message.topP != null && Object.hasOwnProperty.call(message, "topP"))
                                writer.uint32(/* id 10, wireType 5 =*/85).float(message.topP);
                            if (message.topK != null && Object.hasOwnProperty.call(message, "topK"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.topK);
                            if (message.maxTemperature != null && Object.hasOwnProperty.call(message, "maxTemperature"))
                                writer.uint32(/* id 13, wireType 5 =*/109).float(message.maxTemperature);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Model message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.Model.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @static
                         * @param {google.ai.generativelanguage.v1.IModel} message Model message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Model.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Model message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.Model} Model
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Model.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.Model();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.baseModelId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.inputTokenLimit = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.outputTokenLimit = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        if (!(message.supportedGenerationMethods && message.supportedGenerationMethods.length))
                                            message.supportedGenerationMethods = [];
                                        message.supportedGenerationMethods.push(reader.string());
                                        break;
                                    }
                                case 9: {
                                        message.temperature = reader.float();
                                        break;
                                    }
                                case 13: {
                                        message.maxTemperature = reader.float();
                                        break;
                                    }
                                case 10: {
                                        message.topP = reader.float();
                                        break;
                                    }
                                case 11: {
                                        message.topK = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Model message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.Model} Model
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Model.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Model message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Model.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.baseModelId != null && message.hasOwnProperty("baseModelId"))
                                if (!$util.isString(message.baseModelId))
                                    return "baseModelId: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.inputTokenLimit != null && message.hasOwnProperty("inputTokenLimit"))
                                if (!$util.isInteger(message.inputTokenLimit))
                                    return "inputTokenLimit: integer expected";
                            if (message.outputTokenLimit != null && message.hasOwnProperty("outputTokenLimit"))
                                if (!$util.isInteger(message.outputTokenLimit))
                                    return "outputTokenLimit: integer expected";
                            if (message.supportedGenerationMethods != null && message.hasOwnProperty("supportedGenerationMethods")) {
                                if (!Array.isArray(message.supportedGenerationMethods))
                                    return "supportedGenerationMethods: array expected";
                                for (var i = 0; i < message.supportedGenerationMethods.length; ++i)
                                    if (!$util.isString(message.supportedGenerationMethods[i]))
                                        return "supportedGenerationMethods: string[] expected";
                            }
                            if (message.temperature != null && message.hasOwnProperty("temperature")) {
                                properties._temperature = 1;
                                if (typeof message.temperature !== "number")
                                    return "temperature: number expected";
                            }
                            if (message.maxTemperature != null && message.hasOwnProperty("maxTemperature")) {
                                properties._maxTemperature = 1;
                                if (typeof message.maxTemperature !== "number")
                                    return "maxTemperature: number expected";
                            }
                            if (message.topP != null && message.hasOwnProperty("topP")) {
                                properties._topP = 1;
                                if (typeof message.topP !== "number")
                                    return "topP: number expected";
                            }
                            if (message.topK != null && message.hasOwnProperty("topK")) {
                                properties._topK = 1;
                                if (!$util.isInteger(message.topK))
                                    return "topK: integer expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Model message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.Model} Model
                         */
                        Model.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.Model)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.Model();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.baseModelId != null)
                                message.baseModelId = String(object.baseModelId);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.inputTokenLimit != null)
                                message.inputTokenLimit = object.inputTokenLimit | 0;
                            if (object.outputTokenLimit != null)
                                message.outputTokenLimit = object.outputTokenLimit | 0;
                            if (object.supportedGenerationMethods) {
                                if (!Array.isArray(object.supportedGenerationMethods))
                                    throw TypeError(".google.ai.generativelanguage.v1.Model.supportedGenerationMethods: array expected");
                                message.supportedGenerationMethods = [];
                                for (var i = 0; i < object.supportedGenerationMethods.length; ++i)
                                    message.supportedGenerationMethods[i] = String(object.supportedGenerationMethods[i]);
                            }
                            if (object.temperature != null)
                                message.temperature = Number(object.temperature);
                            if (object.maxTemperature != null)
                                message.maxTemperature = Number(object.maxTemperature);
                            if (object.topP != null)
                                message.topP = Number(object.topP);
                            if (object.topK != null)
                                message.topK = object.topK | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Model message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @static
                         * @param {google.ai.generativelanguage.v1.Model} message Model
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Model.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.supportedGenerationMethods = [];
                            if (options.defaults) {
                                object.name = "";
                                object.baseModelId = "";
                                object.version = "";
                                object.displayName = "";
                                object.description = "";
                                object.inputTokenLimit = 0;
                                object.outputTokenLimit = 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.baseModelId != null && message.hasOwnProperty("baseModelId"))
                                object.baseModelId = message.baseModelId;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.inputTokenLimit != null && message.hasOwnProperty("inputTokenLimit"))
                                object.inputTokenLimit = message.inputTokenLimit;
                            if (message.outputTokenLimit != null && message.hasOwnProperty("outputTokenLimit"))
                                object.outputTokenLimit = message.outputTokenLimit;
                            if (message.supportedGenerationMethods && message.supportedGenerationMethods.length) {
                                object.supportedGenerationMethods = [];
                                for (var j = 0; j < message.supportedGenerationMethods.length; ++j)
                                    object.supportedGenerationMethods[j] = message.supportedGenerationMethods[j];
                            }
                            if (message.temperature != null && message.hasOwnProperty("temperature")) {
                                object.temperature = options.json && !isFinite(message.temperature) ? String(message.temperature) : message.temperature;
                                if (options.oneofs)
                                    object._temperature = "temperature";
                            }
                            if (message.topP != null && message.hasOwnProperty("topP")) {
                                object.topP = options.json && !isFinite(message.topP) ? String(message.topP) : message.topP;
                                if (options.oneofs)
                                    object._topP = "topP";
                            }
                            if (message.topK != null && message.hasOwnProperty("topK")) {
                                object.topK = message.topK;
                                if (options.oneofs)
                                    object._topK = "topK";
                            }
                            if (message.maxTemperature != null && message.hasOwnProperty("maxTemperature")) {
                                object.maxTemperature = options.json && !isFinite(message.maxTemperature) ? String(message.maxTemperature) : message.maxTemperature;
                                if (options.oneofs)
                                    object._maxTemperature = "maxTemperature";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Model to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Model.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Model
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.Model
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Model.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.Model";
                        };
    
                        return Model;
                    })();
    
                    v1.ModelService = (function() {
    
                        /**
                         * Constructs a new ModelService service.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a ModelService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function ModelService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (ModelService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = ModelService;
    
                        /**
                         * Creates new ModelService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.ModelService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {ModelService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        ModelService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1.ModelService|getModel}.
                         * @memberof google.ai.generativelanguage.v1.ModelService
                         * @typedef GetModelCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1.Model} [response] Model
                         */
    
                        /**
                         * Calls GetModel.
                         * @function getModel
                         * @memberof google.ai.generativelanguage.v1.ModelService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IGetModelRequest} request GetModelRequest message or plain object
                         * @param {google.ai.generativelanguage.v1.ModelService.GetModelCallback} callback Node-style callback called with the error, if any, and Model
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ModelService.prototype.getModel = function getModel(request, callback) {
                            return this.rpcCall(getModel, $root.google.ai.generativelanguage.v1.GetModelRequest, $root.google.ai.generativelanguage.v1.Model, request, callback);
                        }, "name", { value: "GetModel" });
    
                        /**
                         * Calls GetModel.
                         * @function getModel
                         * @memberof google.ai.generativelanguage.v1.ModelService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IGetModelRequest} request GetModelRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1.Model>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1.ModelService|listModels}.
                         * @memberof google.ai.generativelanguage.v1.ModelService
                         * @typedef ListModelsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1.ListModelsResponse} [response] ListModelsResponse
                         */
    
                        /**
                         * Calls ListModels.
                         * @function listModels
                         * @memberof google.ai.generativelanguage.v1.ModelService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IListModelsRequest} request ListModelsRequest message or plain object
                         * @param {google.ai.generativelanguage.v1.ModelService.ListModelsCallback} callback Node-style callback called with the error, if any, and ListModelsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ModelService.prototype.listModels = function listModels(request, callback) {
                            return this.rpcCall(listModels, $root.google.ai.generativelanguage.v1.ListModelsRequest, $root.google.ai.generativelanguage.v1.ListModelsResponse, request, callback);
                        }, "name", { value: "ListModels" });
    
                        /**
                         * Calls ListModels.
                         * @function listModels
                         * @memberof google.ai.generativelanguage.v1.ModelService
                         * @instance
                         * @param {google.ai.generativelanguage.v1.IListModelsRequest} request ListModelsRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1.ListModelsResponse>} Promise
                         * @variation 2
                         */
    
                        return ModelService;
                    })();
    
                    v1.GetModelRequest = (function() {
    
                        /**
                         * Properties of a GetModelRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IGetModelRequest
                         * @property {string|null} [name] GetModelRequest name
                         */
    
                        /**
                         * Constructs a new GetModelRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a GetModelRequest.
                         * @implements IGetModelRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IGetModelRequest=} [properties] Properties to set
                         */
                        function GetModelRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetModelRequest name.
                         * @member {string} name
                         * @memberof google.ai.generativelanguage.v1.GetModelRequest
                         * @instance
                         */
                        GetModelRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetModelRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.GetModelRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGetModelRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.GetModelRequest} GetModelRequest instance
                         */
                        GetModelRequest.create = function create(properties) {
                            return new GetModelRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetModelRequest message. Does not implicitly {@link google.ai.generativelanguage.v1.GetModelRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.GetModelRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGetModelRequest} message GetModelRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetModelRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetModelRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.GetModelRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GetModelRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IGetModelRequest} message GetModelRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetModelRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetModelRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.GetModelRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.GetModelRequest} GetModelRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetModelRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.GetModelRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetModelRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.GetModelRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.GetModelRequest} GetModelRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetModelRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetModelRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.GetModelRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetModelRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetModelRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.GetModelRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.GetModelRequest} GetModelRequest
                         */
                        GetModelRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.GetModelRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.GetModelRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetModelRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.GetModelRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.GetModelRequest} message GetModelRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetModelRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetModelRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.GetModelRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetModelRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetModelRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.GetModelRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetModelRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.GetModelRequest";
                        };
    
                        return GetModelRequest;
                    })();
    
                    v1.ListModelsRequest = (function() {
    
                        /**
                         * Properties of a ListModelsRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IListModelsRequest
                         * @property {number|null} [pageSize] ListModelsRequest pageSize
                         * @property {string|null} [pageToken] ListModelsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListModelsRequest.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a ListModelsRequest.
                         * @implements IListModelsRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IListModelsRequest=} [properties] Properties to set
                         */
                        function ListModelsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListModelsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @instance
                         */
                        ListModelsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListModelsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @instance
                         */
                        ListModelsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListModelsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IListModelsRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.ListModelsRequest} ListModelsRequest instance
                         */
                        ListModelsRequest.create = function create(properties) {
                            return new ListModelsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListModelsRequest message. Does not implicitly {@link google.ai.generativelanguage.v1.ListModelsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IListModelsRequest} message ListModelsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListModelsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListModelsRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.ListModelsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.IListModelsRequest} message ListModelsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListModelsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListModelsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.ListModelsRequest} ListModelsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListModelsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.ListModelsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListModelsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.ListModelsRequest} ListModelsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListModelsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListModelsRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListModelsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListModelsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.ListModelsRequest} ListModelsRequest
                         */
                        ListModelsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.ListModelsRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.ListModelsRequest();
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListModelsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1.ListModelsRequest} message ListModelsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListModelsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListModelsRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListModelsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListModelsRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.ListModelsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListModelsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.ListModelsRequest";
                        };
    
                        return ListModelsRequest;
                    })();
    
                    v1.ListModelsResponse = (function() {
    
                        /**
                         * Properties of a ListModelsResponse.
                         * @memberof google.ai.generativelanguage.v1
                         * @interface IListModelsResponse
                         * @property {Array.<google.ai.generativelanguage.v1.IModel>|null} [models] ListModelsResponse models
                         * @property {string|null} [nextPageToken] ListModelsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListModelsResponse.
                         * @memberof google.ai.generativelanguage.v1
                         * @classdesc Represents a ListModelsResponse.
                         * @implements IListModelsResponse
                         * @constructor
                         * @param {google.ai.generativelanguage.v1.IListModelsResponse=} [properties] Properties to set
                         */
                        function ListModelsResponse(properties) {
                            this.models = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListModelsResponse models.
                         * @member {Array.<google.ai.generativelanguage.v1.IModel>} models
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @instance
                         */
                        ListModelsResponse.prototype.models = $util.emptyArray;
    
                        /**
                         * ListModelsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @instance
                         */
                        ListModelsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListModelsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IListModelsResponse=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1.ListModelsResponse} ListModelsResponse instance
                         */
                        ListModelsResponse.create = function create(properties) {
                            return new ListModelsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListModelsResponse message. Does not implicitly {@link google.ai.generativelanguage.v1.ListModelsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IListModelsResponse} message ListModelsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListModelsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.models != null && message.models.length)
                                for (var i = 0; i < message.models.length; ++i)
                                    $root.google.ai.generativelanguage.v1.Model.encode(message.models[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListModelsResponse message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1.ListModelsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.IListModelsResponse} message ListModelsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListModelsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListModelsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1.ListModelsResponse} ListModelsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListModelsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1.ListModelsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.models && message.models.length))
                                            message.models = [];
                                        message.models.push($root.google.ai.generativelanguage.v1.Model.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListModelsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1.ListModelsResponse} ListModelsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListModelsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListModelsResponse message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListModelsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.models != null && message.hasOwnProperty("models")) {
                                if (!Array.isArray(message.models))
                                    return "models: array expected";
                                for (var i = 0; i < message.models.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1.Model.verify(message.models[i]);
                                    if (error)
                                        return "models." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListModelsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1.ListModelsResponse} ListModelsResponse
                         */
                        ListModelsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1.ListModelsResponse)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1.ListModelsResponse();
                            if (object.models) {
                                if (!Array.isArray(object.models))
                                    throw TypeError(".google.ai.generativelanguage.v1.ListModelsResponse.models: array expected");
                                message.models = [];
                                for (var i = 0; i < object.models.length; ++i) {
                                    if (typeof object.models[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1.ListModelsResponse.models: object expected");
                                    message.models[i] = $root.google.ai.generativelanguage.v1.Model.fromObject(object.models[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListModelsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1.ListModelsResponse} message ListModelsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListModelsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.models = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.models && message.models.length) {
                                object.models = [];
                                for (var j = 0; j < message.models.length; ++j)
                                    object.models[j] = $root.google.ai.generativelanguage.v1.Model.toObject(message.models[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListModelsResponse to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListModelsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListModelsResponse
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1.ListModelsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListModelsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1.ListModelsResponse";
                        };
    
                        return ListModelsResponse;
                    })();
    
                    return v1;
                })();
    
                generativelanguage.v1alpha = (function() {
    
                    /**
                     * Namespace v1alpha.
                     * @memberof google.ai.generativelanguage
                     * @namespace
                     */
                    var v1alpha = {};
    
                    v1alpha.CacheService = (function() {
    
                        /**
                         * Constructs a new CacheService service.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a CacheService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CacheService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CacheService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CacheService;
    
                        /**
                         * Creates new CacheService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CacheService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CacheService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.CacheService|listCachedContents}.
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @typedef ListCachedContentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.ListCachedContentsResponse} [response] ListCachedContentsResponse
                         */
    
                        /**
                         * Calls ListCachedContents.
                         * @function listCachedContents
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IListCachedContentsRequest} request ListCachedContentsRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.CacheService.ListCachedContentsCallback} callback Node-style callback called with the error, if any, and ListCachedContentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CacheService.prototype.listCachedContents = function listCachedContents(request, callback) {
                            return this.rpcCall(listCachedContents, $root.google.ai.generativelanguage.v1alpha.ListCachedContentsRequest, $root.google.ai.generativelanguage.v1alpha.ListCachedContentsResponse, request, callback);
                        }, "name", { value: "ListCachedContents" });
    
                        /**
                         * Calls ListCachedContents.
                         * @function listCachedContents
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IListCachedContentsRequest} request ListCachedContentsRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.ListCachedContentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.CacheService|createCachedContent}.
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @typedef CreateCachedContentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.CachedContent} [response] CachedContent
                         */
    
                        /**
                         * Calls CreateCachedContent.
                         * @function createCachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.ICreateCachedContentRequest} request CreateCachedContentRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.CacheService.CreateCachedContentCallback} callback Node-style callback called with the error, if any, and CachedContent
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CacheService.prototype.createCachedContent = function createCachedContent(request, callback) {
                            return this.rpcCall(createCachedContent, $root.google.ai.generativelanguage.v1alpha.CreateCachedContentRequest, $root.google.ai.generativelanguage.v1alpha.CachedContent, request, callback);
                        }, "name", { value: "CreateCachedContent" });
    
                        /**
                         * Calls CreateCachedContent.
                         * @function createCachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.ICreateCachedContentRequest} request CreateCachedContentRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.CachedContent>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.CacheService|getCachedContent}.
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @typedef GetCachedContentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.CachedContent} [response] CachedContent
                         */
    
                        /**
                         * Calls GetCachedContent.
                         * @function getCachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGetCachedContentRequest} request GetCachedContentRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.CacheService.GetCachedContentCallback} callback Node-style callback called with the error, if any, and CachedContent
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CacheService.prototype.getCachedContent = function getCachedContent(request, callback) {
                            return this.rpcCall(getCachedContent, $root.google.ai.generativelanguage.v1alpha.GetCachedContentRequest, $root.google.ai.generativelanguage.v1alpha.CachedContent, request, callback);
                        }, "name", { value: "GetCachedContent" });
    
                        /**
                         * Calls GetCachedContent.
                         * @function getCachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGetCachedContentRequest} request GetCachedContentRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.CachedContent>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.CacheService|updateCachedContent}.
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @typedef UpdateCachedContentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.CachedContent} [response] CachedContent
                         */
    
                        /**
                         * Calls UpdateCachedContent.
                         * @function updateCachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IUpdateCachedContentRequest} request UpdateCachedContentRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.CacheService.UpdateCachedContentCallback} callback Node-style callback called with the error, if any, and CachedContent
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CacheService.prototype.updateCachedContent = function updateCachedContent(request, callback) {
                            return this.rpcCall(updateCachedContent, $root.google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest, $root.google.ai.generativelanguage.v1alpha.CachedContent, request, callback);
                        }, "name", { value: "UpdateCachedContent" });
    
                        /**
                         * Calls UpdateCachedContent.
                         * @function updateCachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IUpdateCachedContentRequest} request UpdateCachedContentRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.CachedContent>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.CacheService|deleteCachedContent}.
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @typedef DeleteCachedContentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteCachedContent.
                         * @function deleteCachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteCachedContentRequest} request DeleteCachedContentRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.CacheService.DeleteCachedContentCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CacheService.prototype.deleteCachedContent = function deleteCachedContent(request, callback) {
                            return this.rpcCall(deleteCachedContent, $root.google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteCachedContent" });
    
                        /**
                         * Calls DeleteCachedContent.
                         * @function deleteCachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.CacheService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteCachedContentRequest} request DeleteCachedContentRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        return CacheService;
                    })();
    
                    v1alpha.ListCachedContentsRequest = (function() {
    
                        /**
                         * Properties of a ListCachedContentsRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IListCachedContentsRequest
                         * @property {number|null} [pageSize] ListCachedContentsRequest pageSize
                         * @property {string|null} [pageToken] ListCachedContentsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListCachedContentsRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a ListCachedContentsRequest.
                         * @implements IListCachedContentsRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IListCachedContentsRequest=} [properties] Properties to set
                         */
                        function ListCachedContentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListCachedContentsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @instance
                         */
                        ListCachedContentsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListCachedContentsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @instance
                         */
                        ListCachedContentsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListCachedContentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListCachedContentsRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.ListCachedContentsRequest} ListCachedContentsRequest instance
                         */
                        ListCachedContentsRequest.create = function create(properties) {
                            return new ListCachedContentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListCachedContentsRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ListCachedContentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListCachedContentsRequest} message ListCachedContentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCachedContentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListCachedContentsRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ListCachedContentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListCachedContentsRequest} message ListCachedContentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCachedContentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListCachedContentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.ListCachedContentsRequest} ListCachedContentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCachedContentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.ListCachedContentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListCachedContentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.ListCachedContentsRequest} ListCachedContentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCachedContentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListCachedContentsRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListCachedContentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListCachedContentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.ListCachedContentsRequest} ListCachedContentsRequest
                         */
                        ListCachedContentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.ListCachedContentsRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.ListCachedContentsRequest();
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListCachedContentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ListCachedContentsRequest} message ListCachedContentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListCachedContentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListCachedContentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListCachedContentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListCachedContentsRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListCachedContentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.ListCachedContentsRequest";
                        };
    
                        return ListCachedContentsRequest;
                    })();
    
                    v1alpha.ListCachedContentsResponse = (function() {
    
                        /**
                         * Properties of a ListCachedContentsResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IListCachedContentsResponse
                         * @property {Array.<google.ai.generativelanguage.v1alpha.ICachedContent>|null} [cachedContents] ListCachedContentsResponse cachedContents
                         * @property {string|null} [nextPageToken] ListCachedContentsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListCachedContentsResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a ListCachedContentsResponse.
                         * @implements IListCachedContentsResponse
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IListCachedContentsResponse=} [properties] Properties to set
                         */
                        function ListCachedContentsResponse(properties) {
                            this.cachedContents = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListCachedContentsResponse cachedContents.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.ICachedContent>} cachedContents
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @instance
                         */
                        ListCachedContentsResponse.prototype.cachedContents = $util.emptyArray;
    
                        /**
                         * ListCachedContentsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @instance
                         */
                        ListCachedContentsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListCachedContentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListCachedContentsResponse=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.ListCachedContentsResponse} ListCachedContentsResponse instance
                         */
                        ListCachedContentsResponse.create = function create(properties) {
                            return new ListCachedContentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListCachedContentsResponse message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ListCachedContentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListCachedContentsResponse} message ListCachedContentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCachedContentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cachedContents != null && message.cachedContents.length)
                                for (var i = 0; i < message.cachedContents.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.CachedContent.encode(message.cachedContents[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListCachedContentsResponse message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ListCachedContentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListCachedContentsResponse} message ListCachedContentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCachedContentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListCachedContentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.ListCachedContentsResponse} ListCachedContentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCachedContentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.ListCachedContentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.cachedContents && message.cachedContents.length))
                                            message.cachedContents = [];
                                        message.cachedContents.push($root.google.ai.generativelanguage.v1alpha.CachedContent.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListCachedContentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.ListCachedContentsResponse} ListCachedContentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCachedContentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListCachedContentsResponse message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListCachedContentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.cachedContents != null && message.hasOwnProperty("cachedContents")) {
                                if (!Array.isArray(message.cachedContents))
                                    return "cachedContents: array expected";
                                for (var i = 0; i < message.cachedContents.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.CachedContent.verify(message.cachedContents[i]);
                                    if (error)
                                        return "cachedContents." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListCachedContentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.ListCachedContentsResponse} ListCachedContentsResponse
                         */
                        ListCachedContentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.ListCachedContentsResponse)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.ListCachedContentsResponse();
                            if (object.cachedContents) {
                                if (!Array.isArray(object.cachedContents))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.ListCachedContentsResponse.cachedContents: array expected");
                                message.cachedContents = [];
                                for (var i = 0; i < object.cachedContents.length; ++i) {
                                    if (typeof object.cachedContents[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.ListCachedContentsResponse.cachedContents: object expected");
                                    message.cachedContents[i] = $root.google.ai.generativelanguage.v1alpha.CachedContent.fromObject(object.cachedContents[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListCachedContentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ListCachedContentsResponse} message ListCachedContentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListCachedContentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.cachedContents = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.cachedContents && message.cachedContents.length) {
                                object.cachedContents = [];
                                for (var j = 0; j < message.cachedContents.length; ++j)
                                    object.cachedContents[j] = $root.google.ai.generativelanguage.v1alpha.CachedContent.toObject(message.cachedContents[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListCachedContentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListCachedContentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListCachedContentsResponse
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.ListCachedContentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListCachedContentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.ListCachedContentsResponse";
                        };
    
                        return ListCachedContentsResponse;
                    })();
    
                    v1alpha.CreateCachedContentRequest = (function() {
    
                        /**
                         * Properties of a CreateCachedContentRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ICreateCachedContentRequest
                         * @property {google.ai.generativelanguage.v1alpha.ICachedContent|null} [cachedContent] CreateCachedContentRequest cachedContent
                         */
    
                        /**
                         * Constructs a new CreateCachedContentRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a CreateCachedContentRequest.
                         * @implements ICreateCachedContentRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ICreateCachedContentRequest=} [properties] Properties to set
                         */
                        function CreateCachedContentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateCachedContentRequest cachedContent.
                         * @member {google.ai.generativelanguage.v1alpha.ICachedContent|null|undefined} cachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.CreateCachedContentRequest
                         * @instance
                         */
                        CreateCachedContentRequest.prototype.cachedContent = null;
    
                        /**
                         * Creates a new CreateCachedContentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.CreateCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICreateCachedContentRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.CreateCachedContentRequest} CreateCachedContentRequest instance
                         */
                        CreateCachedContentRequest.create = function create(properties) {
                            return new CreateCachedContentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateCachedContentRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CreateCachedContentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.CreateCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICreateCachedContentRequest} message CreateCachedContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateCachedContentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cachedContent != null && Object.hasOwnProperty.call(message, "cachedContent"))
                                $root.google.ai.generativelanguage.v1alpha.CachedContent.encode(message.cachedContent, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateCachedContentRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CreateCachedContentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CreateCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICreateCachedContentRequest} message CreateCachedContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateCachedContentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateCachedContentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.CreateCachedContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.CreateCachedContentRequest} CreateCachedContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateCachedContentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.CreateCachedContentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.cachedContent = $root.google.ai.generativelanguage.v1alpha.CachedContent.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateCachedContentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CreateCachedContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.CreateCachedContentRequest} CreateCachedContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateCachedContentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateCachedContentRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.CreateCachedContentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateCachedContentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.cachedContent != null && message.hasOwnProperty("cachedContent")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.CachedContent.verify(message.cachedContent);
                                if (error)
                                    return "cachedContent." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateCachedContentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.CreateCachedContentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.CreateCachedContentRequest} CreateCachedContentRequest
                         */
                        CreateCachedContentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.CreateCachedContentRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.CreateCachedContentRequest();
                            if (object.cachedContent != null) {
                                if (typeof object.cachedContent !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CreateCachedContentRequest.cachedContent: object expected");
                                message.cachedContent = $root.google.ai.generativelanguage.v1alpha.CachedContent.fromObject(object.cachedContent);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateCachedContentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.CreateCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.CreateCachedContentRequest} message CreateCachedContentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateCachedContentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.cachedContent = null;
                            if (message.cachedContent != null && message.hasOwnProperty("cachedContent"))
                                object.cachedContent = $root.google.ai.generativelanguage.v1alpha.CachedContent.toObject(message.cachedContent, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateCachedContentRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.CreateCachedContentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateCachedContentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateCachedContentRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.CreateCachedContentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateCachedContentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.CreateCachedContentRequest";
                        };
    
                        return CreateCachedContentRequest;
                    })();
    
                    v1alpha.GetCachedContentRequest = (function() {
    
                        /**
                         * Properties of a GetCachedContentRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IGetCachedContentRequest
                         * @property {string|null} [name] GetCachedContentRequest name
                         */
    
                        /**
                         * Constructs a new GetCachedContentRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a GetCachedContentRequest.
                         * @implements IGetCachedContentRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IGetCachedContentRequest=} [properties] Properties to set
                         */
                        function GetCachedContentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetCachedContentRequest name.
                         * @member {string} name
                         * @memberof google.ai.generativelanguage.v1alpha.GetCachedContentRequest
                         * @instance
                         */
                        GetCachedContentRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetCachedContentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.GetCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGetCachedContentRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.GetCachedContentRequest} GetCachedContentRequest instance
                         */
                        GetCachedContentRequest.create = function create(properties) {
                            return new GetCachedContentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetCachedContentRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GetCachedContentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.GetCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGetCachedContentRequest} message GetCachedContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetCachedContentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetCachedContentRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GetCachedContentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GetCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGetCachedContentRequest} message GetCachedContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetCachedContentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetCachedContentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.GetCachedContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.GetCachedContentRequest} GetCachedContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetCachedContentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.GetCachedContentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetCachedContentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GetCachedContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.GetCachedContentRequest} GetCachedContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetCachedContentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetCachedContentRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.GetCachedContentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetCachedContentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetCachedContentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.GetCachedContentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.GetCachedContentRequest} GetCachedContentRequest
                         */
                        GetCachedContentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.GetCachedContentRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.GetCachedContentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetCachedContentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.GetCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.GetCachedContentRequest} message GetCachedContentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetCachedContentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetCachedContentRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.GetCachedContentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetCachedContentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetCachedContentRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.GetCachedContentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetCachedContentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.GetCachedContentRequest";
                        };
    
                        return GetCachedContentRequest;
                    })();
    
                    v1alpha.UpdateCachedContentRequest = (function() {
    
                        /**
                         * Properties of an UpdateCachedContentRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IUpdateCachedContentRequest
                         * @property {google.ai.generativelanguage.v1alpha.ICachedContent|null} [cachedContent] UpdateCachedContentRequest cachedContent
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCachedContentRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateCachedContentRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents an UpdateCachedContentRequest.
                         * @implements IUpdateCachedContentRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IUpdateCachedContentRequest=} [properties] Properties to set
                         */
                        function UpdateCachedContentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateCachedContentRequest cachedContent.
                         * @member {google.ai.generativelanguage.v1alpha.ICachedContent|null|undefined} cachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @instance
                         */
                        UpdateCachedContentRequest.prototype.cachedContent = null;
    
                        /**
                         * UpdateCachedContentRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @instance
                         */
                        UpdateCachedContentRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateCachedContentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IUpdateCachedContentRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest} UpdateCachedContentRequest instance
                         */
                        UpdateCachedContentRequest.create = function create(properties) {
                            return new UpdateCachedContentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateCachedContentRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IUpdateCachedContentRequest} message UpdateCachedContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateCachedContentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cachedContent != null && Object.hasOwnProperty.call(message, "cachedContent"))
                                $root.google.ai.generativelanguage.v1alpha.CachedContent.encode(message.cachedContent, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateCachedContentRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IUpdateCachedContentRequest} message UpdateCachedContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateCachedContentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateCachedContentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest} UpdateCachedContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateCachedContentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.cachedContent = $root.google.ai.generativelanguage.v1alpha.CachedContent.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateCachedContentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest} UpdateCachedContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateCachedContentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateCachedContentRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateCachedContentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.cachedContent != null && message.hasOwnProperty("cachedContent")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.CachedContent.verify(message.cachedContent);
                                if (error)
                                    return "cachedContent." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateCachedContentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest} UpdateCachedContentRequest
                         */
                        UpdateCachedContentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest();
                            if (object.cachedContent != null) {
                                if (typeof object.cachedContent !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest.cachedContent: object expected");
                                message.cachedContent = $root.google.ai.generativelanguage.v1alpha.CachedContent.fromObject(object.cachedContent);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateCachedContentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest} message UpdateCachedContentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateCachedContentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.cachedContent = null;
                                object.updateMask = null;
                            }
                            if (message.cachedContent != null && message.hasOwnProperty("cachedContent"))
                                object.cachedContent = $root.google.ai.generativelanguage.v1alpha.CachedContent.toObject(message.cachedContent, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateCachedContentRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateCachedContentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateCachedContentRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateCachedContentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.UpdateCachedContentRequest";
                        };
    
                        return UpdateCachedContentRequest;
                    })();
    
                    v1alpha.DeleteCachedContentRequest = (function() {
    
                        /**
                         * Properties of a DeleteCachedContentRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IDeleteCachedContentRequest
                         * @property {string|null} [name] DeleteCachedContentRequest name
                         */
    
                        /**
                         * Constructs a new DeleteCachedContentRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a DeleteCachedContentRequest.
                         * @implements IDeleteCachedContentRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteCachedContentRequest=} [properties] Properties to set
                         */
                        function DeleteCachedContentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteCachedContentRequest name.
                         * @member {string} name
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest
                         * @instance
                         */
                        DeleteCachedContentRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteCachedContentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteCachedContentRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest} DeleteCachedContentRequest instance
                         */
                        DeleteCachedContentRequest.create = function create(properties) {
                            return new DeleteCachedContentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteCachedContentRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteCachedContentRequest} message DeleteCachedContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteCachedContentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteCachedContentRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteCachedContentRequest} message DeleteCachedContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteCachedContentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteCachedContentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest} DeleteCachedContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteCachedContentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteCachedContentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest} DeleteCachedContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteCachedContentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteCachedContentRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteCachedContentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteCachedContentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest} DeleteCachedContentRequest
                         */
                        DeleteCachedContentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteCachedContentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest} message DeleteCachedContentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteCachedContentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteCachedContentRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteCachedContentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteCachedContentRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteCachedContentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.DeleteCachedContentRequest";
                        };
    
                        return DeleteCachedContentRequest;
                    })();
    
                    v1alpha.CachedContent = (function() {
    
                        /**
                         * Properties of a CachedContent.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ICachedContent
                         * @property {google.protobuf.ITimestamp|null} [expireTime] CachedContent expireTime
                         * @property {google.protobuf.IDuration|null} [ttl] CachedContent ttl
                         * @property {string|null} [name] CachedContent name
                         * @property {string|null} [displayName] CachedContent displayName
                         * @property {string|null} [model] CachedContent model
                         * @property {google.ai.generativelanguage.v1alpha.IContent|null} [systemInstruction] CachedContent systemInstruction
                         * @property {Array.<google.ai.generativelanguage.v1alpha.IContent>|null} [contents] CachedContent contents
                         * @property {Array.<google.ai.generativelanguage.v1alpha.ITool>|null} [tools] CachedContent tools
                         * @property {google.ai.generativelanguage.v1alpha.IToolConfig|null} [toolConfig] CachedContent toolConfig
                         * @property {google.protobuf.ITimestamp|null} [createTime] CachedContent createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] CachedContent updateTime
                         * @property {google.ai.generativelanguage.v1alpha.CachedContent.IUsageMetadata|null} [usageMetadata] CachedContent usageMetadata
                         */
    
                        /**
                         * Constructs a new CachedContent.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a CachedContent.
                         * @implements ICachedContent
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ICachedContent=} [properties] Properties to set
                         */
                        function CachedContent(properties) {
                            this.contents = [];
                            this.tools = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CachedContent expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.expireTime = null;
    
                        /**
                         * CachedContent ttl.
                         * @member {google.protobuf.IDuration|null|undefined} ttl
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.ttl = null;
    
                        /**
                         * CachedContent name.
                         * @member {string|null|undefined} name
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.name = null;
    
                        /**
                         * CachedContent displayName.
                         * @member {string|null|undefined} displayName
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.displayName = null;
    
                        /**
                         * CachedContent model.
                         * @member {string|null|undefined} model
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.model = null;
    
                        /**
                         * CachedContent systemInstruction.
                         * @member {google.ai.generativelanguage.v1alpha.IContent|null|undefined} systemInstruction
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.systemInstruction = null;
    
                        /**
                         * CachedContent contents.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.IContent>} contents
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.contents = $util.emptyArray;
    
                        /**
                         * CachedContent tools.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.ITool>} tools
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.tools = $util.emptyArray;
    
                        /**
                         * CachedContent toolConfig.
                         * @member {google.ai.generativelanguage.v1alpha.IToolConfig|null|undefined} toolConfig
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.toolConfig = null;
    
                        /**
                         * CachedContent createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.createTime = null;
    
                        /**
                         * CachedContent updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.updateTime = null;
    
                        /**
                         * CachedContent usageMetadata.
                         * @member {google.ai.generativelanguage.v1alpha.CachedContent.IUsageMetadata|null|undefined} usageMetadata
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        CachedContent.prototype.usageMetadata = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CachedContent expiration.
                         * @member {"expireTime"|"ttl"|undefined} expiration
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        Object.defineProperty(CachedContent.prototype, "expiration", {
                            get: $util.oneOfGetter($oneOfFields = ["expireTime", "ttl"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CachedContent _name.
                         * @member {"name"|undefined} _name
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        Object.defineProperty(CachedContent.prototype, "_name", {
                            get: $util.oneOfGetter($oneOfFields = ["name"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CachedContent _displayName.
                         * @member {"displayName"|undefined} _displayName
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        Object.defineProperty(CachedContent.prototype, "_displayName", {
                            get: $util.oneOfGetter($oneOfFields = ["displayName"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CachedContent _model.
                         * @member {"model"|undefined} _model
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        Object.defineProperty(CachedContent.prototype, "_model", {
                            get: $util.oneOfGetter($oneOfFields = ["model"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CachedContent _systemInstruction.
                         * @member {"systemInstruction"|undefined} _systemInstruction
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        Object.defineProperty(CachedContent.prototype, "_systemInstruction", {
                            get: $util.oneOfGetter($oneOfFields = ["systemInstruction"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CachedContent _toolConfig.
                         * @member {"toolConfig"|undefined} _toolConfig
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         */
                        Object.defineProperty(CachedContent.prototype, "_toolConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["toolConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CachedContent instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICachedContent=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.CachedContent} CachedContent instance
                         */
                        CachedContent.create = function create(properties) {
                            return new CachedContent(properties);
                        };
    
                        /**
                         * Encodes the specified CachedContent message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CachedContent.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICachedContent} message CachedContent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CachedContent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.model != null && Object.hasOwnProperty.call(message, "model"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.model);
                            if (message.systemInstruction != null && Object.hasOwnProperty.call(message, "systemInstruction"))
                                $root.google.ai.generativelanguage.v1alpha.Content.encode(message.systemInstruction, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.contents != null && message.contents.length)
                                for (var i = 0; i < message.contents.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.Content.encode(message.contents[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.tools != null && message.tools.length)
                                for (var i = 0; i < message.tools.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.Tool.encode(message.tools[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.toolConfig != null && Object.hasOwnProperty.call(message, "toolConfig"))
                                $root.google.ai.generativelanguage.v1alpha.ToolConfig.encode(message.toolConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.ttl != null && Object.hasOwnProperty.call(message, "ttl"))
                                $root.google.protobuf.Duration.encode(message.ttl, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.displayName);
                            if (message.usageMetadata != null && Object.hasOwnProperty.call(message, "usageMetadata"))
                                $root.google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata.encode(message.usageMetadata, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CachedContent message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CachedContent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICachedContent} message CachedContent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CachedContent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CachedContent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.CachedContent} CachedContent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CachedContent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.CachedContent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 9: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.ttl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 11: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.model = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.systemInstruction = $root.google.ai.generativelanguage.v1alpha.Content.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.contents && message.contents.length))
                                            message.contents = [];
                                        message.contents.push($root.google.ai.generativelanguage.v1alpha.Content.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        if (!(message.tools && message.tools.length))
                                            message.tools = [];
                                        message.tools.push($root.google.ai.generativelanguage.v1alpha.Tool.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        message.toolConfig = $root.google.ai.generativelanguage.v1alpha.ToolConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.usageMetadata = $root.google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CachedContent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.CachedContent} CachedContent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CachedContent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CachedContent message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CachedContent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                properties.expiration = 1;
                                {
                                    var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                    if (error)
                                        return "expireTime." + error;
                                }
                            }
                            if (message.ttl != null && message.hasOwnProperty("ttl")) {
                                if (properties.expiration === 1)
                                    return "expiration: multiple values";
                                properties.expiration = 1;
                                {
                                    var error = $root.google.protobuf.Duration.verify(message.ttl);
                                    if (error)
                                        return "ttl." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name")) {
                                properties._name = 1;
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName")) {
                                properties._displayName = 1;
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            }
                            if (message.model != null && message.hasOwnProperty("model")) {
                                properties._model = 1;
                                if (!$util.isString(message.model))
                                    return "model: string expected";
                            }
                            if (message.systemInstruction != null && message.hasOwnProperty("systemInstruction")) {
                                properties._systemInstruction = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Content.verify(message.systemInstruction);
                                    if (error)
                                        return "systemInstruction." + error;
                                }
                            }
                            if (message.contents != null && message.hasOwnProperty("contents")) {
                                if (!Array.isArray(message.contents))
                                    return "contents: array expected";
                                for (var i = 0; i < message.contents.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Content.verify(message.contents[i]);
                                    if (error)
                                        return "contents." + error;
                                }
                            }
                            if (message.tools != null && message.hasOwnProperty("tools")) {
                                if (!Array.isArray(message.tools))
                                    return "tools: array expected";
                                for (var i = 0; i < message.tools.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Tool.verify(message.tools[i]);
                                    if (error)
                                        return "tools." + error;
                                }
                            }
                            if (message.toolConfig != null && message.hasOwnProperty("toolConfig")) {
                                properties._toolConfig = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.ToolConfig.verify(message.toolConfig);
                                    if (error)
                                        return "toolConfig." + error;
                                }
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.usageMetadata != null && message.hasOwnProperty("usageMetadata")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata.verify(message.usageMetadata);
                                if (error)
                                    return "usageMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CachedContent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.CachedContent} CachedContent
                         */
                        CachedContent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.CachedContent)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.CachedContent();
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CachedContent.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            if (object.ttl != null) {
                                if (typeof object.ttl !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CachedContent.ttl: object expected");
                                message.ttl = $root.google.protobuf.Duration.fromObject(object.ttl);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.model != null)
                                message.model = String(object.model);
                            if (object.systemInstruction != null) {
                                if (typeof object.systemInstruction !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CachedContent.systemInstruction: object expected");
                                message.systemInstruction = $root.google.ai.generativelanguage.v1alpha.Content.fromObject(object.systemInstruction);
                            }
                            if (object.contents) {
                                if (!Array.isArray(object.contents))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CachedContent.contents: array expected");
                                message.contents = [];
                                for (var i = 0; i < object.contents.length; ++i) {
                                    if (typeof object.contents[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.CachedContent.contents: object expected");
                                    message.contents[i] = $root.google.ai.generativelanguage.v1alpha.Content.fromObject(object.contents[i]);
                                }
                            }
                            if (object.tools) {
                                if (!Array.isArray(object.tools))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CachedContent.tools: array expected");
                                message.tools = [];
                                for (var i = 0; i < object.tools.length; ++i) {
                                    if (typeof object.tools[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.CachedContent.tools: object expected");
                                    message.tools[i] = $root.google.ai.generativelanguage.v1alpha.Tool.fromObject(object.tools[i]);
                                }
                            }
                            if (object.toolConfig != null) {
                                if (typeof object.toolConfig !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CachedContent.toolConfig: object expected");
                                message.toolConfig = $root.google.ai.generativelanguage.v1alpha.ToolConfig.fromObject(object.toolConfig);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CachedContent.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CachedContent.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.usageMetadata != null) {
                                if (typeof object.usageMetadata !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CachedContent.usageMetadata: object expected");
                                message.usageMetadata = $root.google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata.fromObject(object.usageMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CachedContent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.CachedContent} message CachedContent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CachedContent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.contents = [];
                                object.tools = [];
                            }
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                                object.usageMetadata = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name")) {
                                object.name = message.name;
                                if (options.oneofs)
                                    object._name = "name";
                            }
                            if (message.model != null && message.hasOwnProperty("model")) {
                                object.model = message.model;
                                if (options.oneofs)
                                    object._model = "model";
                            }
                            if (message.systemInstruction != null && message.hasOwnProperty("systemInstruction")) {
                                object.systemInstruction = $root.google.ai.generativelanguage.v1alpha.Content.toObject(message.systemInstruction, options);
                                if (options.oneofs)
                                    object._systemInstruction = "systemInstruction";
                            }
                            if (message.contents && message.contents.length) {
                                object.contents = [];
                                for (var j = 0; j < message.contents.length; ++j)
                                    object.contents[j] = $root.google.ai.generativelanguage.v1alpha.Content.toObject(message.contents[j], options);
                            }
                            if (message.tools && message.tools.length) {
                                object.tools = [];
                                for (var j = 0; j < message.tools.length; ++j)
                                    object.tools[j] = $root.google.ai.generativelanguage.v1alpha.Tool.toObject(message.tools[j], options);
                            }
                            if (message.toolConfig != null && message.hasOwnProperty("toolConfig")) {
                                object.toolConfig = $root.google.ai.generativelanguage.v1alpha.ToolConfig.toObject(message.toolConfig, options);
                                if (options.oneofs)
                                    object._toolConfig = "toolConfig";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                                if (options.oneofs)
                                    object.expiration = "expireTime";
                            }
                            if (message.ttl != null && message.hasOwnProperty("ttl")) {
                                object.ttl = $root.google.protobuf.Duration.toObject(message.ttl, options);
                                if (options.oneofs)
                                    object.expiration = "ttl";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName")) {
                                object.displayName = message.displayName;
                                if (options.oneofs)
                                    object._displayName = "displayName";
                            }
                            if (message.usageMetadata != null && message.hasOwnProperty("usageMetadata"))
                                object.usageMetadata = $root.google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata.toObject(message.usageMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this CachedContent to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CachedContent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CachedContent
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CachedContent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.CachedContent";
                        };
    
                        CachedContent.UsageMetadata = (function() {
    
                            /**
                             * Properties of a UsageMetadata.
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                             * @interface IUsageMetadata
                             * @property {number|null} [totalTokenCount] UsageMetadata totalTokenCount
                             */
    
                            /**
                             * Constructs a new UsageMetadata.
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent
                             * @classdesc Represents a UsageMetadata.
                             * @implements IUsageMetadata
                             * @constructor
                             * @param {google.ai.generativelanguage.v1alpha.CachedContent.IUsageMetadata=} [properties] Properties to set
                             */
                            function UsageMetadata(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UsageMetadata totalTokenCount.
                             * @member {number} totalTokenCount
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata
                             * @instance
                             */
                            UsageMetadata.prototype.totalTokenCount = 0;
    
                            /**
                             * Creates a new UsageMetadata instance using the specified properties.
                             * @function create
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata
                             * @static
                             * @param {google.ai.generativelanguage.v1alpha.CachedContent.IUsageMetadata=} [properties] Properties to set
                             * @returns {google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata} UsageMetadata instance
                             */
                            UsageMetadata.create = function create(properties) {
                                return new UsageMetadata(properties);
                            };
    
                            /**
                             * Encodes the specified UsageMetadata message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata.verify|verify} messages.
                             * @function encode
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata
                             * @static
                             * @param {google.ai.generativelanguage.v1alpha.CachedContent.IUsageMetadata} message UsageMetadata message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UsageMetadata.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.totalTokenCount != null && Object.hasOwnProperty.call(message, "totalTokenCount"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.totalTokenCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UsageMetadata message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata
                             * @static
                             * @param {google.ai.generativelanguage.v1alpha.CachedContent.IUsageMetadata} message UsageMetadata message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UsageMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a UsageMetadata message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata} UsageMetadata
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UsageMetadata.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.totalTokenCount = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a UsageMetadata message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata} UsageMetadata
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UsageMetadata.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a UsageMetadata message.
                             * @function verify
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UsageMetadata.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.totalTokenCount != null && message.hasOwnProperty("totalTokenCount"))
                                    if (!$util.isInteger(message.totalTokenCount))
                                        return "totalTokenCount: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a UsageMetadata message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata} UsageMetadata
                             */
                            UsageMetadata.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata)
                                    return object;
                                var message = new $root.google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata();
                                if (object.totalTokenCount != null)
                                    message.totalTokenCount = object.totalTokenCount | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a UsageMetadata message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata
                             * @static
                             * @param {google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata} message UsageMetadata
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UsageMetadata.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.totalTokenCount = 0;
                                if (message.totalTokenCount != null && message.hasOwnProperty("totalTokenCount"))
                                    object.totalTokenCount = message.totalTokenCount;
                                return object;
                            };
    
                            /**
                             * Converts this UsageMetadata to JSON.
                             * @function toJSON
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UsageMetadata.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UsageMetadata
                             * @function getTypeUrl
                             * @memberof google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UsageMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.CachedContent.UsageMetadata";
                            };
    
                            return UsageMetadata;
                        })();
    
                        return CachedContent;
                    })();
    
                    /**
                     * Type enum.
                     * @name google.ai.generativelanguage.v1alpha.Type
                     * @enum {number}
                     * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                     * @property {number} STRING=1 STRING value
                     * @property {number} NUMBER=2 NUMBER value
                     * @property {number} INTEGER=3 INTEGER value
                     * @property {number} BOOLEAN=4 BOOLEAN value
                     * @property {number} ARRAY=5 ARRAY value
                     * @property {number} OBJECT=6 OBJECT value
                     */
                    v1alpha.Type = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "STRING"] = 1;
                        values[valuesById[2] = "NUMBER"] = 2;
                        values[valuesById[3] = "INTEGER"] = 3;
                        values[valuesById[4] = "BOOLEAN"] = 4;
                        values[valuesById[5] = "ARRAY"] = 5;
                        values[valuesById[6] = "OBJECT"] = 6;
                        return values;
                    })();
    
                    v1alpha.Content = (function() {
    
                        /**
                         * Properties of a Content.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IContent
                         * @property {Array.<google.ai.generativelanguage.v1alpha.IPart>|null} [parts] Content parts
                         * @property {string|null} [role] Content role
                         */
    
                        /**
                         * Constructs a new Content.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a Content.
                         * @implements IContent
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IContent=} [properties] Properties to set
                         */
                        function Content(properties) {
                            this.parts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Content parts.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.IPart>} parts
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @instance
                         */
                        Content.prototype.parts = $util.emptyArray;
    
                        /**
                         * Content role.
                         * @member {string} role
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @instance
                         */
                        Content.prototype.role = "";
    
                        /**
                         * Creates a new Content instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IContent=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.Content} Content instance
                         */
                        Content.create = function create(properties) {
                            return new Content(properties);
                        };
    
                        /**
                         * Encodes the specified Content message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Content.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IContent} message Content message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Content.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parts != null && message.parts.length)
                                for (var i = 0; i < message.parts.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.Part.encode(message.parts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.role != null && Object.hasOwnProperty.call(message, "role"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.role);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Content message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Content.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IContent} message Content message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Content.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Content message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.Content} Content
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Content.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.Content();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.parts && message.parts.length))
                                            message.parts = [];
                                        message.parts.push($root.google.ai.generativelanguage.v1alpha.Part.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.role = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Content message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.Content} Content
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Content.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Content message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Content.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parts != null && message.hasOwnProperty("parts")) {
                                if (!Array.isArray(message.parts))
                                    return "parts: array expected";
                                for (var i = 0; i < message.parts.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Part.verify(message.parts[i]);
                                    if (error)
                                        return "parts." + error;
                                }
                            }
                            if (message.role != null && message.hasOwnProperty("role"))
                                if (!$util.isString(message.role))
                                    return "role: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Content message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.Content} Content
                         */
                        Content.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.Content)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.Content();
                            if (object.parts) {
                                if (!Array.isArray(object.parts))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Content.parts: array expected");
                                message.parts = [];
                                for (var i = 0; i < object.parts.length; ++i) {
                                    if (typeof object.parts[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.Content.parts: object expected");
                                    message.parts[i] = $root.google.ai.generativelanguage.v1alpha.Part.fromObject(object.parts[i]);
                                }
                            }
                            if (object.role != null)
                                message.role = String(object.role);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Content message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.Content} message Content
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Content.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.parts = [];
                            if (options.defaults)
                                object.role = "";
                            if (message.parts && message.parts.length) {
                                object.parts = [];
                                for (var j = 0; j < message.parts.length; ++j)
                                    object.parts[j] = $root.google.ai.generativelanguage.v1alpha.Part.toObject(message.parts[j], options);
                            }
                            if (message.role != null && message.hasOwnProperty("role"))
                                object.role = message.role;
                            return object;
                        };
    
                        /**
                         * Converts this Content to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Content.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Content
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.Content
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Content.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.Content";
                        };
    
                        return Content;
                    })();
    
                    v1alpha.Part = (function() {
    
                        /**
                         * Properties of a Part.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IPart
                         * @property {string|null} [text] Part text
                         * @property {google.ai.generativelanguage.v1alpha.IBlob|null} [inlineData] Part inlineData
                         * @property {google.ai.generativelanguage.v1alpha.IFunctionCall|null} [functionCall] Part functionCall
                         * @property {google.ai.generativelanguage.v1alpha.IFunctionResponse|null} [functionResponse] Part functionResponse
                         * @property {google.ai.generativelanguage.v1alpha.IFileData|null} [fileData] Part fileData
                         * @property {google.ai.generativelanguage.v1alpha.IExecutableCode|null} [executableCode] Part executableCode
                         * @property {google.ai.generativelanguage.v1alpha.ICodeExecutionResult|null} [codeExecutionResult] Part codeExecutionResult
                         */
    
                        /**
                         * Constructs a new Part.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a Part.
                         * @implements IPart
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IPart=} [properties] Properties to set
                         */
                        function Part(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Part text.
                         * @member {string|null|undefined} text
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @instance
                         */
                        Part.prototype.text = null;
    
                        /**
                         * Part inlineData.
                         * @member {google.ai.generativelanguage.v1alpha.IBlob|null|undefined} inlineData
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @instance
                         */
                        Part.prototype.inlineData = null;
    
                        /**
                         * Part functionCall.
                         * @member {google.ai.generativelanguage.v1alpha.IFunctionCall|null|undefined} functionCall
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @instance
                         */
                        Part.prototype.functionCall = null;
    
                        /**
                         * Part functionResponse.
                         * @member {google.ai.generativelanguage.v1alpha.IFunctionResponse|null|undefined} functionResponse
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @instance
                         */
                        Part.prototype.functionResponse = null;
    
                        /**
                         * Part fileData.
                         * @member {google.ai.generativelanguage.v1alpha.IFileData|null|undefined} fileData
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @instance
                         */
                        Part.prototype.fileData = null;
    
                        /**
                         * Part executableCode.
                         * @member {google.ai.generativelanguage.v1alpha.IExecutableCode|null|undefined} executableCode
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @instance
                         */
                        Part.prototype.executableCode = null;
    
                        /**
                         * Part codeExecutionResult.
                         * @member {google.ai.generativelanguage.v1alpha.ICodeExecutionResult|null|undefined} codeExecutionResult
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @instance
                         */
                        Part.prototype.codeExecutionResult = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Part data.
                         * @member {"text"|"inlineData"|"functionCall"|"functionResponse"|"fileData"|"executableCode"|"codeExecutionResult"|undefined} data
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @instance
                         */
                        Object.defineProperty(Part.prototype, "data", {
                            get: $util.oneOfGetter($oneOfFields = ["text", "inlineData", "functionCall", "functionResponse", "fileData", "executableCode", "codeExecutionResult"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Part instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IPart=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.Part} Part instance
                         */
                        Part.create = function create(properties) {
                            return new Part(properties);
                        };
    
                        /**
                         * Encodes the specified Part message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Part.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IPart} message Part message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Part.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.text);
                            if (message.inlineData != null && Object.hasOwnProperty.call(message, "inlineData"))
                                $root.google.ai.generativelanguage.v1alpha.Blob.encode(message.inlineData, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.functionCall != null && Object.hasOwnProperty.call(message, "functionCall"))
                                $root.google.ai.generativelanguage.v1alpha.FunctionCall.encode(message.functionCall, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.functionResponse != null && Object.hasOwnProperty.call(message, "functionResponse"))
                                $root.google.ai.generativelanguage.v1alpha.FunctionResponse.encode(message.functionResponse, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.fileData != null && Object.hasOwnProperty.call(message, "fileData"))
                                $root.google.ai.generativelanguage.v1alpha.FileData.encode(message.fileData, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.executableCode != null && Object.hasOwnProperty.call(message, "executableCode"))
                                $root.google.ai.generativelanguage.v1alpha.ExecutableCode.encode(message.executableCode, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.codeExecutionResult != null && Object.hasOwnProperty.call(message, "codeExecutionResult"))
                                $root.google.ai.generativelanguage.v1alpha.CodeExecutionResult.encode(message.codeExecutionResult, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Part message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Part.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IPart} message Part message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Part.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Part message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.Part} Part
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Part.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.Part();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.text = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.inlineData = $root.google.ai.generativelanguage.v1alpha.Blob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.functionCall = $root.google.ai.generativelanguage.v1alpha.FunctionCall.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.functionResponse = $root.google.ai.generativelanguage.v1alpha.FunctionResponse.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.fileData = $root.google.ai.generativelanguage.v1alpha.FileData.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.executableCode = $root.google.ai.generativelanguage.v1alpha.ExecutableCode.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.codeExecutionResult = $root.google.ai.generativelanguage.v1alpha.CodeExecutionResult.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Part message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.Part} Part
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Part.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Part message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Part.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.text != null && message.hasOwnProperty("text")) {
                                properties.data = 1;
                                if (!$util.isString(message.text))
                                    return "text: string expected";
                            }
                            if (message.inlineData != null && message.hasOwnProperty("inlineData")) {
                                if (properties.data === 1)
                                    return "data: multiple values";
                                properties.data = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Blob.verify(message.inlineData);
                                    if (error)
                                        return "inlineData." + error;
                                }
                            }
                            if (message.functionCall != null && message.hasOwnProperty("functionCall")) {
                                if (properties.data === 1)
                                    return "data: multiple values";
                                properties.data = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.FunctionCall.verify(message.functionCall);
                                    if (error)
                                        return "functionCall." + error;
                                }
                            }
                            if (message.functionResponse != null && message.hasOwnProperty("functionResponse")) {
                                if (properties.data === 1)
                                    return "data: multiple values";
                                properties.data = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.FunctionResponse.verify(message.functionResponse);
                                    if (error)
                                        return "functionResponse." + error;
                                }
                            }
                            if (message.fileData != null && message.hasOwnProperty("fileData")) {
                                if (properties.data === 1)
                                    return "data: multiple values";
                                properties.data = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.FileData.verify(message.fileData);
                                    if (error)
                                        return "fileData." + error;
                                }
                            }
                            if (message.executableCode != null && message.hasOwnProperty("executableCode")) {
                                if (properties.data === 1)
                                    return "data: multiple values";
                                properties.data = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.ExecutableCode.verify(message.executableCode);
                                    if (error)
                                        return "executableCode." + error;
                                }
                            }
                            if (message.codeExecutionResult != null && message.hasOwnProperty("codeExecutionResult")) {
                                if (properties.data === 1)
                                    return "data: multiple values";
                                properties.data = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.CodeExecutionResult.verify(message.codeExecutionResult);
                                    if (error)
                                        return "codeExecutionResult." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Part message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.Part} Part
                         */
                        Part.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.Part)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.Part();
                            if (object.text != null)
                                message.text = String(object.text);
                            if (object.inlineData != null) {
                                if (typeof object.inlineData !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Part.inlineData: object expected");
                                message.inlineData = $root.google.ai.generativelanguage.v1alpha.Blob.fromObject(object.inlineData);
                            }
                            if (object.functionCall != null) {
                                if (typeof object.functionCall !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Part.functionCall: object expected");
                                message.functionCall = $root.google.ai.generativelanguage.v1alpha.FunctionCall.fromObject(object.functionCall);
                            }
                            if (object.functionResponse != null) {
                                if (typeof object.functionResponse !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Part.functionResponse: object expected");
                                message.functionResponse = $root.google.ai.generativelanguage.v1alpha.FunctionResponse.fromObject(object.functionResponse);
                            }
                            if (object.fileData != null) {
                                if (typeof object.fileData !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Part.fileData: object expected");
                                message.fileData = $root.google.ai.generativelanguage.v1alpha.FileData.fromObject(object.fileData);
                            }
                            if (object.executableCode != null) {
                                if (typeof object.executableCode !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Part.executableCode: object expected");
                                message.executableCode = $root.google.ai.generativelanguage.v1alpha.ExecutableCode.fromObject(object.executableCode);
                            }
                            if (object.codeExecutionResult != null) {
                                if (typeof object.codeExecutionResult !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Part.codeExecutionResult: object expected");
                                message.codeExecutionResult = $root.google.ai.generativelanguage.v1alpha.CodeExecutionResult.fromObject(object.codeExecutionResult);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Part message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.Part} message Part
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Part.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.text != null && message.hasOwnProperty("text")) {
                                object.text = message.text;
                                if (options.oneofs)
                                    object.data = "text";
                            }
                            if (message.inlineData != null && message.hasOwnProperty("inlineData")) {
                                object.inlineData = $root.google.ai.generativelanguage.v1alpha.Blob.toObject(message.inlineData, options);
                                if (options.oneofs)
                                    object.data = "inlineData";
                            }
                            if (message.functionCall != null && message.hasOwnProperty("functionCall")) {
                                object.functionCall = $root.google.ai.generativelanguage.v1alpha.FunctionCall.toObject(message.functionCall, options);
                                if (options.oneofs)
                                    object.data = "functionCall";
                            }
                            if (message.functionResponse != null && message.hasOwnProperty("functionResponse")) {
                                object.functionResponse = $root.google.ai.generativelanguage.v1alpha.FunctionResponse.toObject(message.functionResponse, options);
                                if (options.oneofs)
                                    object.data = "functionResponse";
                            }
                            if (message.fileData != null && message.hasOwnProperty("fileData")) {
                                object.fileData = $root.google.ai.generativelanguage.v1alpha.FileData.toObject(message.fileData, options);
                                if (options.oneofs)
                                    object.data = "fileData";
                            }
                            if (message.executableCode != null && message.hasOwnProperty("executableCode")) {
                                object.executableCode = $root.google.ai.generativelanguage.v1alpha.ExecutableCode.toObject(message.executableCode, options);
                                if (options.oneofs)
                                    object.data = "executableCode";
                            }
                            if (message.codeExecutionResult != null && message.hasOwnProperty("codeExecutionResult")) {
                                object.codeExecutionResult = $root.google.ai.generativelanguage.v1alpha.CodeExecutionResult.toObject(message.codeExecutionResult, options);
                                if (options.oneofs)
                                    object.data = "codeExecutionResult";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Part to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Part.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Part
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.Part
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Part.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.Part";
                        };
    
                        return Part;
                    })();
    
                    v1alpha.Blob = (function() {
    
                        /**
                         * Properties of a Blob.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IBlob
                         * @property {string|null} [mimeType] Blob mimeType
                         * @property {Uint8Array|null} [data] Blob data
                         */
    
                        /**
                         * Constructs a new Blob.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a Blob.
                         * @implements IBlob
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IBlob=} [properties] Properties to set
                         */
                        function Blob(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Blob mimeType.
                         * @member {string} mimeType
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @instance
                         */
                        Blob.prototype.mimeType = "";
    
                        /**
                         * Blob data.
                         * @member {Uint8Array} data
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @instance
                         */
                        Blob.prototype.data = $util.newBuffer([]);
    
                        /**
                         * Creates a new Blob instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IBlob=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.Blob} Blob instance
                         */
                        Blob.create = function create(properties) {
                            return new Blob(properties);
                        };
    
                        /**
                         * Encodes the specified Blob message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Blob.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IBlob} message Blob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Blob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mimeType);
                            if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.data);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Blob message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Blob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IBlob} message Blob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Blob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Blob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.Blob} Blob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Blob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.Blob();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mimeType = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.data = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Blob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.Blob} Blob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Blob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Blob message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Blob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                if (!$util.isString(message.mimeType))
                                    return "mimeType: string expected";
                            if (message.data != null && message.hasOwnProperty("data"))
                                if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                    return "data: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates a Blob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.Blob} Blob
                         */
                        Blob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.Blob)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.Blob();
                            if (object.mimeType != null)
                                message.mimeType = String(object.mimeType);
                            if (object.data != null)
                                if (typeof object.data === "string")
                                    $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                                else if (object.data.length >= 0)
                                    message.data = object.data;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Blob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.Blob} message Blob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Blob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.mimeType = "";
                                if (options.bytes === String)
                                    object.data = "";
                                else {
                                    object.data = [];
                                    if (options.bytes !== Array)
                                        object.data = $util.newBuffer(object.data);
                                }
                            }
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                object.mimeType = message.mimeType;
                            if (message.data != null && message.hasOwnProperty("data"))
                                object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                            return object;
                        };
    
                        /**
                         * Converts this Blob to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Blob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Blob
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.Blob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Blob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.Blob";
                        };
    
                        return Blob;
                    })();
    
                    v1alpha.FileData = (function() {
    
                        /**
                         * Properties of a FileData.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IFileData
                         * @property {string|null} [mimeType] FileData mimeType
                         * @property {string|null} [fileUri] FileData fileUri
                         */
    
                        /**
                         * Constructs a new FileData.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a FileData.
                         * @implements IFileData
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IFileData=} [properties] Properties to set
                         */
                        function FileData(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FileData mimeType.
                         * @member {string} mimeType
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @instance
                         */
                        FileData.prototype.mimeType = "";
    
                        /**
                         * FileData fileUri.
                         * @member {string} fileUri
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @instance
                         */
                        FileData.prototype.fileUri = "";
    
                        /**
                         * Creates a new FileData instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFileData=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.FileData} FileData instance
                         */
                        FileData.create = function create(properties) {
                            return new FileData(properties);
                        };
    
                        /**
                         * Encodes the specified FileData message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.FileData.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFileData} message FileData message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FileData.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mimeType);
                            if (message.fileUri != null && Object.hasOwnProperty.call(message, "fileUri"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.fileUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FileData message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.FileData.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFileData} message FileData message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FileData.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FileData message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.FileData} FileData
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FileData.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.FileData();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mimeType = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.fileUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FileData message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.FileData} FileData
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FileData.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FileData message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FileData.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                if (!$util.isString(message.mimeType))
                                    return "mimeType: string expected";
                            if (message.fileUri != null && message.hasOwnProperty("fileUri"))
                                if (!$util.isString(message.fileUri))
                                    return "fileUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a FileData message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.FileData} FileData
                         */
                        FileData.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.FileData)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.FileData();
                            if (object.mimeType != null)
                                message.mimeType = String(object.mimeType);
                            if (object.fileUri != null)
                                message.fileUri = String(object.fileUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FileData message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.FileData} message FileData
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FileData.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.mimeType = "";
                                object.fileUri = "";
                            }
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                object.mimeType = message.mimeType;
                            if (message.fileUri != null && message.hasOwnProperty("fileUri"))
                                object.fileUri = message.fileUri;
                            return object;
                        };
    
                        /**
                         * Converts this FileData to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FileData.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FileData
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.FileData
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FileData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.FileData";
                        };
    
                        return FileData;
                    })();
    
                    v1alpha.ExecutableCode = (function() {
    
                        /**
                         * Properties of an ExecutableCode.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IExecutableCode
                         * @property {google.ai.generativelanguage.v1alpha.ExecutableCode.Language|null} [language] ExecutableCode language
                         * @property {string|null} [code] ExecutableCode code
                         */
    
                        /**
                         * Constructs a new ExecutableCode.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents an ExecutableCode.
                         * @implements IExecutableCode
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IExecutableCode=} [properties] Properties to set
                         */
                        function ExecutableCode(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExecutableCode language.
                         * @member {google.ai.generativelanguage.v1alpha.ExecutableCode.Language} language
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @instance
                         */
                        ExecutableCode.prototype.language = 0;
    
                        /**
                         * ExecutableCode code.
                         * @member {string} code
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @instance
                         */
                        ExecutableCode.prototype.code = "";
    
                        /**
                         * Creates a new ExecutableCode instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IExecutableCode=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.ExecutableCode} ExecutableCode instance
                         */
                        ExecutableCode.create = function create(properties) {
                            return new ExecutableCode(properties);
                        };
    
                        /**
                         * Encodes the specified ExecutableCode message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ExecutableCode.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IExecutableCode} message ExecutableCode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutableCode.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.language != null && Object.hasOwnProperty.call(message, "language"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.language);
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.code);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExecutableCode message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ExecutableCode.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IExecutableCode} message ExecutableCode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutableCode.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExecutableCode message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.ExecutableCode} ExecutableCode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutableCode.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.ExecutableCode();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.language = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.code = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExecutableCode message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.ExecutableCode} ExecutableCode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutableCode.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExecutableCode message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExecutableCode.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.language != null && message.hasOwnProperty("language"))
                                switch (message.language) {
                                default:
                                    return "language: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.code != null && message.hasOwnProperty("code"))
                                if (!$util.isString(message.code))
                                    return "code: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ExecutableCode message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.ExecutableCode} ExecutableCode
                         */
                        ExecutableCode.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.ExecutableCode)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.ExecutableCode();
                            switch (object.language) {
                            default:
                                if (typeof object.language === "number") {
                                    message.language = object.language;
                                    break;
                                }
                                break;
                            case "LANGUAGE_UNSPECIFIED":
                            case 0:
                                message.language = 0;
                                break;
                            case "PYTHON":
                            case 1:
                                message.language = 1;
                                break;
                            }
                            if (object.code != null)
                                message.code = String(object.code);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExecutableCode message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ExecutableCode} message ExecutableCode
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExecutableCode.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.language = options.enums === String ? "LANGUAGE_UNSPECIFIED" : 0;
                                object.code = "";
                            }
                            if (message.language != null && message.hasOwnProperty("language"))
                                object.language = options.enums === String ? $root.google.ai.generativelanguage.v1alpha.ExecutableCode.Language[message.language] === undefined ? message.language : $root.google.ai.generativelanguage.v1alpha.ExecutableCode.Language[message.language] : message.language;
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = message.code;
                            return object;
                        };
    
                        /**
                         * Converts this ExecutableCode to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExecutableCode.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExecutableCode
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.ExecutableCode
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExecutableCode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.ExecutableCode";
                        };
    
                        /**
                         * Language enum.
                         * @name google.ai.generativelanguage.v1alpha.ExecutableCode.Language
                         * @enum {number}
                         * @property {number} LANGUAGE_UNSPECIFIED=0 LANGUAGE_UNSPECIFIED value
                         * @property {number} PYTHON=1 PYTHON value
                         */
                        ExecutableCode.Language = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "LANGUAGE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PYTHON"] = 1;
                            return values;
                        })();
    
                        return ExecutableCode;
                    })();
    
                    v1alpha.CodeExecutionResult = (function() {
    
                        /**
                         * Properties of a CodeExecutionResult.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ICodeExecutionResult
                         * @property {google.ai.generativelanguage.v1alpha.CodeExecutionResult.Outcome|null} [outcome] CodeExecutionResult outcome
                         * @property {string|null} [output] CodeExecutionResult output
                         */
    
                        /**
                         * Constructs a new CodeExecutionResult.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a CodeExecutionResult.
                         * @implements ICodeExecutionResult
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ICodeExecutionResult=} [properties] Properties to set
                         */
                        function CodeExecutionResult(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CodeExecutionResult outcome.
                         * @member {google.ai.generativelanguage.v1alpha.CodeExecutionResult.Outcome} outcome
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @instance
                         */
                        CodeExecutionResult.prototype.outcome = 0;
    
                        /**
                         * CodeExecutionResult output.
                         * @member {string} output
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @instance
                         */
                        CodeExecutionResult.prototype.output = "";
    
                        /**
                         * Creates a new CodeExecutionResult instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICodeExecutionResult=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.CodeExecutionResult} CodeExecutionResult instance
                         */
                        CodeExecutionResult.create = function create(properties) {
                            return new CodeExecutionResult(properties);
                        };
    
                        /**
                         * Encodes the specified CodeExecutionResult message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CodeExecutionResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICodeExecutionResult} message CodeExecutionResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CodeExecutionResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.outcome != null && Object.hasOwnProperty.call(message, "outcome"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.outcome);
                            if (message.output != null && Object.hasOwnProperty.call(message, "output"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.output);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CodeExecutionResult message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CodeExecutionResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICodeExecutionResult} message CodeExecutionResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CodeExecutionResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CodeExecutionResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.CodeExecutionResult} CodeExecutionResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CodeExecutionResult.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.CodeExecutionResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.outcome = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.output = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CodeExecutionResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.CodeExecutionResult} CodeExecutionResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CodeExecutionResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CodeExecutionResult message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CodeExecutionResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.outcome != null && message.hasOwnProperty("outcome"))
                                switch (message.outcome) {
                                default:
                                    return "outcome: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.output != null && message.hasOwnProperty("output"))
                                if (!$util.isString(message.output))
                                    return "output: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CodeExecutionResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.CodeExecutionResult} CodeExecutionResult
                         */
                        CodeExecutionResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.CodeExecutionResult)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.CodeExecutionResult();
                            switch (object.outcome) {
                            default:
                                if (typeof object.outcome === "number") {
                                    message.outcome = object.outcome;
                                    break;
                                }
                                break;
                            case "OUTCOME_UNSPECIFIED":
                            case 0:
                                message.outcome = 0;
                                break;
                            case "OUTCOME_OK":
                            case 1:
                                message.outcome = 1;
                                break;
                            case "OUTCOME_FAILED":
                            case 2:
                                message.outcome = 2;
                                break;
                            case "OUTCOME_DEADLINE_EXCEEDED":
                            case 3:
                                message.outcome = 3;
                                break;
                            }
                            if (object.output != null)
                                message.output = String(object.output);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CodeExecutionResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.CodeExecutionResult} message CodeExecutionResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CodeExecutionResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.outcome = options.enums === String ? "OUTCOME_UNSPECIFIED" : 0;
                                object.output = "";
                            }
                            if (message.outcome != null && message.hasOwnProperty("outcome"))
                                object.outcome = options.enums === String ? $root.google.ai.generativelanguage.v1alpha.CodeExecutionResult.Outcome[message.outcome] === undefined ? message.outcome : $root.google.ai.generativelanguage.v1alpha.CodeExecutionResult.Outcome[message.outcome] : message.outcome;
                            if (message.output != null && message.hasOwnProperty("output"))
                                object.output = message.output;
                            return object;
                        };
    
                        /**
                         * Converts this CodeExecutionResult to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CodeExecutionResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CodeExecutionResult
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecutionResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CodeExecutionResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.CodeExecutionResult";
                        };
    
                        /**
                         * Outcome enum.
                         * @name google.ai.generativelanguage.v1alpha.CodeExecutionResult.Outcome
                         * @enum {number}
                         * @property {number} OUTCOME_UNSPECIFIED=0 OUTCOME_UNSPECIFIED value
                         * @property {number} OUTCOME_OK=1 OUTCOME_OK value
                         * @property {number} OUTCOME_FAILED=2 OUTCOME_FAILED value
                         * @property {number} OUTCOME_DEADLINE_EXCEEDED=3 OUTCOME_DEADLINE_EXCEEDED value
                         */
                        CodeExecutionResult.Outcome = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "OUTCOME_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "OUTCOME_OK"] = 1;
                            values[valuesById[2] = "OUTCOME_FAILED"] = 2;
                            values[valuesById[3] = "OUTCOME_DEADLINE_EXCEEDED"] = 3;
                            return values;
                        })();
    
                        return CodeExecutionResult;
                    })();
    
                    v1alpha.Tool = (function() {
    
                        /**
                         * Properties of a Tool.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ITool
                         * @property {Array.<google.ai.generativelanguage.v1alpha.IFunctionDeclaration>|null} [functionDeclarations] Tool functionDeclarations
                         * @property {google.ai.generativelanguage.v1alpha.IGoogleSearchRetrieval|null} [googleSearchRetrieval] Tool googleSearchRetrieval
                         * @property {google.ai.generativelanguage.v1alpha.ICodeExecution|null} [codeExecution] Tool codeExecution
                         * @property {google.ai.generativelanguage.v1alpha.Tool.IGoogleSearch|null} [googleSearch] Tool googleSearch
                         */
    
                        /**
                         * Constructs a new Tool.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a Tool.
                         * @implements ITool
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ITool=} [properties] Properties to set
                         */
                        function Tool(properties) {
                            this.functionDeclarations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Tool functionDeclarations.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.IFunctionDeclaration>} functionDeclarations
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @instance
                         */
                        Tool.prototype.functionDeclarations = $util.emptyArray;
    
                        /**
                         * Tool googleSearchRetrieval.
                         * @member {google.ai.generativelanguage.v1alpha.IGoogleSearchRetrieval|null|undefined} googleSearchRetrieval
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @instance
                         */
                        Tool.prototype.googleSearchRetrieval = null;
    
                        /**
                         * Tool codeExecution.
                         * @member {google.ai.generativelanguage.v1alpha.ICodeExecution|null|undefined} codeExecution
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @instance
                         */
                        Tool.prototype.codeExecution = null;
    
                        /**
                         * Tool googleSearch.
                         * @member {google.ai.generativelanguage.v1alpha.Tool.IGoogleSearch|null|undefined} googleSearch
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @instance
                         */
                        Tool.prototype.googleSearch = null;
    
                        /**
                         * Creates a new Tool instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ITool=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.Tool} Tool instance
                         */
                        Tool.create = function create(properties) {
                            return new Tool(properties);
                        };
    
                        /**
                         * Encodes the specified Tool message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Tool.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ITool} message Tool message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Tool.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.functionDeclarations != null && message.functionDeclarations.length)
                                for (var i = 0; i < message.functionDeclarations.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.FunctionDeclaration.encode(message.functionDeclarations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.googleSearchRetrieval != null && Object.hasOwnProperty.call(message, "googleSearchRetrieval"))
                                $root.google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval.encode(message.googleSearchRetrieval, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.codeExecution != null && Object.hasOwnProperty.call(message, "codeExecution"))
                                $root.google.ai.generativelanguage.v1alpha.CodeExecution.encode(message.codeExecution, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.googleSearch != null && Object.hasOwnProperty.call(message, "googleSearch"))
                                $root.google.ai.generativelanguage.v1alpha.Tool.GoogleSearch.encode(message.googleSearch, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Tool message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Tool.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ITool} message Tool message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Tool.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Tool message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.Tool} Tool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Tool.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.Tool();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.functionDeclarations && message.functionDeclarations.length))
                                            message.functionDeclarations = [];
                                        message.functionDeclarations.push($root.google.ai.generativelanguage.v1alpha.FunctionDeclaration.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.googleSearchRetrieval = $root.google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.codeExecution = $root.google.ai.generativelanguage.v1alpha.CodeExecution.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.googleSearch = $root.google.ai.generativelanguage.v1alpha.Tool.GoogleSearch.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Tool message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.Tool} Tool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Tool.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Tool message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Tool.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.functionDeclarations != null && message.hasOwnProperty("functionDeclarations")) {
                                if (!Array.isArray(message.functionDeclarations))
                                    return "functionDeclarations: array expected";
                                for (var i = 0; i < message.functionDeclarations.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.FunctionDeclaration.verify(message.functionDeclarations[i]);
                                    if (error)
                                        return "functionDeclarations." + error;
                                }
                            }
                            if (message.googleSearchRetrieval != null && message.hasOwnProperty("googleSearchRetrieval")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval.verify(message.googleSearchRetrieval);
                                if (error)
                                    return "googleSearchRetrieval." + error;
                            }
                            if (message.codeExecution != null && message.hasOwnProperty("codeExecution")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.CodeExecution.verify(message.codeExecution);
                                if (error)
                                    return "codeExecution." + error;
                            }
                            if (message.googleSearch != null && message.hasOwnProperty("googleSearch")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.Tool.GoogleSearch.verify(message.googleSearch);
                                if (error)
                                    return "googleSearch." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Tool message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.Tool} Tool
                         */
                        Tool.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.Tool)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.Tool();
                            if (object.functionDeclarations) {
                                if (!Array.isArray(object.functionDeclarations))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Tool.functionDeclarations: array expected");
                                message.functionDeclarations = [];
                                for (var i = 0; i < object.functionDeclarations.length; ++i) {
                                    if (typeof object.functionDeclarations[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.Tool.functionDeclarations: object expected");
                                    message.functionDeclarations[i] = $root.google.ai.generativelanguage.v1alpha.FunctionDeclaration.fromObject(object.functionDeclarations[i]);
                                }
                            }
                            if (object.googleSearchRetrieval != null) {
                                if (typeof object.googleSearchRetrieval !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Tool.googleSearchRetrieval: object expected");
                                message.googleSearchRetrieval = $root.google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval.fromObject(object.googleSearchRetrieval);
                            }
                            if (object.codeExecution != null) {
                                if (typeof object.codeExecution !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Tool.codeExecution: object expected");
                                message.codeExecution = $root.google.ai.generativelanguage.v1alpha.CodeExecution.fromObject(object.codeExecution);
                            }
                            if (object.googleSearch != null) {
                                if (typeof object.googleSearch !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Tool.googleSearch: object expected");
                                message.googleSearch = $root.google.ai.generativelanguage.v1alpha.Tool.GoogleSearch.fromObject(object.googleSearch);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Tool message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.Tool} message Tool
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Tool.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.functionDeclarations = [];
                            if (options.defaults) {
                                object.googleSearchRetrieval = null;
                                object.codeExecution = null;
                                object.googleSearch = null;
                            }
                            if (message.functionDeclarations && message.functionDeclarations.length) {
                                object.functionDeclarations = [];
                                for (var j = 0; j < message.functionDeclarations.length; ++j)
                                    object.functionDeclarations[j] = $root.google.ai.generativelanguage.v1alpha.FunctionDeclaration.toObject(message.functionDeclarations[j], options);
                            }
                            if (message.googleSearchRetrieval != null && message.hasOwnProperty("googleSearchRetrieval"))
                                object.googleSearchRetrieval = $root.google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval.toObject(message.googleSearchRetrieval, options);
                            if (message.codeExecution != null && message.hasOwnProperty("codeExecution"))
                                object.codeExecution = $root.google.ai.generativelanguage.v1alpha.CodeExecution.toObject(message.codeExecution, options);
                            if (message.googleSearch != null && message.hasOwnProperty("googleSearch"))
                                object.googleSearch = $root.google.ai.generativelanguage.v1alpha.Tool.GoogleSearch.toObject(message.googleSearch, options);
                            return object;
                        };
    
                        /**
                         * Converts this Tool to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Tool.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Tool
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.Tool
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Tool.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.Tool";
                        };
    
                        Tool.GoogleSearch = (function() {
    
                            /**
                             * Properties of a GoogleSearch.
                             * @memberof google.ai.generativelanguage.v1alpha.Tool
                             * @interface IGoogleSearch
                             */
    
                            /**
                             * Constructs a new GoogleSearch.
                             * @memberof google.ai.generativelanguage.v1alpha.Tool
                             * @classdesc Represents a GoogleSearch.
                             * @implements IGoogleSearch
                             * @constructor
                             * @param {google.ai.generativelanguage.v1alpha.Tool.IGoogleSearch=} [properties] Properties to set
                             */
                            function GoogleSearch(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Creates a new GoogleSearch instance using the specified properties.
                             * @function create
                             * @memberof google.ai.generativelanguage.v1alpha.Tool.GoogleSearch
                             * @static
                             * @param {google.ai.generativelanguage.v1alpha.Tool.IGoogleSearch=} [properties] Properties to set
                             * @returns {google.ai.generativelanguage.v1alpha.Tool.GoogleSearch} GoogleSearch instance
                             */
                            GoogleSearch.create = function create(properties) {
                                return new GoogleSearch(properties);
                            };
    
                            /**
                             * Encodes the specified GoogleSearch message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Tool.GoogleSearch.verify|verify} messages.
                             * @function encode
                             * @memberof google.ai.generativelanguage.v1alpha.Tool.GoogleSearch
                             * @static
                             * @param {google.ai.generativelanguage.v1alpha.Tool.IGoogleSearch} message GoogleSearch message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GoogleSearch.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GoogleSearch message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Tool.GoogleSearch.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.ai.generativelanguage.v1alpha.Tool.GoogleSearch
                             * @static
                             * @param {google.ai.generativelanguage.v1alpha.Tool.IGoogleSearch} message GoogleSearch message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GoogleSearch.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GoogleSearch message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.ai.generativelanguage.v1alpha.Tool.GoogleSearch
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.ai.generativelanguage.v1alpha.Tool.GoogleSearch} GoogleSearch
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GoogleSearch.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.Tool.GoogleSearch();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GoogleSearch message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.ai.generativelanguage.v1alpha.Tool.GoogleSearch
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.ai.generativelanguage.v1alpha.Tool.GoogleSearch} GoogleSearch
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GoogleSearch.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GoogleSearch message.
                             * @function verify
                             * @memberof google.ai.generativelanguage.v1alpha.Tool.GoogleSearch
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GoogleSearch.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                return null;
                            };
    
                            /**
                             * Creates a GoogleSearch message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.ai.generativelanguage.v1alpha.Tool.GoogleSearch
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.ai.generativelanguage.v1alpha.Tool.GoogleSearch} GoogleSearch
                             */
                            GoogleSearch.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.ai.generativelanguage.v1alpha.Tool.GoogleSearch)
                                    return object;
                                return new $root.google.ai.generativelanguage.v1alpha.Tool.GoogleSearch();
                            };
    
                            /**
                             * Creates a plain object from a GoogleSearch message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.ai.generativelanguage.v1alpha.Tool.GoogleSearch
                             * @static
                             * @param {google.ai.generativelanguage.v1alpha.Tool.GoogleSearch} message GoogleSearch
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GoogleSearch.toObject = function toObject() {
                                return {};
                            };
    
                            /**
                             * Converts this GoogleSearch to JSON.
                             * @function toJSON
                             * @memberof google.ai.generativelanguage.v1alpha.Tool.GoogleSearch
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GoogleSearch.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GoogleSearch
                             * @function getTypeUrl
                             * @memberof google.ai.generativelanguage.v1alpha.Tool.GoogleSearch
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GoogleSearch.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.Tool.GoogleSearch";
                            };
    
                            return GoogleSearch;
                        })();
    
                        return Tool;
                    })();
    
                    v1alpha.GoogleSearchRetrieval = (function() {
    
                        /**
                         * Properties of a GoogleSearchRetrieval.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IGoogleSearchRetrieval
                         * @property {google.ai.generativelanguage.v1alpha.IDynamicRetrievalConfig|null} [dynamicRetrievalConfig] GoogleSearchRetrieval dynamicRetrievalConfig
                         */
    
                        /**
                         * Constructs a new GoogleSearchRetrieval.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a GoogleSearchRetrieval.
                         * @implements IGoogleSearchRetrieval
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IGoogleSearchRetrieval=} [properties] Properties to set
                         */
                        function GoogleSearchRetrieval(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GoogleSearchRetrieval dynamicRetrievalConfig.
                         * @member {google.ai.generativelanguage.v1alpha.IDynamicRetrievalConfig|null|undefined} dynamicRetrievalConfig
                         * @memberof google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval
                         * @instance
                         */
                        GoogleSearchRetrieval.prototype.dynamicRetrievalConfig = null;
    
                        /**
                         * Creates a new GoogleSearchRetrieval instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGoogleSearchRetrieval=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval} GoogleSearchRetrieval instance
                         */
                        GoogleSearchRetrieval.create = function create(properties) {
                            return new GoogleSearchRetrieval(properties);
                        };
    
                        /**
                         * Encodes the specified GoogleSearchRetrieval message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGoogleSearchRetrieval} message GoogleSearchRetrieval message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GoogleSearchRetrieval.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dynamicRetrievalConfig != null && Object.hasOwnProperty.call(message, "dynamicRetrievalConfig"))
                                $root.google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.encode(message.dynamicRetrievalConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GoogleSearchRetrieval message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGoogleSearchRetrieval} message GoogleSearchRetrieval message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GoogleSearchRetrieval.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GoogleSearchRetrieval message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval} GoogleSearchRetrieval
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GoogleSearchRetrieval.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.dynamicRetrievalConfig = $root.google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GoogleSearchRetrieval message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval} GoogleSearchRetrieval
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GoogleSearchRetrieval.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GoogleSearchRetrieval message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GoogleSearchRetrieval.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dynamicRetrievalConfig != null && message.hasOwnProperty("dynamicRetrievalConfig")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.verify(message.dynamicRetrievalConfig);
                                if (error)
                                    return "dynamicRetrievalConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GoogleSearchRetrieval message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval} GoogleSearchRetrieval
                         */
                        GoogleSearchRetrieval.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval();
                            if (object.dynamicRetrievalConfig != null) {
                                if (typeof object.dynamicRetrievalConfig !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval.dynamicRetrievalConfig: object expected");
                                message.dynamicRetrievalConfig = $root.google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.fromObject(object.dynamicRetrievalConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GoogleSearchRetrieval message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval} message GoogleSearchRetrieval
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GoogleSearchRetrieval.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.dynamicRetrievalConfig = null;
                            if (message.dynamicRetrievalConfig != null && message.hasOwnProperty("dynamicRetrievalConfig"))
                                object.dynamicRetrievalConfig = $root.google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.toObject(message.dynamicRetrievalConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this GoogleSearchRetrieval to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GoogleSearchRetrieval.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GoogleSearchRetrieval
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GoogleSearchRetrieval.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.GoogleSearchRetrieval";
                        };
    
                        return GoogleSearchRetrieval;
                    })();
    
                    v1alpha.DynamicRetrievalConfig = (function() {
    
                        /**
                         * Properties of a DynamicRetrievalConfig.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IDynamicRetrievalConfig
                         * @property {google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.Mode|null} [mode] DynamicRetrievalConfig mode
                         * @property {number|null} [dynamicThreshold] DynamicRetrievalConfig dynamicThreshold
                         */
    
                        /**
                         * Constructs a new DynamicRetrievalConfig.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a DynamicRetrievalConfig.
                         * @implements IDynamicRetrievalConfig
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IDynamicRetrievalConfig=} [properties] Properties to set
                         */
                        function DynamicRetrievalConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DynamicRetrievalConfig mode.
                         * @member {google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.Mode} mode
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @instance
                         */
                        DynamicRetrievalConfig.prototype.mode = 0;
    
                        /**
                         * DynamicRetrievalConfig dynamicThreshold.
                         * @member {number|null|undefined} dynamicThreshold
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @instance
                         */
                        DynamicRetrievalConfig.prototype.dynamicThreshold = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DynamicRetrievalConfig _dynamicThreshold.
                         * @member {"dynamicThreshold"|undefined} _dynamicThreshold
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @instance
                         */
                        Object.defineProperty(DynamicRetrievalConfig.prototype, "_dynamicThreshold", {
                            get: $util.oneOfGetter($oneOfFields = ["dynamicThreshold"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DynamicRetrievalConfig instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IDynamicRetrievalConfig=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig} DynamicRetrievalConfig instance
                         */
                        DynamicRetrievalConfig.create = function create(properties) {
                            return new DynamicRetrievalConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DynamicRetrievalConfig message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IDynamicRetrievalConfig} message DynamicRetrievalConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DynamicRetrievalConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.mode);
                            if (message.dynamicThreshold != null && Object.hasOwnProperty.call(message, "dynamicThreshold"))
                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.dynamicThreshold);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DynamicRetrievalConfig message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IDynamicRetrievalConfig} message DynamicRetrievalConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DynamicRetrievalConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DynamicRetrievalConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig} DynamicRetrievalConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DynamicRetrievalConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mode = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.dynamicThreshold = reader.float();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DynamicRetrievalConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig} DynamicRetrievalConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DynamicRetrievalConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DynamicRetrievalConfig message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DynamicRetrievalConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                switch (message.mode) {
                                default:
                                    return "mode: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.dynamicThreshold != null && message.hasOwnProperty("dynamicThreshold")) {
                                properties._dynamicThreshold = 1;
                                if (typeof message.dynamicThreshold !== "number")
                                    return "dynamicThreshold: number expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DynamicRetrievalConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig} DynamicRetrievalConfig
                         */
                        DynamicRetrievalConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig();
                            switch (object.mode) {
                            default:
                                if (typeof object.mode === "number") {
                                    message.mode = object.mode;
                                    break;
                                }
                                break;
                            case "MODE_UNSPECIFIED":
                            case 0:
                                message.mode = 0;
                                break;
                            case "MODE_DYNAMIC":
                            case 1:
                                message.mode = 1;
                                break;
                            }
                            if (object.dynamicThreshold != null)
                                message.dynamicThreshold = Number(object.dynamicThreshold);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DynamicRetrievalConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig} message DynamicRetrievalConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DynamicRetrievalConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.mode = options.enums === String ? "MODE_UNSPECIFIED" : 0;
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                object.mode = options.enums === String ? $root.google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.Mode[message.mode] === undefined ? message.mode : $root.google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.Mode[message.mode] : message.mode;
                            if (message.dynamicThreshold != null && message.hasOwnProperty("dynamicThreshold")) {
                                object.dynamicThreshold = options.json && !isFinite(message.dynamicThreshold) ? String(message.dynamicThreshold) : message.dynamicThreshold;
                                if (options.oneofs)
                                    object._dynamicThreshold = "dynamicThreshold";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DynamicRetrievalConfig to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DynamicRetrievalConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DynamicRetrievalConfig
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DynamicRetrievalConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig";
                        };
    
                        /**
                         * Mode enum.
                         * @name google.ai.generativelanguage.v1alpha.DynamicRetrievalConfig.Mode
                         * @enum {number}
                         * @property {number} MODE_UNSPECIFIED=0 MODE_UNSPECIFIED value
                         * @property {number} MODE_DYNAMIC=1 MODE_DYNAMIC value
                         */
                        DynamicRetrievalConfig.Mode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "MODE_DYNAMIC"] = 1;
                            return values;
                        })();
    
                        return DynamicRetrievalConfig;
                    })();
    
                    v1alpha.CodeExecution = (function() {
    
                        /**
                         * Properties of a CodeExecution.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ICodeExecution
                         */
    
                        /**
                         * Constructs a new CodeExecution.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a CodeExecution.
                         * @implements ICodeExecution
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ICodeExecution=} [properties] Properties to set
                         */
                        function CodeExecution(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new CodeExecution instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecution
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICodeExecution=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.CodeExecution} CodeExecution instance
                         */
                        CodeExecution.create = function create(properties) {
                            return new CodeExecution(properties);
                        };
    
                        /**
                         * Encodes the specified CodeExecution message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CodeExecution.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecution
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICodeExecution} message CodeExecution message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CodeExecution.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CodeExecution message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CodeExecution.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecution
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICodeExecution} message CodeExecution message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CodeExecution.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CodeExecution message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecution
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.CodeExecution} CodeExecution
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CodeExecution.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.CodeExecution();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CodeExecution message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecution
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.CodeExecution} CodeExecution
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CodeExecution.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CodeExecution message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecution
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CodeExecution.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a CodeExecution message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecution
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.CodeExecution} CodeExecution
                         */
                        CodeExecution.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.CodeExecution)
                                return object;
                            return new $root.google.ai.generativelanguage.v1alpha.CodeExecution();
                        };
    
                        /**
                         * Creates a plain object from a CodeExecution message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecution
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.CodeExecution} message CodeExecution
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CodeExecution.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this CodeExecution to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecution
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CodeExecution.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CodeExecution
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.CodeExecution
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CodeExecution.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.CodeExecution";
                        };
    
                        return CodeExecution;
                    })();
    
                    v1alpha.ToolConfig = (function() {
    
                        /**
                         * Properties of a ToolConfig.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IToolConfig
                         * @property {google.ai.generativelanguage.v1alpha.IFunctionCallingConfig|null} [functionCallingConfig] ToolConfig functionCallingConfig
                         */
    
                        /**
                         * Constructs a new ToolConfig.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a ToolConfig.
                         * @implements IToolConfig
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IToolConfig=} [properties] Properties to set
                         */
                        function ToolConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ToolConfig functionCallingConfig.
                         * @member {google.ai.generativelanguage.v1alpha.IFunctionCallingConfig|null|undefined} functionCallingConfig
                         * @memberof google.ai.generativelanguage.v1alpha.ToolConfig
                         * @instance
                         */
                        ToolConfig.prototype.functionCallingConfig = null;
    
                        /**
                         * Creates a new ToolConfig instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.ToolConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IToolConfig=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.ToolConfig} ToolConfig instance
                         */
                        ToolConfig.create = function create(properties) {
                            return new ToolConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ToolConfig message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ToolConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.ToolConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IToolConfig} message ToolConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ToolConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.functionCallingConfig != null && Object.hasOwnProperty.call(message, "functionCallingConfig"))
                                $root.google.ai.generativelanguage.v1alpha.FunctionCallingConfig.encode(message.functionCallingConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ToolConfig message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ToolConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ToolConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IToolConfig} message ToolConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ToolConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ToolConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.ToolConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.ToolConfig} ToolConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ToolConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.ToolConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.functionCallingConfig = $root.google.ai.generativelanguage.v1alpha.FunctionCallingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ToolConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ToolConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.ToolConfig} ToolConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ToolConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ToolConfig message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.ToolConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ToolConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.functionCallingConfig != null && message.hasOwnProperty("functionCallingConfig")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.FunctionCallingConfig.verify(message.functionCallingConfig);
                                if (error)
                                    return "functionCallingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ToolConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.ToolConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.ToolConfig} ToolConfig
                         */
                        ToolConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.ToolConfig)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.ToolConfig();
                            if (object.functionCallingConfig != null) {
                                if (typeof object.functionCallingConfig !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.ToolConfig.functionCallingConfig: object expected");
                                message.functionCallingConfig = $root.google.ai.generativelanguage.v1alpha.FunctionCallingConfig.fromObject(object.functionCallingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ToolConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.ToolConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ToolConfig} message ToolConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ToolConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.functionCallingConfig = null;
                            if (message.functionCallingConfig != null && message.hasOwnProperty("functionCallingConfig"))
                                object.functionCallingConfig = $root.google.ai.generativelanguage.v1alpha.FunctionCallingConfig.toObject(message.functionCallingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this ToolConfig to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.ToolConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ToolConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ToolConfig
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.ToolConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ToolConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.ToolConfig";
                        };
    
                        return ToolConfig;
                    })();
    
                    v1alpha.FunctionCallingConfig = (function() {
    
                        /**
                         * Properties of a FunctionCallingConfig.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IFunctionCallingConfig
                         * @property {google.ai.generativelanguage.v1alpha.FunctionCallingConfig.Mode|null} [mode] FunctionCallingConfig mode
                         * @property {Array.<string>|null} [allowedFunctionNames] FunctionCallingConfig allowedFunctionNames
                         */
    
                        /**
                         * Constructs a new FunctionCallingConfig.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a FunctionCallingConfig.
                         * @implements IFunctionCallingConfig
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionCallingConfig=} [properties] Properties to set
                         */
                        function FunctionCallingConfig(properties) {
                            this.allowedFunctionNames = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunctionCallingConfig mode.
                         * @member {google.ai.generativelanguage.v1alpha.FunctionCallingConfig.Mode} mode
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @instance
                         */
                        FunctionCallingConfig.prototype.mode = 0;
    
                        /**
                         * FunctionCallingConfig allowedFunctionNames.
                         * @member {Array.<string>} allowedFunctionNames
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @instance
                         */
                        FunctionCallingConfig.prototype.allowedFunctionNames = $util.emptyArray;
    
                        /**
                         * Creates a new FunctionCallingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionCallingConfig=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionCallingConfig} FunctionCallingConfig instance
                         */
                        FunctionCallingConfig.create = function create(properties) {
                            return new FunctionCallingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified FunctionCallingConfig message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.FunctionCallingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionCallingConfig} message FunctionCallingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunctionCallingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.mode);
                            if (message.allowedFunctionNames != null && message.allowedFunctionNames.length)
                                for (var i = 0; i < message.allowedFunctionNames.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.allowedFunctionNames[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunctionCallingConfig message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.FunctionCallingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionCallingConfig} message FunctionCallingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunctionCallingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunctionCallingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionCallingConfig} FunctionCallingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunctionCallingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.FunctionCallingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mode = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.allowedFunctionNames && message.allowedFunctionNames.length))
                                            message.allowedFunctionNames = [];
                                        message.allowedFunctionNames.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunctionCallingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionCallingConfig} FunctionCallingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunctionCallingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunctionCallingConfig message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunctionCallingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                switch (message.mode) {
                                default:
                                    return "mode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.allowedFunctionNames != null && message.hasOwnProperty("allowedFunctionNames")) {
                                if (!Array.isArray(message.allowedFunctionNames))
                                    return "allowedFunctionNames: array expected";
                                for (var i = 0; i < message.allowedFunctionNames.length; ++i)
                                    if (!$util.isString(message.allowedFunctionNames[i]))
                                        return "allowedFunctionNames: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunctionCallingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionCallingConfig} FunctionCallingConfig
                         */
                        FunctionCallingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.FunctionCallingConfig)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.FunctionCallingConfig();
                            switch (object.mode) {
                            default:
                                if (typeof object.mode === "number") {
                                    message.mode = object.mode;
                                    break;
                                }
                                break;
                            case "MODE_UNSPECIFIED":
                            case 0:
                                message.mode = 0;
                                break;
                            case "AUTO":
                            case 1:
                                message.mode = 1;
                                break;
                            case "ANY":
                            case 2:
                                message.mode = 2;
                                break;
                            case "NONE":
                            case 3:
                                message.mode = 3;
                                break;
                            }
                            if (object.allowedFunctionNames) {
                                if (!Array.isArray(object.allowedFunctionNames))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.FunctionCallingConfig.allowedFunctionNames: array expected");
                                message.allowedFunctionNames = [];
                                for (var i = 0; i < object.allowedFunctionNames.length; ++i)
                                    message.allowedFunctionNames[i] = String(object.allowedFunctionNames[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunctionCallingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.FunctionCallingConfig} message FunctionCallingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunctionCallingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.allowedFunctionNames = [];
                            if (options.defaults)
                                object.mode = options.enums === String ? "MODE_UNSPECIFIED" : 0;
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                object.mode = options.enums === String ? $root.google.ai.generativelanguage.v1alpha.FunctionCallingConfig.Mode[message.mode] === undefined ? message.mode : $root.google.ai.generativelanguage.v1alpha.FunctionCallingConfig.Mode[message.mode] : message.mode;
                            if (message.allowedFunctionNames && message.allowedFunctionNames.length) {
                                object.allowedFunctionNames = [];
                                for (var j = 0; j < message.allowedFunctionNames.length; ++j)
                                    object.allowedFunctionNames[j] = message.allowedFunctionNames[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunctionCallingConfig to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunctionCallingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunctionCallingConfig
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCallingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunctionCallingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.FunctionCallingConfig";
                        };
    
                        /**
                         * Mode enum.
                         * @name google.ai.generativelanguage.v1alpha.FunctionCallingConfig.Mode
                         * @enum {number}
                         * @property {number} MODE_UNSPECIFIED=0 MODE_UNSPECIFIED value
                         * @property {number} AUTO=1 AUTO value
                         * @property {number} ANY=2 ANY value
                         * @property {number} NONE=3 NONE value
                         */
                        FunctionCallingConfig.Mode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AUTO"] = 1;
                            values[valuesById[2] = "ANY"] = 2;
                            values[valuesById[3] = "NONE"] = 3;
                            return values;
                        })();
    
                        return FunctionCallingConfig;
                    })();
    
                    v1alpha.FunctionDeclaration = (function() {
    
                        /**
                         * Properties of a FunctionDeclaration.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IFunctionDeclaration
                         * @property {string|null} [name] FunctionDeclaration name
                         * @property {string|null} [description] FunctionDeclaration description
                         * @property {google.ai.generativelanguage.v1alpha.ISchema|null} [parameters] FunctionDeclaration parameters
                         * @property {google.ai.generativelanguage.v1alpha.ISchema|null} [response] FunctionDeclaration response
                         */
    
                        /**
                         * Constructs a new FunctionDeclaration.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a FunctionDeclaration.
                         * @implements IFunctionDeclaration
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionDeclaration=} [properties] Properties to set
                         */
                        function FunctionDeclaration(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunctionDeclaration name.
                         * @member {string} name
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @instance
                         */
                        FunctionDeclaration.prototype.name = "";
    
                        /**
                         * FunctionDeclaration description.
                         * @member {string} description
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @instance
                         */
                        FunctionDeclaration.prototype.description = "";
    
                        /**
                         * FunctionDeclaration parameters.
                         * @member {google.ai.generativelanguage.v1alpha.ISchema|null|undefined} parameters
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @instance
                         */
                        FunctionDeclaration.prototype.parameters = null;
    
                        /**
                         * FunctionDeclaration response.
                         * @member {google.ai.generativelanguage.v1alpha.ISchema|null|undefined} response
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @instance
                         */
                        FunctionDeclaration.prototype.response = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FunctionDeclaration _parameters.
                         * @member {"parameters"|undefined} _parameters
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @instance
                         */
                        Object.defineProperty(FunctionDeclaration.prototype, "_parameters", {
                            get: $util.oneOfGetter($oneOfFields = ["parameters"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * FunctionDeclaration _response.
                         * @member {"response"|undefined} _response
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @instance
                         */
                        Object.defineProperty(FunctionDeclaration.prototype, "_response", {
                            get: $util.oneOfGetter($oneOfFields = ["response"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FunctionDeclaration instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionDeclaration=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionDeclaration} FunctionDeclaration instance
                         */
                        FunctionDeclaration.create = function create(properties) {
                            return new FunctionDeclaration(properties);
                        };
    
                        /**
                         * Encodes the specified FunctionDeclaration message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.FunctionDeclaration.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionDeclaration} message FunctionDeclaration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunctionDeclaration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.parameters != null && Object.hasOwnProperty.call(message, "parameters"))
                                $root.google.ai.generativelanguage.v1alpha.Schema.encode(message.parameters, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                                $root.google.ai.generativelanguage.v1alpha.Schema.encode(message.response, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunctionDeclaration message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.FunctionDeclaration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionDeclaration} message FunctionDeclaration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunctionDeclaration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunctionDeclaration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionDeclaration} FunctionDeclaration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunctionDeclaration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.FunctionDeclaration();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.parameters = $root.google.ai.generativelanguage.v1alpha.Schema.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.response = $root.google.ai.generativelanguage.v1alpha.Schema.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunctionDeclaration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionDeclaration} FunctionDeclaration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunctionDeclaration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunctionDeclaration message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunctionDeclaration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.parameters != null && message.hasOwnProperty("parameters")) {
                                properties._parameters = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Schema.verify(message.parameters);
                                    if (error)
                                        return "parameters." + error;
                                }
                            }
                            if (message.response != null && message.hasOwnProperty("response")) {
                                properties._response = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Schema.verify(message.response);
                                    if (error)
                                        return "response." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunctionDeclaration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionDeclaration} FunctionDeclaration
                         */
                        FunctionDeclaration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.FunctionDeclaration)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.FunctionDeclaration();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.parameters != null) {
                                if (typeof object.parameters !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.FunctionDeclaration.parameters: object expected");
                                message.parameters = $root.google.ai.generativelanguage.v1alpha.Schema.fromObject(object.parameters);
                            }
                            if (object.response != null) {
                                if (typeof object.response !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.FunctionDeclaration.response: object expected");
                                message.response = $root.google.ai.generativelanguage.v1alpha.Schema.fromObject(object.response);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunctionDeclaration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.FunctionDeclaration} message FunctionDeclaration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunctionDeclaration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.parameters != null && message.hasOwnProperty("parameters")) {
                                object.parameters = $root.google.ai.generativelanguage.v1alpha.Schema.toObject(message.parameters, options);
                                if (options.oneofs)
                                    object._parameters = "parameters";
                            }
                            if (message.response != null && message.hasOwnProperty("response")) {
                                object.response = $root.google.ai.generativelanguage.v1alpha.Schema.toObject(message.response, options);
                                if (options.oneofs)
                                    object._response = "response";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunctionDeclaration to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunctionDeclaration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunctionDeclaration
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionDeclaration
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunctionDeclaration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.FunctionDeclaration";
                        };
    
                        return FunctionDeclaration;
                    })();
    
                    v1alpha.FunctionCall = (function() {
    
                        /**
                         * Properties of a FunctionCall.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IFunctionCall
                         * @property {string|null} [id] FunctionCall id
                         * @property {string|null} [name] FunctionCall name
                         * @property {google.protobuf.IStruct|null} [args] FunctionCall args
                         */
    
                        /**
                         * Constructs a new FunctionCall.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a FunctionCall.
                         * @implements IFunctionCall
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionCall=} [properties] Properties to set
                         */
                        function FunctionCall(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunctionCall id.
                         * @member {string} id
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @instance
                         */
                        FunctionCall.prototype.id = "";
    
                        /**
                         * FunctionCall name.
                         * @member {string} name
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @instance
                         */
                        FunctionCall.prototype.name = "";
    
                        /**
                         * FunctionCall args.
                         * @member {google.protobuf.IStruct|null|undefined} args
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @instance
                         */
                        FunctionCall.prototype.args = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FunctionCall _args.
                         * @member {"args"|undefined} _args
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @instance
                         */
                        Object.defineProperty(FunctionCall.prototype, "_args", {
                            get: $util.oneOfGetter($oneOfFields = ["args"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FunctionCall instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionCall=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionCall} FunctionCall instance
                         */
                        FunctionCall.create = function create(properties) {
                            return new FunctionCall(properties);
                        };
    
                        /**
                         * Encodes the specified FunctionCall message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.FunctionCall.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionCall} message FunctionCall message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunctionCall.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.args != null && Object.hasOwnProperty.call(message, "args"))
                                $root.google.protobuf.Struct.encode(message.args, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.id);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunctionCall message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.FunctionCall.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionCall} message FunctionCall message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunctionCall.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunctionCall message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionCall} FunctionCall
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunctionCall.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.FunctionCall();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.args = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunctionCall message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionCall} FunctionCall
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunctionCall.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunctionCall message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunctionCall.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.args != null && message.hasOwnProperty("args")) {
                                properties._args = 1;
                                {
                                    var error = $root.google.protobuf.Struct.verify(message.args);
                                    if (error)
                                        return "args." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunctionCall message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionCall} FunctionCall
                         */
                        FunctionCall.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.FunctionCall)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.FunctionCall();
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.args != null) {
                                if (typeof object.args !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.FunctionCall.args: object expected");
                                message.args = $root.google.protobuf.Struct.fromObject(object.args);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunctionCall message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.FunctionCall} message FunctionCall
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunctionCall.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.id = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.args != null && message.hasOwnProperty("args")) {
                                object.args = $root.google.protobuf.Struct.toObject(message.args, options);
                                if (options.oneofs)
                                    object._args = "args";
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            return object;
                        };
    
                        /**
                         * Converts this FunctionCall to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunctionCall.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunctionCall
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionCall
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunctionCall.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.FunctionCall";
                        };
    
                        return FunctionCall;
                    })();
    
                    v1alpha.FunctionResponse = (function() {
    
                        /**
                         * Properties of a FunctionResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IFunctionResponse
                         * @property {string|null} [id] FunctionResponse id
                         * @property {string|null} [name] FunctionResponse name
                         * @property {google.protobuf.IStruct|null} [response] FunctionResponse response
                         */
    
                        /**
                         * Constructs a new FunctionResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a FunctionResponse.
                         * @implements IFunctionResponse
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionResponse=} [properties] Properties to set
                         */
                        function FunctionResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunctionResponse id.
                         * @member {string} id
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @instance
                         */
                        FunctionResponse.prototype.id = "";
    
                        /**
                         * FunctionResponse name.
                         * @member {string} name
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @instance
                         */
                        FunctionResponse.prototype.name = "";
    
                        /**
                         * FunctionResponse response.
                         * @member {google.protobuf.IStruct|null|undefined} response
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @instance
                         */
                        FunctionResponse.prototype.response = null;
    
                        /**
                         * Creates a new FunctionResponse instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionResponse=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionResponse} FunctionResponse instance
                         */
                        FunctionResponse.create = function create(properties) {
                            return new FunctionResponse(properties);
                        };
    
                        /**
                         * Encodes the specified FunctionResponse message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.FunctionResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionResponse} message FunctionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunctionResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                                $root.google.protobuf.Struct.encode(message.response, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.id);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunctionResponse message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.FunctionResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFunctionResponse} message FunctionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunctionResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunctionResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionResponse} FunctionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunctionResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.FunctionResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.response = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunctionResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionResponse} FunctionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunctionResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunctionResponse message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunctionResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.response != null && message.hasOwnProperty("response")) {
                                var error = $root.google.protobuf.Struct.verify(message.response);
                                if (error)
                                    return "response." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunctionResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.FunctionResponse} FunctionResponse
                         */
                        FunctionResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.FunctionResponse)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.FunctionResponse();
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.response != null) {
                                if (typeof object.response !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.FunctionResponse.response: object expected");
                                message.response = $root.google.protobuf.Struct.fromObject(object.response);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunctionResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.FunctionResponse} message FunctionResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunctionResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.response = null;
                                object.id = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.response != null && message.hasOwnProperty("response"))
                                object.response = $root.google.protobuf.Struct.toObject(message.response, options);
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            return object;
                        };
    
                        /**
                         * Converts this FunctionResponse to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunctionResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunctionResponse
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.FunctionResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunctionResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.FunctionResponse";
                        };
    
                        return FunctionResponse;
                    })();
    
                    v1alpha.Schema = (function() {
    
                        /**
                         * Properties of a Schema.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ISchema
                         * @property {google.ai.generativelanguage.v1alpha.Type|null} [type] Schema type
                         * @property {string|null} [format] Schema format
                         * @property {string|null} [description] Schema description
                         * @property {boolean|null} [nullable] Schema nullable
                         * @property {Array.<string>|null} ["enum"] Schema enum
                         * @property {google.ai.generativelanguage.v1alpha.ISchema|null} [items] Schema items
                         * @property {number|Long|null} [maxItems] Schema maxItems
                         * @property {number|Long|null} [minItems] Schema minItems
                         * @property {Object.<string,google.ai.generativelanguage.v1alpha.ISchema>|null} [properties] Schema properties
                         * @property {Array.<string>|null} [required] Schema required
                         */
    
                        /**
                         * Constructs a new Schema.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a Schema.
                         * @implements ISchema
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ISchema=} [properties] Properties to set
                         */
                        function Schema(properties) {
                            this["enum"] = [];
                            this.properties = {};
                            this.required = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Schema type.
                         * @member {google.ai.generativelanguage.v1alpha.Type} type
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         */
                        Schema.prototype.type = 0;
    
                        /**
                         * Schema format.
                         * @member {string} format
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         */
                        Schema.prototype.format = "";
    
                        /**
                         * Schema description.
                         * @member {string} description
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         */
                        Schema.prototype.description = "";
    
                        /**
                         * Schema nullable.
                         * @member {boolean} nullable
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         */
                        Schema.prototype.nullable = false;
    
                        /**
                         * Schema enum.
                         * @member {Array.<string>} enum
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         */
                        Schema.prototype["enum"] = $util.emptyArray;
    
                        /**
                         * Schema items.
                         * @member {google.ai.generativelanguage.v1alpha.ISchema|null|undefined} items
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         */
                        Schema.prototype.items = null;
    
                        /**
                         * Schema maxItems.
                         * @member {number|Long} maxItems
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         */
                        Schema.prototype.maxItems = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Schema minItems.
                         * @member {number|Long} minItems
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         */
                        Schema.prototype.minItems = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Schema properties.
                         * @member {Object.<string,google.ai.generativelanguage.v1alpha.ISchema>} properties
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         */
                        Schema.prototype.properties = $util.emptyObject;
    
                        /**
                         * Schema required.
                         * @member {Array.<string>} required
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         */
                        Schema.prototype.required = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Schema _items.
                         * @member {"items"|undefined} _items
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         */
                        Object.defineProperty(Schema.prototype, "_items", {
                            get: $util.oneOfGetter($oneOfFields = ["items"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Schema instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISchema=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.Schema} Schema instance
                         */
                        Schema.create = function create(properties) {
                            return new Schema(properties);
                        };
    
                        /**
                         * Encodes the specified Schema message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Schema.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISchema} message Schema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Schema.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.format != null && Object.hasOwnProperty.call(message, "format"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.format);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.nullable != null && Object.hasOwnProperty.call(message, "nullable"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.nullable);
                            if (message["enum"] != null && message["enum"].length)
                                for (var i = 0; i < message["enum"].length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message["enum"][i]);
                            if (message.items != null && Object.hasOwnProperty.call(message, "items"))
                                $root.google.ai.generativelanguage.v1alpha.Schema.encode(message.items, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.ai.generativelanguage.v1alpha.Schema.encode(message.properties[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.required != null && message.required.length)
                                for (var i = 0; i < message.required.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.required[i]);
                            if (message.maxItems != null && Object.hasOwnProperty.call(message, "maxItems"))
                                writer.uint32(/* id 21, wireType 0 =*/168).int64(message.maxItems);
                            if (message.minItems != null && Object.hasOwnProperty.call(message, "minItems"))
                                writer.uint32(/* id 22, wireType 0 =*/176).int64(message.minItems);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Schema message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Schema.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISchema} message Schema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Schema.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Schema message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.Schema} Schema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Schema.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.Schema(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.format = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.nullable = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        if (!(message["enum"] && message["enum"].length))
                                            message["enum"] = [];
                                        message["enum"].push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        message.items = $root.google.ai.generativelanguage.v1alpha.Schema.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 21: {
                                        message.maxItems = reader.int64();
                                        break;
                                    }
                                case 22: {
                                        message.minItems = reader.int64();
                                        break;
                                    }
                                case 7: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.ai.generativelanguage.v1alpha.Schema.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                case 8: {
                                        if (!(message.required && message.required.length))
                                            message.required = [];
                                        message.required.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Schema message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.Schema} Schema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Schema.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Schema message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Schema.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.format != null && message.hasOwnProperty("format"))
                                if (!$util.isString(message.format))
                                    return "format: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                if (typeof message.nullable !== "boolean")
                                    return "nullable: boolean expected";
                            if (message["enum"] != null && message.hasOwnProperty("enum")) {
                                if (!Array.isArray(message["enum"]))
                                    return "enum: array expected";
                                for (var i = 0; i < message["enum"].length; ++i)
                                    if (!$util.isString(message["enum"][i]))
                                        return "enum: string[] expected";
                            }
                            if (message.items != null && message.hasOwnProperty("items")) {
                                properties._items = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Schema.verify(message.items);
                                    if (error)
                                        return "items." + error;
                                }
                            }
                            if (message.maxItems != null && message.hasOwnProperty("maxItems"))
                                if (!$util.isInteger(message.maxItems) && !(message.maxItems && $util.isInteger(message.maxItems.low) && $util.isInteger(message.maxItems.high)))
                                    return "maxItems: integer|Long expected";
                            if (message.minItems != null && message.hasOwnProperty("minItems"))
                                if (!$util.isInteger(message.minItems) && !(message.minItems && $util.isInteger(message.minItems.low) && $util.isInteger(message.minItems.high)))
                                    return "minItems: integer|Long expected";
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Schema.verify(message.properties[key[i]]);
                                    if (error)
                                        return "properties." + error;
                                }
                            }
                            if (message.required != null && message.hasOwnProperty("required")) {
                                if (!Array.isArray(message.required))
                                    return "required: array expected";
                                for (var i = 0; i < message.required.length; ++i)
                                    if (!$util.isString(message.required[i]))
                                        return "required: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Schema message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.Schema} Schema
                         */
                        Schema.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.Schema)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.Schema();
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "STRING":
                            case 1:
                                message.type = 1;
                                break;
                            case "NUMBER":
                            case 2:
                                message.type = 2;
                                break;
                            case "INTEGER":
                            case 3:
                                message.type = 3;
                                break;
                            case "BOOLEAN":
                            case 4:
                                message.type = 4;
                                break;
                            case "ARRAY":
                            case 5:
                                message.type = 5;
                                break;
                            case "OBJECT":
                            case 6:
                                message.type = 6;
                                break;
                            }
                            if (object.format != null)
                                message.format = String(object.format);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.nullable != null)
                                message.nullable = Boolean(object.nullable);
                            if (object["enum"]) {
                                if (!Array.isArray(object["enum"]))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Schema.enum: array expected");
                                message["enum"] = [];
                                for (var i = 0; i < object["enum"].length; ++i)
                                    message["enum"][i] = String(object["enum"][i]);
                            }
                            if (object.items != null) {
                                if (typeof object.items !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Schema.items: object expected");
                                message.items = $root.google.ai.generativelanguage.v1alpha.Schema.fromObject(object.items);
                            }
                            if (object.maxItems != null)
                                if ($util.Long)
                                    (message.maxItems = $util.Long.fromValue(object.maxItems)).unsigned = false;
                                else if (typeof object.maxItems === "string")
                                    message.maxItems = parseInt(object.maxItems, 10);
                                else if (typeof object.maxItems === "number")
                                    message.maxItems = object.maxItems;
                                else if (typeof object.maxItems === "object")
                                    message.maxItems = new $util.LongBits(object.maxItems.low >>> 0, object.maxItems.high >>> 0).toNumber();
                            if (object.minItems != null)
                                if ($util.Long)
                                    (message.minItems = $util.Long.fromValue(object.minItems)).unsigned = false;
                                else if (typeof object.minItems === "string")
                                    message.minItems = parseInt(object.minItems, 10);
                                else if (typeof object.minItems === "number")
                                    message.minItems = object.minItems;
                                else if (typeof object.minItems === "object")
                                    message.minItems = new $util.LongBits(object.minItems.low >>> 0, object.minItems.high >>> 0).toNumber();
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Schema.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i) {
                                    if (typeof object.properties[keys[i]] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.Schema.properties: object expected");
                                    message.properties[keys[i]] = $root.google.ai.generativelanguage.v1alpha.Schema.fromObject(object.properties[keys[i]]);
                                }
                            }
                            if (object.required) {
                                if (!Array.isArray(object.required))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Schema.required: array expected");
                                message.required = [];
                                for (var i = 0; i < object.required.length; ++i)
                                    message.required[i] = String(object.required[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Schema message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.Schema} message Schema
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Schema.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object["enum"] = [];
                                object.required = [];
                            }
                            if (options.objects || options.defaults)
                                object.properties = {};
                            if (options.defaults) {
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                object.format = "";
                                object.description = "";
                                object.nullable = false;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.maxItems = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.maxItems = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.minItems = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.minItems = options.longs === String ? "0" : 0;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.ai.generativelanguage.v1alpha.Type[message.type] === undefined ? message.type : $root.google.ai.generativelanguage.v1alpha.Type[message.type] : message.type;
                            if (message.format != null && message.hasOwnProperty("format"))
                                object.format = message.format;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.nullable != null && message.hasOwnProperty("nullable"))
                                object.nullable = message.nullable;
                            if (message["enum"] && message["enum"].length) {
                                object["enum"] = [];
                                for (var j = 0; j < message["enum"].length; ++j)
                                    object["enum"][j] = message["enum"][j];
                            }
                            if (message.items != null && message.hasOwnProperty("items")) {
                                object.items = $root.google.ai.generativelanguage.v1alpha.Schema.toObject(message.items, options);
                                if (options.oneofs)
                                    object._items = "items";
                            }
                            var keys2;
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = $root.google.ai.generativelanguage.v1alpha.Schema.toObject(message.properties[keys2[j]], options);
                            }
                            if (message.required && message.required.length) {
                                object.required = [];
                                for (var j = 0; j < message.required.length; ++j)
                                    object.required[j] = message.required[j];
                            }
                            if (message.maxItems != null && message.hasOwnProperty("maxItems"))
                                if (typeof message.maxItems === "number")
                                    object.maxItems = options.longs === String ? String(message.maxItems) : message.maxItems;
                                else
                                    object.maxItems = options.longs === String ? $util.Long.prototype.toString.call(message.maxItems) : options.longs === Number ? new $util.LongBits(message.maxItems.low >>> 0, message.maxItems.high >>> 0).toNumber() : message.maxItems;
                            if (message.minItems != null && message.hasOwnProperty("minItems"))
                                if (typeof message.minItems === "number")
                                    object.minItems = options.longs === String ? String(message.minItems) : message.minItems;
                                else
                                    object.minItems = options.longs === String ? $util.Long.prototype.toString.call(message.minItems) : options.longs === Number ? new $util.LongBits(message.minItems.low >>> 0, message.minItems.high >>> 0).toNumber() : message.minItems;
                            return object;
                        };
    
                        /**
                         * Converts this Schema to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Schema.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Schema
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.Schema
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Schema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.Schema";
                        };
    
                        return Schema;
                    })();
    
                    v1alpha.GroundingPassage = (function() {
    
                        /**
                         * Properties of a GroundingPassage.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IGroundingPassage
                         * @property {string|null} [id] GroundingPassage id
                         * @property {google.ai.generativelanguage.v1alpha.IContent|null} [content] GroundingPassage content
                         */
    
                        /**
                         * Constructs a new GroundingPassage.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a GroundingPassage.
                         * @implements IGroundingPassage
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IGroundingPassage=} [properties] Properties to set
                         */
                        function GroundingPassage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GroundingPassage id.
                         * @member {string} id
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @instance
                         */
                        GroundingPassage.prototype.id = "";
    
                        /**
                         * GroundingPassage content.
                         * @member {google.ai.generativelanguage.v1alpha.IContent|null|undefined} content
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @instance
                         */
                        GroundingPassage.prototype.content = null;
    
                        /**
                         * Creates a new GroundingPassage instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGroundingPassage=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.GroundingPassage} GroundingPassage instance
                         */
                        GroundingPassage.create = function create(properties) {
                            return new GroundingPassage(properties);
                        };
    
                        /**
                         * Encodes the specified GroundingPassage message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GroundingPassage.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGroundingPassage} message GroundingPassage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GroundingPassage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                $root.google.ai.generativelanguage.v1alpha.Content.encode(message.content, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GroundingPassage message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GroundingPassage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGroundingPassage} message GroundingPassage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GroundingPassage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GroundingPassage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.GroundingPassage} GroundingPassage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GroundingPassage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.GroundingPassage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.content = $root.google.ai.generativelanguage.v1alpha.Content.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GroundingPassage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.GroundingPassage} GroundingPassage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GroundingPassage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GroundingPassage message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GroundingPassage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.content != null && message.hasOwnProperty("content")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.Content.verify(message.content);
                                if (error)
                                    return "content." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GroundingPassage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.GroundingPassage} GroundingPassage
                         */
                        GroundingPassage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.GroundingPassage)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.GroundingPassage();
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.content != null) {
                                if (typeof object.content !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.GroundingPassage.content: object expected");
                                message.content = $root.google.ai.generativelanguage.v1alpha.Content.fromObject(object.content);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GroundingPassage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.GroundingPassage} message GroundingPassage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GroundingPassage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.id = "";
                                object.content = null;
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = $root.google.ai.generativelanguage.v1alpha.Content.toObject(message.content, options);
                            return object;
                        };
    
                        /**
                         * Converts this GroundingPassage to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GroundingPassage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GroundingPassage
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GroundingPassage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.GroundingPassage";
                        };
    
                        return GroundingPassage;
                    })();
    
                    v1alpha.GroundingPassages = (function() {
    
                        /**
                         * Properties of a GroundingPassages.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IGroundingPassages
                         * @property {Array.<google.ai.generativelanguage.v1alpha.IGroundingPassage>|null} [passages] GroundingPassages passages
                         */
    
                        /**
                         * Constructs a new GroundingPassages.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a GroundingPassages.
                         * @implements IGroundingPassages
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IGroundingPassages=} [properties] Properties to set
                         */
                        function GroundingPassages(properties) {
                            this.passages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GroundingPassages passages.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.IGroundingPassage>} passages
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassages
                         * @instance
                         */
                        GroundingPassages.prototype.passages = $util.emptyArray;
    
                        /**
                         * Creates a new GroundingPassages instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassages
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGroundingPassages=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.GroundingPassages} GroundingPassages instance
                         */
                        GroundingPassages.create = function create(properties) {
                            return new GroundingPassages(properties);
                        };
    
                        /**
                         * Encodes the specified GroundingPassages message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GroundingPassages.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassages
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGroundingPassages} message GroundingPassages message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GroundingPassages.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.passages != null && message.passages.length)
                                for (var i = 0; i < message.passages.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.GroundingPassage.encode(message.passages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GroundingPassages message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GroundingPassages.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassages
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGroundingPassages} message GroundingPassages message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GroundingPassages.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GroundingPassages message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassages
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.GroundingPassages} GroundingPassages
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GroundingPassages.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.GroundingPassages();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.passages && message.passages.length))
                                            message.passages = [];
                                        message.passages.push($root.google.ai.generativelanguage.v1alpha.GroundingPassage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GroundingPassages message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassages
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.GroundingPassages} GroundingPassages
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GroundingPassages.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GroundingPassages message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassages
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GroundingPassages.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.passages != null && message.hasOwnProperty("passages")) {
                                if (!Array.isArray(message.passages))
                                    return "passages: array expected";
                                for (var i = 0; i < message.passages.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.GroundingPassage.verify(message.passages[i]);
                                    if (error)
                                        return "passages." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GroundingPassages message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassages
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.GroundingPassages} GroundingPassages
                         */
                        GroundingPassages.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.GroundingPassages)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.GroundingPassages();
                            if (object.passages) {
                                if (!Array.isArray(object.passages))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.GroundingPassages.passages: array expected");
                                message.passages = [];
                                for (var i = 0; i < object.passages.length; ++i) {
                                    if (typeof object.passages[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.GroundingPassages.passages: object expected");
                                    message.passages[i] = $root.google.ai.generativelanguage.v1alpha.GroundingPassage.fromObject(object.passages[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GroundingPassages message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassages
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.GroundingPassages} message GroundingPassages
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GroundingPassages.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.passages = [];
                            if (message.passages && message.passages.length) {
                                object.passages = [];
                                for (var j = 0; j < message.passages.length; ++j)
                                    object.passages[j] = $root.google.ai.generativelanguage.v1alpha.GroundingPassage.toObject(message.passages[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GroundingPassages to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassages
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GroundingPassages.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GroundingPassages
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.GroundingPassages
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GroundingPassages.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.GroundingPassages";
                        };
    
                        return GroundingPassages;
                    })();
    
                    v1alpha.CitationMetadata = (function() {
    
                        /**
                         * Properties of a CitationMetadata.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ICitationMetadata
                         * @property {Array.<google.ai.generativelanguage.v1alpha.ICitationSource>|null} [citationSources] CitationMetadata citationSources
                         */
    
                        /**
                         * Constructs a new CitationMetadata.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a CitationMetadata.
                         * @implements ICitationMetadata
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ICitationMetadata=} [properties] Properties to set
                         */
                        function CitationMetadata(properties) {
                            this.citationSources = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CitationMetadata citationSources.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.ICitationSource>} citationSources
                         * @memberof google.ai.generativelanguage.v1alpha.CitationMetadata
                         * @instance
                         */
                        CitationMetadata.prototype.citationSources = $util.emptyArray;
    
                        /**
                         * Creates a new CitationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.CitationMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICitationMetadata=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.CitationMetadata} CitationMetadata instance
                         */
                        CitationMetadata.create = function create(properties) {
                            return new CitationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified CitationMetadata message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CitationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.CitationMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICitationMetadata} message CitationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CitationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.citationSources != null && message.citationSources.length)
                                for (var i = 0; i < message.citationSources.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.CitationSource.encode(message.citationSources[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CitationMetadata message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CitationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CitationMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICitationMetadata} message CitationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CitationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CitationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.CitationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.CitationMetadata} CitationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CitationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.CitationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.citationSources && message.citationSources.length))
                                            message.citationSources = [];
                                        message.citationSources.push($root.google.ai.generativelanguage.v1alpha.CitationSource.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CitationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CitationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.CitationMetadata} CitationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CitationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CitationMetadata message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.CitationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CitationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.citationSources != null && message.hasOwnProperty("citationSources")) {
                                if (!Array.isArray(message.citationSources))
                                    return "citationSources: array expected";
                                for (var i = 0; i < message.citationSources.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.CitationSource.verify(message.citationSources[i]);
                                    if (error)
                                        return "citationSources." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CitationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.CitationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.CitationMetadata} CitationMetadata
                         */
                        CitationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.CitationMetadata)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.CitationMetadata();
                            if (object.citationSources) {
                                if (!Array.isArray(object.citationSources))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CitationMetadata.citationSources: array expected");
                                message.citationSources = [];
                                for (var i = 0; i < object.citationSources.length; ++i) {
                                    if (typeof object.citationSources[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.CitationMetadata.citationSources: object expected");
                                    message.citationSources[i] = $root.google.ai.generativelanguage.v1alpha.CitationSource.fromObject(object.citationSources[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CitationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.CitationMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.CitationMetadata} message CitationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CitationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.citationSources = [];
                            if (message.citationSources && message.citationSources.length) {
                                object.citationSources = [];
                                for (var j = 0; j < message.citationSources.length; ++j)
                                    object.citationSources[j] = $root.google.ai.generativelanguage.v1alpha.CitationSource.toObject(message.citationSources[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CitationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.CitationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CitationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CitationMetadata
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.CitationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CitationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.CitationMetadata";
                        };
    
                        return CitationMetadata;
                    })();
    
                    v1alpha.CitationSource = (function() {
    
                        /**
                         * Properties of a CitationSource.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ICitationSource
                         * @property {number|null} [startIndex] CitationSource startIndex
                         * @property {number|null} [endIndex] CitationSource endIndex
                         * @property {string|null} [uri] CitationSource uri
                         * @property {string|null} [license] CitationSource license
                         */
    
                        /**
                         * Constructs a new CitationSource.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a CitationSource.
                         * @implements ICitationSource
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ICitationSource=} [properties] Properties to set
                         */
                        function CitationSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CitationSource startIndex.
                         * @member {number|null|undefined} startIndex
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @instance
                         */
                        CitationSource.prototype.startIndex = null;
    
                        /**
                         * CitationSource endIndex.
                         * @member {number|null|undefined} endIndex
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @instance
                         */
                        CitationSource.prototype.endIndex = null;
    
                        /**
                         * CitationSource uri.
                         * @member {string|null|undefined} uri
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @instance
                         */
                        CitationSource.prototype.uri = null;
    
                        /**
                         * CitationSource license.
                         * @member {string|null|undefined} license
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @instance
                         */
                        CitationSource.prototype.license = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CitationSource _startIndex.
                         * @member {"startIndex"|undefined} _startIndex
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @instance
                         */
                        Object.defineProperty(CitationSource.prototype, "_startIndex", {
                            get: $util.oneOfGetter($oneOfFields = ["startIndex"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CitationSource _endIndex.
                         * @member {"endIndex"|undefined} _endIndex
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @instance
                         */
                        Object.defineProperty(CitationSource.prototype, "_endIndex", {
                            get: $util.oneOfGetter($oneOfFields = ["endIndex"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CitationSource _uri.
                         * @member {"uri"|undefined} _uri
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @instance
                         */
                        Object.defineProperty(CitationSource.prototype, "_uri", {
                            get: $util.oneOfGetter($oneOfFields = ["uri"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CitationSource _license.
                         * @member {"license"|undefined} _license
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @instance
                         */
                        Object.defineProperty(CitationSource.prototype, "_license", {
                            get: $util.oneOfGetter($oneOfFields = ["license"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CitationSource instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICitationSource=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.CitationSource} CitationSource instance
                         */
                        CitationSource.create = function create(properties) {
                            return new CitationSource(properties);
                        };
    
                        /**
                         * Encodes the specified CitationSource message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CitationSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICitationSource} message CitationSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CitationSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startIndex != null && Object.hasOwnProperty.call(message, "startIndex"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.startIndex);
                            if (message.endIndex != null && Object.hasOwnProperty.call(message, "endIndex"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.endIndex);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                            if (message.license != null && Object.hasOwnProperty.call(message, "license"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.license);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CitationSource message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CitationSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICitationSource} message CitationSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CitationSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CitationSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.CitationSource} CitationSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CitationSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.CitationSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startIndex = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.endIndex = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.license = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CitationSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.CitationSource} CitationSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CitationSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CitationSource message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CitationSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.startIndex != null && message.hasOwnProperty("startIndex")) {
                                properties._startIndex = 1;
                                if (!$util.isInteger(message.startIndex))
                                    return "startIndex: integer expected";
                            }
                            if (message.endIndex != null && message.hasOwnProperty("endIndex")) {
                                properties._endIndex = 1;
                                if (!$util.isInteger(message.endIndex))
                                    return "endIndex: integer expected";
                            }
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                properties._uri = 1;
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            }
                            if (message.license != null && message.hasOwnProperty("license")) {
                                properties._license = 1;
                                if (!$util.isString(message.license))
                                    return "license: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CitationSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.CitationSource} CitationSource
                         */
                        CitationSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.CitationSource)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.CitationSource();
                            if (object.startIndex != null)
                                message.startIndex = object.startIndex | 0;
                            if (object.endIndex != null)
                                message.endIndex = object.endIndex | 0;
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.license != null)
                                message.license = String(object.license);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CitationSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.CitationSource} message CitationSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CitationSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.startIndex != null && message.hasOwnProperty("startIndex")) {
                                object.startIndex = message.startIndex;
                                if (options.oneofs)
                                    object._startIndex = "startIndex";
                            }
                            if (message.endIndex != null && message.hasOwnProperty("endIndex")) {
                                object.endIndex = message.endIndex;
                                if (options.oneofs)
                                    object._endIndex = "endIndex";
                            }
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                object.uri = message.uri;
                                if (options.oneofs)
                                    object._uri = "uri";
                            }
                            if (message.license != null && message.hasOwnProperty("license")) {
                                object.license = message.license;
                                if (options.oneofs)
                                    object._license = "license";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CitationSource to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CitationSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CitationSource
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.CitationSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CitationSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.CitationSource";
                        };
    
                        return CitationSource;
                    })();
    
                    v1alpha.DiscussService = (function() {
    
                        /**
                         * Constructs a new DiscussService service.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a DiscussService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DiscussService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DiscussService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DiscussService;
    
                        /**
                         * Creates new DiscussService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.DiscussService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DiscussService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DiscussService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.DiscussService|generateMessage}.
                         * @memberof google.ai.generativelanguage.v1alpha.DiscussService
                         * @typedef GenerateMessageCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.GenerateMessageResponse} [response] GenerateMessageResponse
                         */
    
                        /**
                         * Calls GenerateMessage.
                         * @function generateMessage
                         * @memberof google.ai.generativelanguage.v1alpha.DiscussService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateMessageRequest} request GenerateMessageRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.DiscussService.GenerateMessageCallback} callback Node-style callback called with the error, if any, and GenerateMessageResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DiscussService.prototype.generateMessage = function generateMessage(request, callback) {
                            return this.rpcCall(generateMessage, $root.google.ai.generativelanguage.v1alpha.GenerateMessageRequest, $root.google.ai.generativelanguage.v1alpha.GenerateMessageResponse, request, callback);
                        }, "name", { value: "GenerateMessage" });
    
                        /**
                         * Calls GenerateMessage.
                         * @function generateMessage
                         * @memberof google.ai.generativelanguage.v1alpha.DiscussService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateMessageRequest} request GenerateMessageRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.GenerateMessageResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.DiscussService|countMessageTokens}.
                         * @memberof google.ai.generativelanguage.v1alpha.DiscussService
                         * @typedef CountMessageTokensCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.CountMessageTokensResponse} [response] CountMessageTokensResponse
                         */
    
                        /**
                         * Calls CountMessageTokens.
                         * @function countMessageTokens
                         * @memberof google.ai.generativelanguage.v1alpha.DiscussService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.ICountMessageTokensRequest} request CountMessageTokensRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.DiscussService.CountMessageTokensCallback} callback Node-style callback called with the error, if any, and CountMessageTokensResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DiscussService.prototype.countMessageTokens = function countMessageTokens(request, callback) {
                            return this.rpcCall(countMessageTokens, $root.google.ai.generativelanguage.v1alpha.CountMessageTokensRequest, $root.google.ai.generativelanguage.v1alpha.CountMessageTokensResponse, request, callback);
                        }, "name", { value: "CountMessageTokens" });
    
                        /**
                         * Calls CountMessageTokens.
                         * @function countMessageTokens
                         * @memberof google.ai.generativelanguage.v1alpha.DiscussService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.ICountMessageTokensRequest} request CountMessageTokensRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.CountMessageTokensResponse>} Promise
                         * @variation 2
                         */
    
                        return DiscussService;
                    })();
    
                    v1alpha.GenerateMessageRequest = (function() {
    
                        /**
                         * Properties of a GenerateMessageRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IGenerateMessageRequest
                         * @property {string|null} [model] GenerateMessageRequest model
                         * @property {google.ai.generativelanguage.v1alpha.IMessagePrompt|null} [prompt] GenerateMessageRequest prompt
                         * @property {number|null} [temperature] GenerateMessageRequest temperature
                         * @property {number|null} [candidateCount] GenerateMessageRequest candidateCount
                         * @property {number|null} [topP] GenerateMessageRequest topP
                         * @property {number|null} [topK] GenerateMessageRequest topK
                         */
    
                        /**
                         * Constructs a new GenerateMessageRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a GenerateMessageRequest.
                         * @implements IGenerateMessageRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateMessageRequest=} [properties] Properties to set
                         */
                        function GenerateMessageRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateMessageRequest model.
                         * @member {string} model
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @instance
                         */
                        GenerateMessageRequest.prototype.model = "";
    
                        /**
                         * GenerateMessageRequest prompt.
                         * @member {google.ai.generativelanguage.v1alpha.IMessagePrompt|null|undefined} prompt
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @instance
                         */
                        GenerateMessageRequest.prototype.prompt = null;
    
                        /**
                         * GenerateMessageRequest temperature.
                         * @member {number|null|undefined} temperature
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @instance
                         */
                        GenerateMessageRequest.prototype.temperature = null;
    
                        /**
                         * GenerateMessageRequest candidateCount.
                         * @member {number|null|undefined} candidateCount
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @instance
                         */
                        GenerateMessageRequest.prototype.candidateCount = null;
    
                        /**
                         * GenerateMessageRequest topP.
                         * @member {number|null|undefined} topP
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @instance
                         */
                        GenerateMessageRequest.prototype.topP = null;
    
                        /**
                         * GenerateMessageRequest topK.
                         * @member {number|null|undefined} topK
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @instance
                         */
                        GenerateMessageRequest.prototype.topK = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GenerateMessageRequest _temperature.
                         * @member {"temperature"|undefined} _temperature
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @instance
                         */
                        Object.defineProperty(GenerateMessageRequest.prototype, "_temperature", {
                            get: $util.oneOfGetter($oneOfFields = ["temperature"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerateMessageRequest _candidateCount.
                         * @member {"candidateCount"|undefined} _candidateCount
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @instance
                         */
                        Object.defineProperty(GenerateMessageRequest.prototype, "_candidateCount", {
                            get: $util.oneOfGetter($oneOfFields = ["candidateCount"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerateMessageRequest _topP.
                         * @member {"topP"|undefined} _topP
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @instance
                         */
                        Object.defineProperty(GenerateMessageRequest.prototype, "_topP", {
                            get: $util.oneOfGetter($oneOfFields = ["topP"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerateMessageRequest _topK.
                         * @member {"topK"|undefined} _topK
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @instance
                         */
                        Object.defineProperty(GenerateMessageRequest.prototype, "_topK", {
                            get: $util.oneOfGetter($oneOfFields = ["topK"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GenerateMessageRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateMessageRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.GenerateMessageRequest} GenerateMessageRequest instance
                         */
                        GenerateMessageRequest.create = function create(properties) {
                            return new GenerateMessageRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateMessageRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GenerateMessageRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateMessageRequest} message GenerateMessageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateMessageRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.model != null && Object.hasOwnProperty.call(message, "model"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.model);
                            if (message.prompt != null && Object.hasOwnProperty.call(message, "prompt"))
                                $root.google.ai.generativelanguage.v1alpha.MessagePrompt.encode(message.prompt, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.temperature != null && Object.hasOwnProperty.call(message, "temperature"))
                                writer.uint32(/* id 3, wireType 5 =*/29).float(message.temperature);
                            if (message.candidateCount != null && Object.hasOwnProperty.call(message, "candidateCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.candidateCount);
                            if (message.topP != null && Object.hasOwnProperty.call(message, "topP"))
                                writer.uint32(/* id 5, wireType 5 =*/45).float(message.topP);
                            if (message.topK != null && Object.hasOwnProperty.call(message, "topK"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.topK);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateMessageRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GenerateMessageRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateMessageRequest} message GenerateMessageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateMessageRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateMessageRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.GenerateMessageRequest} GenerateMessageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateMessageRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.GenerateMessageRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.model = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.prompt = $root.google.ai.generativelanguage.v1alpha.MessagePrompt.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.temperature = reader.float();
                                        break;
                                    }
                                case 4: {
                                        message.candidateCount = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.topP = reader.float();
                                        break;
                                    }
                                case 6: {
                                        message.topK = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateMessageRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.GenerateMessageRequest} GenerateMessageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateMessageRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateMessageRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateMessageRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.model != null && message.hasOwnProperty("model"))
                                if (!$util.isString(message.model))
                                    return "model: string expected";
                            if (message.prompt != null && message.hasOwnProperty("prompt")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.MessagePrompt.verify(message.prompt);
                                if (error)
                                    return "prompt." + error;
                            }
                            if (message.temperature != null && message.hasOwnProperty("temperature")) {
                                properties._temperature = 1;
                                if (typeof message.temperature !== "number")
                                    return "temperature: number expected";
                            }
                            if (message.candidateCount != null && message.hasOwnProperty("candidateCount")) {
                                properties._candidateCount = 1;
                                if (!$util.isInteger(message.candidateCount))
                                    return "candidateCount: integer expected";
                            }
                            if (message.topP != null && message.hasOwnProperty("topP")) {
                                properties._topP = 1;
                                if (typeof message.topP !== "number")
                                    return "topP: number expected";
                            }
                            if (message.topK != null && message.hasOwnProperty("topK")) {
                                properties._topK = 1;
                                if (!$util.isInteger(message.topK))
                                    return "topK: integer expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenerateMessageRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.GenerateMessageRequest} GenerateMessageRequest
                         */
                        GenerateMessageRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.GenerateMessageRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.GenerateMessageRequest();
                            if (object.model != null)
                                message.model = String(object.model);
                            if (object.prompt != null) {
                                if (typeof object.prompt !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.GenerateMessageRequest.prompt: object expected");
                                message.prompt = $root.google.ai.generativelanguage.v1alpha.MessagePrompt.fromObject(object.prompt);
                            }
                            if (object.temperature != null)
                                message.temperature = Number(object.temperature);
                            if (object.candidateCount != null)
                                message.candidateCount = object.candidateCount | 0;
                            if (object.topP != null)
                                message.topP = Number(object.topP);
                            if (object.topK != null)
                                message.topK = object.topK | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateMessageRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.GenerateMessageRequest} message GenerateMessageRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateMessageRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.model = "";
                                object.prompt = null;
                            }
                            if (message.model != null && message.hasOwnProperty("model"))
                                object.model = message.model;
                            if (message.prompt != null && message.hasOwnProperty("prompt"))
                                object.prompt = $root.google.ai.generativelanguage.v1alpha.MessagePrompt.toObject(message.prompt, options);
                            if (message.temperature != null && message.hasOwnProperty("temperature")) {
                                object.temperature = options.json && !isFinite(message.temperature) ? String(message.temperature) : message.temperature;
                                if (options.oneofs)
                                    object._temperature = "temperature";
                            }
                            if (message.candidateCount != null && message.hasOwnProperty("candidateCount")) {
                                object.candidateCount = message.candidateCount;
                                if (options.oneofs)
                                    object._candidateCount = "candidateCount";
                            }
                            if (message.topP != null && message.hasOwnProperty("topP")) {
                                object.topP = options.json && !isFinite(message.topP) ? String(message.topP) : message.topP;
                                if (options.oneofs)
                                    object._topP = "topP";
                            }
                            if (message.topK != null && message.hasOwnProperty("topK")) {
                                object.topK = message.topK;
                                if (options.oneofs)
                                    object._topK = "topK";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GenerateMessageRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateMessageRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateMessageRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateMessageRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.GenerateMessageRequest";
                        };
    
                        return GenerateMessageRequest;
                    })();
    
                    v1alpha.GenerateMessageResponse = (function() {
    
                        /**
                         * Properties of a GenerateMessageResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IGenerateMessageResponse
                         * @property {Array.<google.ai.generativelanguage.v1alpha.IMessage>|null} [candidates] GenerateMessageResponse candidates
                         * @property {Array.<google.ai.generativelanguage.v1alpha.IMessage>|null} [messages] GenerateMessageResponse messages
                         * @property {Array.<google.ai.generativelanguage.v1alpha.IContentFilter>|null} [filters] GenerateMessageResponse filters
                         */
    
                        /**
                         * Constructs a new GenerateMessageResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a GenerateMessageResponse.
                         * @implements IGenerateMessageResponse
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateMessageResponse=} [properties] Properties to set
                         */
                        function GenerateMessageResponse(properties) {
                            this.candidates = [];
                            this.messages = [];
                            this.filters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateMessageResponse candidates.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.IMessage>} candidates
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @instance
                         */
                        GenerateMessageResponse.prototype.candidates = $util.emptyArray;
    
                        /**
                         * GenerateMessageResponse messages.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.IMessage>} messages
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @instance
                         */
                        GenerateMessageResponse.prototype.messages = $util.emptyArray;
    
                        /**
                         * GenerateMessageResponse filters.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.IContentFilter>} filters
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @instance
                         */
                        GenerateMessageResponse.prototype.filters = $util.emptyArray;
    
                        /**
                         * Creates a new GenerateMessageResponse instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateMessageResponse=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.GenerateMessageResponse} GenerateMessageResponse instance
                         */
                        GenerateMessageResponse.create = function create(properties) {
                            return new GenerateMessageResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateMessageResponse message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GenerateMessageResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateMessageResponse} message GenerateMessageResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateMessageResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.candidates != null && message.candidates.length)
                                for (var i = 0; i < message.candidates.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.Message.encode(message.candidates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.messages != null && message.messages.length)
                                for (var i = 0; i < message.messages.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.Message.encode(message.messages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.filters != null && message.filters.length)
                                for (var i = 0; i < message.filters.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.ContentFilter.encode(message.filters[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateMessageResponse message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GenerateMessageResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateMessageResponse} message GenerateMessageResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateMessageResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateMessageResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.GenerateMessageResponse} GenerateMessageResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateMessageResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.GenerateMessageResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.candidates && message.candidates.length))
                                            message.candidates = [];
                                        message.candidates.push($root.google.ai.generativelanguage.v1alpha.Message.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.messages && message.messages.length))
                                            message.messages = [];
                                        message.messages.push($root.google.ai.generativelanguage.v1alpha.Message.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.filters && message.filters.length))
                                            message.filters = [];
                                        message.filters.push($root.google.ai.generativelanguage.v1alpha.ContentFilter.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateMessageResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.GenerateMessageResponse} GenerateMessageResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateMessageResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateMessageResponse message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateMessageResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.candidates != null && message.hasOwnProperty("candidates")) {
                                if (!Array.isArray(message.candidates))
                                    return "candidates: array expected";
                                for (var i = 0; i < message.candidates.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Message.verify(message.candidates[i]);
                                    if (error)
                                        return "candidates." + error;
                                }
                            }
                            if (message.messages != null && message.hasOwnProperty("messages")) {
                                if (!Array.isArray(message.messages))
                                    return "messages: array expected";
                                for (var i = 0; i < message.messages.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Message.verify(message.messages[i]);
                                    if (error)
                                        return "messages." + error;
                                }
                            }
                            if (message.filters != null && message.hasOwnProperty("filters")) {
                                if (!Array.isArray(message.filters))
                                    return "filters: array expected";
                                for (var i = 0; i < message.filters.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.ContentFilter.verify(message.filters[i]);
                                    if (error)
                                        return "filters." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenerateMessageResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.GenerateMessageResponse} GenerateMessageResponse
                         */
                        GenerateMessageResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.GenerateMessageResponse)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.GenerateMessageResponse();
                            if (object.candidates) {
                                if (!Array.isArray(object.candidates))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.GenerateMessageResponse.candidates: array expected");
                                message.candidates = [];
                                for (var i = 0; i < object.candidates.length; ++i) {
                                    if (typeof object.candidates[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.GenerateMessageResponse.candidates: object expected");
                                    message.candidates[i] = $root.google.ai.generativelanguage.v1alpha.Message.fromObject(object.candidates[i]);
                                }
                            }
                            if (object.messages) {
                                if (!Array.isArray(object.messages))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.GenerateMessageResponse.messages: array expected");
                                message.messages = [];
                                for (var i = 0; i < object.messages.length; ++i) {
                                    if (typeof object.messages[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.GenerateMessageResponse.messages: object expected");
                                    message.messages[i] = $root.google.ai.generativelanguage.v1alpha.Message.fromObject(object.messages[i]);
                                }
                            }
                            if (object.filters) {
                                if (!Array.isArray(object.filters))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.GenerateMessageResponse.filters: array expected");
                                message.filters = [];
                                for (var i = 0; i < object.filters.length; ++i) {
                                    if (typeof object.filters[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.GenerateMessageResponse.filters: object expected");
                                    message.filters[i] = $root.google.ai.generativelanguage.v1alpha.ContentFilter.fromObject(object.filters[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateMessageResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.GenerateMessageResponse} message GenerateMessageResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateMessageResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.candidates = [];
                                object.messages = [];
                                object.filters = [];
                            }
                            if (message.candidates && message.candidates.length) {
                                object.candidates = [];
                                for (var j = 0; j < message.candidates.length; ++j)
                                    object.candidates[j] = $root.google.ai.generativelanguage.v1alpha.Message.toObject(message.candidates[j], options);
                            }
                            if (message.messages && message.messages.length) {
                                object.messages = [];
                                for (var j = 0; j < message.messages.length; ++j)
                                    object.messages[j] = $root.google.ai.generativelanguage.v1alpha.Message.toObject(message.messages[j], options);
                            }
                            if (message.filters && message.filters.length) {
                                object.filters = [];
                                for (var j = 0; j < message.filters.length; ++j)
                                    object.filters[j] = $root.google.ai.generativelanguage.v1alpha.ContentFilter.toObject(message.filters[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GenerateMessageResponse to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateMessageResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateMessageResponse
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateMessageResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateMessageResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.GenerateMessageResponse";
                        };
    
                        return GenerateMessageResponse;
                    })();
    
                    v1alpha.Message = (function() {
    
                        /**
                         * Properties of a Message.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IMessage
                         * @property {string|null} [author] Message author
                         * @property {string|null} [content] Message content
                         * @property {google.ai.generativelanguage.v1alpha.ICitationMetadata|null} [citationMetadata] Message citationMetadata
                         */
    
                        /**
                         * Constructs a new Message.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a Message.
                         * @implements IMessage
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IMessage=} [properties] Properties to set
                         */
                        function Message(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Message author.
                         * @member {string} author
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @instance
                         */
                        Message.prototype.author = "";
    
                        /**
                         * Message content.
                         * @member {string} content
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @instance
                         */
                        Message.prototype.content = "";
    
                        /**
                         * Message citationMetadata.
                         * @member {google.ai.generativelanguage.v1alpha.ICitationMetadata|null|undefined} citationMetadata
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @instance
                         */
                        Message.prototype.citationMetadata = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Message _citationMetadata.
                         * @member {"citationMetadata"|undefined} _citationMetadata
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @instance
                         */
                        Object.defineProperty(Message.prototype, "_citationMetadata", {
                            get: $util.oneOfGetter($oneOfFields = ["citationMetadata"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Message instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IMessage=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.Message} Message instance
                         */
                        Message.create = function create(properties) {
                            return new Message(properties);
                        };
    
                        /**
                         * Encodes the specified Message message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Message.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IMessage} message Message message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Message.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.author != null && Object.hasOwnProperty.call(message, "author"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.author);
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.content);
                            if (message.citationMetadata != null && Object.hasOwnProperty.call(message, "citationMetadata"))
                                $root.google.ai.generativelanguage.v1alpha.CitationMetadata.encode(message.citationMetadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Message message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Message.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IMessage} message Message message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Message.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Message message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.Message} Message
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Message.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.Message();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.author = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.content = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.citationMetadata = $root.google.ai.generativelanguage.v1alpha.CitationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Message message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.Message} Message
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Message.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Message message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Message.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.author != null && message.hasOwnProperty("author"))
                                if (!$util.isString(message.author))
                                    return "author: string expected";
                            if (message.content != null && message.hasOwnProperty("content"))
                                if (!$util.isString(message.content))
                                    return "content: string expected";
                            if (message.citationMetadata != null && message.hasOwnProperty("citationMetadata")) {
                                properties._citationMetadata = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.CitationMetadata.verify(message.citationMetadata);
                                    if (error)
                                        return "citationMetadata." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Message message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.Message} Message
                         */
                        Message.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.Message)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.Message();
                            if (object.author != null)
                                message.author = String(object.author);
                            if (object.content != null)
                                message.content = String(object.content);
                            if (object.citationMetadata != null) {
                                if (typeof object.citationMetadata !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Message.citationMetadata: object expected");
                                message.citationMetadata = $root.google.ai.generativelanguage.v1alpha.CitationMetadata.fromObject(object.citationMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Message message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.Message} message Message
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Message.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.author = "";
                                object.content = "";
                            }
                            if (message.author != null && message.hasOwnProperty("author"))
                                object.author = message.author;
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = message.content;
                            if (message.citationMetadata != null && message.hasOwnProperty("citationMetadata")) {
                                object.citationMetadata = $root.google.ai.generativelanguage.v1alpha.CitationMetadata.toObject(message.citationMetadata, options);
                                if (options.oneofs)
                                    object._citationMetadata = "citationMetadata";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Message to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Message.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Message
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.Message
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Message.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.Message";
                        };
    
                        return Message;
                    })();
    
                    v1alpha.MessagePrompt = (function() {
    
                        /**
                         * Properties of a MessagePrompt.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IMessagePrompt
                         * @property {string|null} [context] MessagePrompt context
                         * @property {Array.<google.ai.generativelanguage.v1alpha.IExample>|null} [examples] MessagePrompt examples
                         * @property {Array.<google.ai.generativelanguage.v1alpha.IMessage>|null} [messages] MessagePrompt messages
                         */
    
                        /**
                         * Constructs a new MessagePrompt.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a MessagePrompt.
                         * @implements IMessagePrompt
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IMessagePrompt=} [properties] Properties to set
                         */
                        function MessagePrompt(properties) {
                            this.examples = [];
                            this.messages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MessagePrompt context.
                         * @member {string} context
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @instance
                         */
                        MessagePrompt.prototype.context = "";
    
                        /**
                         * MessagePrompt examples.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.IExample>} examples
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @instance
                         */
                        MessagePrompt.prototype.examples = $util.emptyArray;
    
                        /**
                         * MessagePrompt messages.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.IMessage>} messages
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @instance
                         */
                        MessagePrompt.prototype.messages = $util.emptyArray;
    
                        /**
                         * Creates a new MessagePrompt instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IMessagePrompt=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.MessagePrompt} MessagePrompt instance
                         */
                        MessagePrompt.create = function create(properties) {
                            return new MessagePrompt(properties);
                        };
    
                        /**
                         * Encodes the specified MessagePrompt message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.MessagePrompt.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IMessagePrompt} message MessagePrompt message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MessagePrompt.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.context != null && Object.hasOwnProperty.call(message, "context"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.context);
                            if (message.examples != null && message.examples.length)
                                for (var i = 0; i < message.examples.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.Example.encode(message.examples[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.messages != null && message.messages.length)
                                for (var i = 0; i < message.messages.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.Message.encode(message.messages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MessagePrompt message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.MessagePrompt.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IMessagePrompt} message MessagePrompt message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MessagePrompt.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MessagePrompt message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.MessagePrompt} MessagePrompt
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MessagePrompt.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.MessagePrompt();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.context = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.examples && message.examples.length))
                                            message.examples = [];
                                        message.examples.push($root.google.ai.generativelanguage.v1alpha.Example.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.messages && message.messages.length))
                                            message.messages = [];
                                        message.messages.push($root.google.ai.generativelanguage.v1alpha.Message.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MessagePrompt message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.MessagePrompt} MessagePrompt
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MessagePrompt.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MessagePrompt message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MessagePrompt.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.context != null && message.hasOwnProperty("context"))
                                if (!$util.isString(message.context))
                                    return "context: string expected";
                            if (message.examples != null && message.hasOwnProperty("examples")) {
                                if (!Array.isArray(message.examples))
                                    return "examples: array expected";
                                for (var i = 0; i < message.examples.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Example.verify(message.examples[i]);
                                    if (error)
                                        return "examples." + error;
                                }
                            }
                            if (message.messages != null && message.hasOwnProperty("messages")) {
                                if (!Array.isArray(message.messages))
                                    return "messages: array expected";
                                for (var i = 0; i < message.messages.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Message.verify(message.messages[i]);
                                    if (error)
                                        return "messages." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MessagePrompt message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.MessagePrompt} MessagePrompt
                         */
                        MessagePrompt.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.MessagePrompt)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.MessagePrompt();
                            if (object.context != null)
                                message.context = String(object.context);
                            if (object.examples) {
                                if (!Array.isArray(object.examples))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.MessagePrompt.examples: array expected");
                                message.examples = [];
                                for (var i = 0; i < object.examples.length; ++i) {
                                    if (typeof object.examples[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.MessagePrompt.examples: object expected");
                                    message.examples[i] = $root.google.ai.generativelanguage.v1alpha.Example.fromObject(object.examples[i]);
                                }
                            }
                            if (object.messages) {
                                if (!Array.isArray(object.messages))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.MessagePrompt.messages: array expected");
                                message.messages = [];
                                for (var i = 0; i < object.messages.length; ++i) {
                                    if (typeof object.messages[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.MessagePrompt.messages: object expected");
                                    message.messages[i] = $root.google.ai.generativelanguage.v1alpha.Message.fromObject(object.messages[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MessagePrompt message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.MessagePrompt} message MessagePrompt
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MessagePrompt.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.examples = [];
                                object.messages = [];
                            }
                            if (options.defaults)
                                object.context = "";
                            if (message.context != null && message.hasOwnProperty("context"))
                                object.context = message.context;
                            if (message.examples && message.examples.length) {
                                object.examples = [];
                                for (var j = 0; j < message.examples.length; ++j)
                                    object.examples[j] = $root.google.ai.generativelanguage.v1alpha.Example.toObject(message.examples[j], options);
                            }
                            if (message.messages && message.messages.length) {
                                object.messages = [];
                                for (var j = 0; j < message.messages.length; ++j)
                                    object.messages[j] = $root.google.ai.generativelanguage.v1alpha.Message.toObject(message.messages[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MessagePrompt to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MessagePrompt.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MessagePrompt
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.MessagePrompt
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MessagePrompt.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.MessagePrompt";
                        };
    
                        return MessagePrompt;
                    })();
    
                    v1alpha.Example = (function() {
    
                        /**
                         * Properties of an Example.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IExample
                         * @property {google.ai.generativelanguage.v1alpha.IMessage|null} [input] Example input
                         * @property {google.ai.generativelanguage.v1alpha.IMessage|null} [output] Example output
                         */
    
                        /**
                         * Constructs a new Example.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents an Example.
                         * @implements IExample
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IExample=} [properties] Properties to set
                         */
                        function Example(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Example input.
                         * @member {google.ai.generativelanguage.v1alpha.IMessage|null|undefined} input
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @instance
                         */
                        Example.prototype.input = null;
    
                        /**
                         * Example output.
                         * @member {google.ai.generativelanguage.v1alpha.IMessage|null|undefined} output
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @instance
                         */
                        Example.prototype.output = null;
    
                        /**
                         * Creates a new Example instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IExample=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.Example} Example instance
                         */
                        Example.create = function create(properties) {
                            return new Example(properties);
                        };
    
                        /**
                         * Encodes the specified Example message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Example.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IExample} message Example message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Example.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.input != null && Object.hasOwnProperty.call(message, "input"))
                                $root.google.ai.generativelanguage.v1alpha.Message.encode(message.input, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.output != null && Object.hasOwnProperty.call(message, "output"))
                                $root.google.ai.generativelanguage.v1alpha.Message.encode(message.output, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Example message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.Example.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IExample} message Example message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Example.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Example message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.Example} Example
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Example.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.Example();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.input = $root.google.ai.generativelanguage.v1alpha.Message.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.output = $root.google.ai.generativelanguage.v1alpha.Message.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Example message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.Example} Example
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Example.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Example message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Example.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.input != null && message.hasOwnProperty("input")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.Message.verify(message.input);
                                if (error)
                                    return "input." + error;
                            }
                            if (message.output != null && message.hasOwnProperty("output")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.Message.verify(message.output);
                                if (error)
                                    return "output." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Example message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.Example} Example
                         */
                        Example.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.Example)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.Example();
                            if (object.input != null) {
                                if (typeof object.input !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Example.input: object expected");
                                message.input = $root.google.ai.generativelanguage.v1alpha.Message.fromObject(object.input);
                            }
                            if (object.output != null) {
                                if (typeof object.output !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.Example.output: object expected");
                                message.output = $root.google.ai.generativelanguage.v1alpha.Message.fromObject(object.output);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Example message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.Example} message Example
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Example.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.input = null;
                                object.output = null;
                            }
                            if (message.input != null && message.hasOwnProperty("input"))
                                object.input = $root.google.ai.generativelanguage.v1alpha.Message.toObject(message.input, options);
                            if (message.output != null && message.hasOwnProperty("output"))
                                object.output = $root.google.ai.generativelanguage.v1alpha.Message.toObject(message.output, options);
                            return object;
                        };
    
                        /**
                         * Converts this Example to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Example.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Example
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.Example
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Example.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.Example";
                        };
    
                        return Example;
                    })();
    
                    v1alpha.CountMessageTokensRequest = (function() {
    
                        /**
                         * Properties of a CountMessageTokensRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ICountMessageTokensRequest
                         * @property {string|null} [model] CountMessageTokensRequest model
                         * @property {google.ai.generativelanguage.v1alpha.IMessagePrompt|null} [prompt] CountMessageTokensRequest prompt
                         */
    
                        /**
                         * Constructs a new CountMessageTokensRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a CountMessageTokensRequest.
                         * @implements ICountMessageTokensRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ICountMessageTokensRequest=} [properties] Properties to set
                         */
                        function CountMessageTokensRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CountMessageTokensRequest model.
                         * @member {string} model
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @instance
                         */
                        CountMessageTokensRequest.prototype.model = "";
    
                        /**
                         * CountMessageTokensRequest prompt.
                         * @member {google.ai.generativelanguage.v1alpha.IMessagePrompt|null|undefined} prompt
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @instance
                         */
                        CountMessageTokensRequest.prototype.prompt = null;
    
                        /**
                         * Creates a new CountMessageTokensRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICountMessageTokensRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.CountMessageTokensRequest} CountMessageTokensRequest instance
                         */
                        CountMessageTokensRequest.create = function create(properties) {
                            return new CountMessageTokensRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CountMessageTokensRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CountMessageTokensRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICountMessageTokensRequest} message CountMessageTokensRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CountMessageTokensRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.model != null && Object.hasOwnProperty.call(message, "model"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.model);
                            if (message.prompt != null && Object.hasOwnProperty.call(message, "prompt"))
                                $root.google.ai.generativelanguage.v1alpha.MessagePrompt.encode(message.prompt, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CountMessageTokensRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CountMessageTokensRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICountMessageTokensRequest} message CountMessageTokensRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CountMessageTokensRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CountMessageTokensRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.CountMessageTokensRequest} CountMessageTokensRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CountMessageTokensRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.CountMessageTokensRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.model = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.prompt = $root.google.ai.generativelanguage.v1alpha.MessagePrompt.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CountMessageTokensRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.CountMessageTokensRequest} CountMessageTokensRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CountMessageTokensRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CountMessageTokensRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CountMessageTokensRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.model != null && message.hasOwnProperty("model"))
                                if (!$util.isString(message.model))
                                    return "model: string expected";
                            if (message.prompt != null && message.hasOwnProperty("prompt")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.MessagePrompt.verify(message.prompt);
                                if (error)
                                    return "prompt." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CountMessageTokensRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.CountMessageTokensRequest} CountMessageTokensRequest
                         */
                        CountMessageTokensRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.CountMessageTokensRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.CountMessageTokensRequest();
                            if (object.model != null)
                                message.model = String(object.model);
                            if (object.prompt != null) {
                                if (typeof object.prompt !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CountMessageTokensRequest.prompt: object expected");
                                message.prompt = $root.google.ai.generativelanguage.v1alpha.MessagePrompt.fromObject(object.prompt);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CountMessageTokensRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.CountMessageTokensRequest} message CountMessageTokensRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CountMessageTokensRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.model = "";
                                object.prompt = null;
                            }
                            if (message.model != null && message.hasOwnProperty("model"))
                                object.model = message.model;
                            if (message.prompt != null && message.hasOwnProperty("prompt"))
                                object.prompt = $root.google.ai.generativelanguage.v1alpha.MessagePrompt.toObject(message.prompt, options);
                            return object;
                        };
    
                        /**
                         * Converts this CountMessageTokensRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CountMessageTokensRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CountMessageTokensRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CountMessageTokensRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.CountMessageTokensRequest";
                        };
    
                        return CountMessageTokensRequest;
                    })();
    
                    v1alpha.CountMessageTokensResponse = (function() {
    
                        /**
                         * Properties of a CountMessageTokensResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ICountMessageTokensResponse
                         * @property {number|null} [tokenCount] CountMessageTokensResponse tokenCount
                         */
    
                        /**
                         * Constructs a new CountMessageTokensResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a CountMessageTokensResponse.
                         * @implements ICountMessageTokensResponse
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ICountMessageTokensResponse=} [properties] Properties to set
                         */
                        function CountMessageTokensResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CountMessageTokensResponse tokenCount.
                         * @member {number} tokenCount
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensResponse
                         * @instance
                         */
                        CountMessageTokensResponse.prototype.tokenCount = 0;
    
                        /**
                         * Creates a new CountMessageTokensResponse instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICountMessageTokensResponse=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.CountMessageTokensResponse} CountMessageTokensResponse instance
                         */
                        CountMessageTokensResponse.create = function create(properties) {
                            return new CountMessageTokensResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CountMessageTokensResponse message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CountMessageTokensResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICountMessageTokensResponse} message CountMessageTokensResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CountMessageTokensResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tokenCount != null && Object.hasOwnProperty.call(message, "tokenCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.tokenCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CountMessageTokensResponse message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CountMessageTokensResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICountMessageTokensResponse} message CountMessageTokensResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CountMessageTokensResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CountMessageTokensResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.CountMessageTokensResponse} CountMessageTokensResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CountMessageTokensResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.CountMessageTokensResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.tokenCount = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CountMessageTokensResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.CountMessageTokensResponse} CountMessageTokensResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CountMessageTokensResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CountMessageTokensResponse message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CountMessageTokensResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tokenCount != null && message.hasOwnProperty("tokenCount"))
                                if (!$util.isInteger(message.tokenCount))
                                    return "tokenCount: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a CountMessageTokensResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.CountMessageTokensResponse} CountMessageTokensResponse
                         */
                        CountMessageTokensResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.CountMessageTokensResponse)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.CountMessageTokensResponse();
                            if (object.tokenCount != null)
                                message.tokenCount = object.tokenCount | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CountMessageTokensResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.CountMessageTokensResponse} message CountMessageTokensResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CountMessageTokensResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.tokenCount = 0;
                            if (message.tokenCount != null && message.hasOwnProperty("tokenCount"))
                                object.tokenCount = message.tokenCount;
                            return object;
                        };
    
                        /**
                         * Converts this CountMessageTokensResponse to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CountMessageTokensResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CountMessageTokensResponse
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.CountMessageTokensResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CountMessageTokensResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.CountMessageTokensResponse";
                        };
    
                        return CountMessageTokensResponse;
                    })();
    
                    /**
                     * HarmCategory enum.
                     * @name google.ai.generativelanguage.v1alpha.HarmCategory
                     * @enum {number}
                     * @property {number} HARM_CATEGORY_UNSPECIFIED=0 HARM_CATEGORY_UNSPECIFIED value
                     * @property {number} HARM_CATEGORY_DEROGATORY=1 HARM_CATEGORY_DEROGATORY value
                     * @property {number} HARM_CATEGORY_TOXICITY=2 HARM_CATEGORY_TOXICITY value
                     * @property {number} HARM_CATEGORY_VIOLENCE=3 HARM_CATEGORY_VIOLENCE value
                     * @property {number} HARM_CATEGORY_SEXUAL=4 HARM_CATEGORY_SEXUAL value
                     * @property {number} HARM_CATEGORY_MEDICAL=5 HARM_CATEGORY_MEDICAL value
                     * @property {number} HARM_CATEGORY_DANGEROUS=6 HARM_CATEGORY_DANGEROUS value
                     * @property {number} HARM_CATEGORY_HARASSMENT=7 HARM_CATEGORY_HARASSMENT value
                     * @property {number} HARM_CATEGORY_HATE_SPEECH=8 HARM_CATEGORY_HATE_SPEECH value
                     * @property {number} HARM_CATEGORY_SEXUALLY_EXPLICIT=9 HARM_CATEGORY_SEXUALLY_EXPLICIT value
                     * @property {number} HARM_CATEGORY_DANGEROUS_CONTENT=10 HARM_CATEGORY_DANGEROUS_CONTENT value
                     * @property {number} HARM_CATEGORY_CIVIC_INTEGRITY=11 HARM_CATEGORY_CIVIC_INTEGRITY value
                     */
                    v1alpha.HarmCategory = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "HARM_CATEGORY_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "HARM_CATEGORY_DEROGATORY"] = 1;
                        values[valuesById[2] = "HARM_CATEGORY_TOXICITY"] = 2;
                        values[valuesById[3] = "HARM_CATEGORY_VIOLENCE"] = 3;
                        values[valuesById[4] = "HARM_CATEGORY_SEXUAL"] = 4;
                        values[valuesById[5] = "HARM_CATEGORY_MEDICAL"] = 5;
                        values[valuesById[6] = "HARM_CATEGORY_DANGEROUS"] = 6;
                        values[valuesById[7] = "HARM_CATEGORY_HARASSMENT"] = 7;
                        values[valuesById[8] = "HARM_CATEGORY_HATE_SPEECH"] = 8;
                        values[valuesById[9] = "HARM_CATEGORY_SEXUALLY_EXPLICIT"] = 9;
                        values[valuesById[10] = "HARM_CATEGORY_DANGEROUS_CONTENT"] = 10;
                        values[valuesById[11] = "HARM_CATEGORY_CIVIC_INTEGRITY"] = 11;
                        return values;
                    })();
    
                    v1alpha.ContentFilter = (function() {
    
                        /**
                         * Properties of a ContentFilter.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IContentFilter
                         * @property {google.ai.generativelanguage.v1alpha.ContentFilter.BlockedReason|null} [reason] ContentFilter reason
                         * @property {string|null} [message] ContentFilter message
                         */
    
                        /**
                         * Constructs a new ContentFilter.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a ContentFilter.
                         * @implements IContentFilter
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IContentFilter=} [properties] Properties to set
                         */
                        function ContentFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContentFilter reason.
                         * @member {google.ai.generativelanguage.v1alpha.ContentFilter.BlockedReason} reason
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @instance
                         */
                        ContentFilter.prototype.reason = 0;
    
                        /**
                         * ContentFilter message.
                         * @member {string|null|undefined} message
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @instance
                         */
                        ContentFilter.prototype.message = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ContentFilter _message.
                         * @member {"message"|undefined} _message
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @instance
                         */
                        Object.defineProperty(ContentFilter.prototype, "_message", {
                            get: $util.oneOfGetter($oneOfFields = ["message"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ContentFilter instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IContentFilter=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.ContentFilter} ContentFilter instance
                         */
                        ContentFilter.create = function create(properties) {
                            return new ContentFilter(properties);
                        };
    
                        /**
                         * Encodes the specified ContentFilter message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ContentFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IContentFilter} message ContentFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContentFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reason != null && Object.hasOwnProperty.call(message, "reason"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.reason);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContentFilter message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ContentFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IContentFilter} message ContentFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContentFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContentFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.ContentFilter} ContentFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContentFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.ContentFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.reason = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.message = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContentFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.ContentFilter} ContentFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContentFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContentFilter message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContentFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.reason != null && message.hasOwnProperty("reason"))
                                switch (message.reason) {
                                default:
                                    return "reason: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.message != null && message.hasOwnProperty("message")) {
                                properties._message = 1;
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ContentFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.ContentFilter} ContentFilter
                         */
                        ContentFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.ContentFilter)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.ContentFilter();
                            switch (object.reason) {
                            default:
                                if (typeof object.reason === "number") {
                                    message.reason = object.reason;
                                    break;
                                }
                                break;
                            case "BLOCKED_REASON_UNSPECIFIED":
                            case 0:
                                message.reason = 0;
                                break;
                            case "SAFETY":
                            case 1:
                                message.reason = 1;
                                break;
                            case "OTHER":
                            case 2:
                                message.reason = 2;
                                break;
                            }
                            if (object.message != null)
                                message.message = String(object.message);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContentFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ContentFilter} message ContentFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContentFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.reason = options.enums === String ? "BLOCKED_REASON_UNSPECIFIED" : 0;
                            if (message.reason != null && message.hasOwnProperty("reason"))
                                object.reason = options.enums === String ? $root.google.ai.generativelanguage.v1alpha.ContentFilter.BlockedReason[message.reason] === undefined ? message.reason : $root.google.ai.generativelanguage.v1alpha.ContentFilter.BlockedReason[message.reason] : message.reason;
                            if (message.message != null && message.hasOwnProperty("message")) {
                                object.message = message.message;
                                if (options.oneofs)
                                    object._message = "message";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ContentFilter to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContentFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContentFilter
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.ContentFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContentFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.ContentFilter";
                        };
    
                        /**
                         * BlockedReason enum.
                         * @name google.ai.generativelanguage.v1alpha.ContentFilter.BlockedReason
                         * @enum {number}
                         * @property {number} BLOCKED_REASON_UNSPECIFIED=0 BLOCKED_REASON_UNSPECIFIED value
                         * @property {number} SAFETY=1 SAFETY value
                         * @property {number} OTHER=2 OTHER value
                         */
                        ContentFilter.BlockedReason = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "BLOCKED_REASON_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SAFETY"] = 1;
                            values[valuesById[2] = "OTHER"] = 2;
                            return values;
                        })();
    
                        return ContentFilter;
                    })();
    
                    v1alpha.SafetyFeedback = (function() {
    
                        /**
                         * Properties of a SafetyFeedback.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ISafetyFeedback
                         * @property {google.ai.generativelanguage.v1alpha.ISafetyRating|null} [rating] SafetyFeedback rating
                         * @property {google.ai.generativelanguage.v1alpha.ISafetySetting|null} [setting] SafetyFeedback setting
                         */
    
                        /**
                         * Constructs a new SafetyFeedback.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a SafetyFeedback.
                         * @implements ISafetyFeedback
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ISafetyFeedback=} [properties] Properties to set
                         */
                        function SafetyFeedback(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SafetyFeedback rating.
                         * @member {google.ai.generativelanguage.v1alpha.ISafetyRating|null|undefined} rating
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @instance
                         */
                        SafetyFeedback.prototype.rating = null;
    
                        /**
                         * SafetyFeedback setting.
                         * @member {google.ai.generativelanguage.v1alpha.ISafetySetting|null|undefined} setting
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @instance
                         */
                        SafetyFeedback.prototype.setting = null;
    
                        /**
                         * Creates a new SafetyFeedback instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISafetyFeedback=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.SafetyFeedback} SafetyFeedback instance
                         */
                        SafetyFeedback.create = function create(properties) {
                            return new SafetyFeedback(properties);
                        };
    
                        /**
                         * Encodes the specified SafetyFeedback message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.SafetyFeedback.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISafetyFeedback} message SafetyFeedback message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SafetyFeedback.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rating != null && Object.hasOwnProperty.call(message, "rating"))
                                $root.google.ai.generativelanguage.v1alpha.SafetyRating.encode(message.rating, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.setting != null && Object.hasOwnProperty.call(message, "setting"))
                                $root.google.ai.generativelanguage.v1alpha.SafetySetting.encode(message.setting, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SafetyFeedback message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.SafetyFeedback.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISafetyFeedback} message SafetyFeedback message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SafetyFeedback.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SafetyFeedback message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.SafetyFeedback} SafetyFeedback
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SafetyFeedback.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.SafetyFeedback();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.rating = $root.google.ai.generativelanguage.v1alpha.SafetyRating.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.setting = $root.google.ai.generativelanguage.v1alpha.SafetySetting.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SafetyFeedback message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.SafetyFeedback} SafetyFeedback
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SafetyFeedback.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SafetyFeedback message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SafetyFeedback.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rating != null && message.hasOwnProperty("rating")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.SafetyRating.verify(message.rating);
                                if (error)
                                    return "rating." + error;
                            }
                            if (message.setting != null && message.hasOwnProperty("setting")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.SafetySetting.verify(message.setting);
                                if (error)
                                    return "setting." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SafetyFeedback message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.SafetyFeedback} SafetyFeedback
                         */
                        SafetyFeedback.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.SafetyFeedback)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.SafetyFeedback();
                            if (object.rating != null) {
                                if (typeof object.rating !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.SafetyFeedback.rating: object expected");
                                message.rating = $root.google.ai.generativelanguage.v1alpha.SafetyRating.fromObject(object.rating);
                            }
                            if (object.setting != null) {
                                if (typeof object.setting !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.SafetyFeedback.setting: object expected");
                                message.setting = $root.google.ai.generativelanguage.v1alpha.SafetySetting.fromObject(object.setting);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SafetyFeedback message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.SafetyFeedback} message SafetyFeedback
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SafetyFeedback.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.rating = null;
                                object.setting = null;
                            }
                            if (message.rating != null && message.hasOwnProperty("rating"))
                                object.rating = $root.google.ai.generativelanguage.v1alpha.SafetyRating.toObject(message.rating, options);
                            if (message.setting != null && message.hasOwnProperty("setting"))
                                object.setting = $root.google.ai.generativelanguage.v1alpha.SafetySetting.toObject(message.setting, options);
                            return object;
                        };
    
                        /**
                         * Converts this SafetyFeedback to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SafetyFeedback.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SafetyFeedback
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyFeedback
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SafetyFeedback.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.SafetyFeedback";
                        };
    
                        return SafetyFeedback;
                    })();
    
                    v1alpha.SafetyRating = (function() {
    
                        /**
                         * Properties of a SafetyRating.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ISafetyRating
                         * @property {google.ai.generativelanguage.v1alpha.HarmCategory|null} [category] SafetyRating category
                         * @property {google.ai.generativelanguage.v1alpha.SafetyRating.HarmProbability|null} [probability] SafetyRating probability
                         * @property {boolean|null} [blocked] SafetyRating blocked
                         */
    
                        /**
                         * Constructs a new SafetyRating.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a SafetyRating.
                         * @implements ISafetyRating
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ISafetyRating=} [properties] Properties to set
                         */
                        function SafetyRating(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SafetyRating category.
                         * @member {google.ai.generativelanguage.v1alpha.HarmCategory} category
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @instance
                         */
                        SafetyRating.prototype.category = 0;
    
                        /**
                         * SafetyRating probability.
                         * @member {google.ai.generativelanguage.v1alpha.SafetyRating.HarmProbability} probability
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @instance
                         */
                        SafetyRating.prototype.probability = 0;
    
                        /**
                         * SafetyRating blocked.
                         * @member {boolean} blocked
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @instance
                         */
                        SafetyRating.prototype.blocked = false;
    
                        /**
                         * Creates a new SafetyRating instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISafetyRating=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.SafetyRating} SafetyRating instance
                         */
                        SafetyRating.create = function create(properties) {
                            return new SafetyRating(properties);
                        };
    
                        /**
                         * Encodes the specified SafetyRating message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.SafetyRating.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISafetyRating} message SafetyRating message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SafetyRating.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.category != null && Object.hasOwnProperty.call(message, "category"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.category);
                            if (message.probability != null && Object.hasOwnProperty.call(message, "probability"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.probability);
                            if (message.blocked != null && Object.hasOwnProperty.call(message, "blocked"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.blocked);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SafetyRating message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.SafetyRating.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISafetyRating} message SafetyRating message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SafetyRating.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SafetyRating message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.SafetyRating} SafetyRating
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SafetyRating.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.SafetyRating();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.category = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.probability = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.blocked = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SafetyRating message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.SafetyRating} SafetyRating
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SafetyRating.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SafetyRating message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SafetyRating.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.category != null && message.hasOwnProperty("category"))
                                switch (message.category) {
                                default:
                                    return "category: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                    break;
                                }
                            if (message.probability != null && message.hasOwnProperty("probability"))
                                switch (message.probability) {
                                default:
                                    return "probability: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.blocked != null && message.hasOwnProperty("blocked"))
                                if (typeof message.blocked !== "boolean")
                                    return "blocked: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a SafetyRating message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.SafetyRating} SafetyRating
                         */
                        SafetyRating.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.SafetyRating)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.SafetyRating();
                            switch (object.category) {
                            default:
                                if (typeof object.category === "number") {
                                    message.category = object.category;
                                    break;
                                }
                                break;
                            case "HARM_CATEGORY_UNSPECIFIED":
                            case 0:
                                message.category = 0;
                                break;
                            case "HARM_CATEGORY_DEROGATORY":
                            case 1:
                                message.category = 1;
                                break;
                            case "HARM_CATEGORY_TOXICITY":
                            case 2:
                                message.category = 2;
                                break;
                            case "HARM_CATEGORY_VIOLENCE":
                            case 3:
                                message.category = 3;
                                break;
                            case "HARM_CATEGORY_SEXUAL":
                            case 4:
                                message.category = 4;
                                break;
                            case "HARM_CATEGORY_MEDICAL":
                            case 5:
                                message.category = 5;
                                break;
                            case "HARM_CATEGORY_DANGEROUS":
                            case 6:
                                message.category = 6;
                                break;
                            case "HARM_CATEGORY_HARASSMENT":
                            case 7:
                                message.category = 7;
                                break;
                            case "HARM_CATEGORY_HATE_SPEECH":
                            case 8:
                                message.category = 8;
                                break;
                            case "HARM_CATEGORY_SEXUALLY_EXPLICIT":
                            case 9:
                                message.category = 9;
                                break;
                            case "HARM_CATEGORY_DANGEROUS_CONTENT":
                            case 10:
                                message.category = 10;
                                break;
                            case "HARM_CATEGORY_CIVIC_INTEGRITY":
                            case 11:
                                message.category = 11;
                                break;
                            }
                            switch (object.probability) {
                            default:
                                if (typeof object.probability === "number") {
                                    message.probability = object.probability;
                                    break;
                                }
                                break;
                            case "HARM_PROBABILITY_UNSPECIFIED":
                            case 0:
                                message.probability = 0;
                                break;
                            case "NEGLIGIBLE":
                            case 1:
                                message.probability = 1;
                                break;
                            case "LOW":
                            case 2:
                                message.probability = 2;
                                break;
                            case "MEDIUM":
                            case 3:
                                message.probability = 3;
                                break;
                            case "HIGH":
                            case 4:
                                message.probability = 4;
                                break;
                            }
                            if (object.blocked != null)
                                message.blocked = Boolean(object.blocked);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SafetyRating message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.SafetyRating} message SafetyRating
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SafetyRating.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.category = options.enums === String ? "HARM_CATEGORY_UNSPECIFIED" : 0;
                                object.probability = options.enums === String ? "HARM_PROBABILITY_UNSPECIFIED" : 0;
                                object.blocked = false;
                            }
                            if (message.category != null && message.hasOwnProperty("category"))
                                object.category = options.enums === String ? $root.google.ai.generativelanguage.v1alpha.HarmCategory[message.category] === undefined ? message.category : $root.google.ai.generativelanguage.v1alpha.HarmCategory[message.category] : message.category;
                            if (message.probability != null && message.hasOwnProperty("probability"))
                                object.probability = options.enums === String ? $root.google.ai.generativelanguage.v1alpha.SafetyRating.HarmProbability[message.probability] === undefined ? message.probability : $root.google.ai.generativelanguage.v1alpha.SafetyRating.HarmProbability[message.probability] : message.probability;
                            if (message.blocked != null && message.hasOwnProperty("blocked"))
                                object.blocked = message.blocked;
                            return object;
                        };
    
                        /**
                         * Converts this SafetyRating to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SafetyRating.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SafetyRating
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.SafetyRating
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SafetyRating.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.SafetyRating";
                        };
    
                        /**
                         * HarmProbability enum.
                         * @name google.ai.generativelanguage.v1alpha.SafetyRating.HarmProbability
                         * @enum {number}
                         * @property {number} HARM_PROBABILITY_UNSPECIFIED=0 HARM_PROBABILITY_UNSPECIFIED value
                         * @property {number} NEGLIGIBLE=1 NEGLIGIBLE value
                         * @property {number} LOW=2 LOW value
                         * @property {number} MEDIUM=3 MEDIUM value
                         * @property {number} HIGH=4 HIGH value
                         */
                        SafetyRating.HarmProbability = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "HARM_PROBABILITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NEGLIGIBLE"] = 1;
                            values[valuesById[2] = "LOW"] = 2;
                            values[valuesById[3] = "MEDIUM"] = 3;
                            values[valuesById[4] = "HIGH"] = 4;
                            return values;
                        })();
    
                        return SafetyRating;
                    })();
    
                    v1alpha.SafetySetting = (function() {
    
                        /**
                         * Properties of a SafetySetting.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ISafetySetting
                         * @property {google.ai.generativelanguage.v1alpha.HarmCategory|null} [category] SafetySetting category
                         * @property {google.ai.generativelanguage.v1alpha.SafetySetting.HarmBlockThreshold|null} [threshold] SafetySetting threshold
                         */
    
                        /**
                         * Constructs a new SafetySetting.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a SafetySetting.
                         * @implements ISafetySetting
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ISafetySetting=} [properties] Properties to set
                         */
                        function SafetySetting(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SafetySetting category.
                         * @member {google.ai.generativelanguage.v1alpha.HarmCategory} category
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @instance
                         */
                        SafetySetting.prototype.category = 0;
    
                        /**
                         * SafetySetting threshold.
                         * @member {google.ai.generativelanguage.v1alpha.SafetySetting.HarmBlockThreshold} threshold
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @instance
                         */
                        SafetySetting.prototype.threshold = 0;
    
                        /**
                         * Creates a new SafetySetting instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISafetySetting=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.SafetySetting} SafetySetting instance
                         */
                        SafetySetting.create = function create(properties) {
                            return new SafetySetting(properties);
                        };
    
                        /**
                         * Encodes the specified SafetySetting message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.SafetySetting.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISafetySetting} message SafetySetting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SafetySetting.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.category != null && Object.hasOwnProperty.call(message, "category"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.category);
                            if (message.threshold != null && Object.hasOwnProperty.call(message, "threshold"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.threshold);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SafetySetting message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.SafetySetting.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ISafetySetting} message SafetySetting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SafetySetting.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SafetySetting message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.SafetySetting} SafetySetting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SafetySetting.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.SafetySetting();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.category = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.threshold = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SafetySetting message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.SafetySetting} SafetySetting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SafetySetting.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SafetySetting message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SafetySetting.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.category != null && message.hasOwnProperty("category"))
                                switch (message.category) {
                                default:
                                    return "category: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                    break;
                                }
                            if (message.threshold != null && message.hasOwnProperty("threshold"))
                                switch (message.threshold) {
                                default:
                                    return "threshold: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a SafetySetting message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.SafetySetting} SafetySetting
                         */
                        SafetySetting.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.SafetySetting)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.SafetySetting();
                            switch (object.category) {
                            default:
                                if (typeof object.category === "number") {
                                    message.category = object.category;
                                    break;
                                }
                                break;
                            case "HARM_CATEGORY_UNSPECIFIED":
                            case 0:
                                message.category = 0;
                                break;
                            case "HARM_CATEGORY_DEROGATORY":
                            case 1:
                                message.category = 1;
                                break;
                            case "HARM_CATEGORY_TOXICITY":
                            case 2:
                                message.category = 2;
                                break;
                            case "HARM_CATEGORY_VIOLENCE":
                            case 3:
                                message.category = 3;
                                break;
                            case "HARM_CATEGORY_SEXUAL":
                            case 4:
                                message.category = 4;
                                break;
                            case "HARM_CATEGORY_MEDICAL":
                            case 5:
                                message.category = 5;
                                break;
                            case "HARM_CATEGORY_DANGEROUS":
                            case 6:
                                message.category = 6;
                                break;
                            case "HARM_CATEGORY_HARASSMENT":
                            case 7:
                                message.category = 7;
                                break;
                            case "HARM_CATEGORY_HATE_SPEECH":
                            case 8:
                                message.category = 8;
                                break;
                            case "HARM_CATEGORY_SEXUALLY_EXPLICIT":
                            case 9:
                                message.category = 9;
                                break;
                            case "HARM_CATEGORY_DANGEROUS_CONTENT":
                            case 10:
                                message.category = 10;
                                break;
                            case "HARM_CATEGORY_CIVIC_INTEGRITY":
                            case 11:
                                message.category = 11;
                                break;
                            }
                            switch (object.threshold) {
                            default:
                                if (typeof object.threshold === "number") {
                                    message.threshold = object.threshold;
                                    break;
                                }
                                break;
                            case "HARM_BLOCK_THRESHOLD_UNSPECIFIED":
                            case 0:
                                message.threshold = 0;
                                break;
                            case "BLOCK_LOW_AND_ABOVE":
                            case 1:
                                message.threshold = 1;
                                break;
                            case "BLOCK_MEDIUM_AND_ABOVE":
                            case 2:
                                message.threshold = 2;
                                break;
                            case "BLOCK_ONLY_HIGH":
                            case 3:
                                message.threshold = 3;
                                break;
                            case "BLOCK_NONE":
                            case 4:
                                message.threshold = 4;
                                break;
                            case "OFF":
                            case 5:
                                message.threshold = 5;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SafetySetting message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.SafetySetting} message SafetySetting
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SafetySetting.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.category = options.enums === String ? "HARM_CATEGORY_UNSPECIFIED" : 0;
                                object.threshold = options.enums === String ? "HARM_BLOCK_THRESHOLD_UNSPECIFIED" : 0;
                            }
                            if (message.category != null && message.hasOwnProperty("category"))
                                object.category = options.enums === String ? $root.google.ai.generativelanguage.v1alpha.HarmCategory[message.category] === undefined ? message.category : $root.google.ai.generativelanguage.v1alpha.HarmCategory[message.category] : message.category;
                            if (message.threshold != null && message.hasOwnProperty("threshold"))
                                object.threshold = options.enums === String ? $root.google.ai.generativelanguage.v1alpha.SafetySetting.HarmBlockThreshold[message.threshold] === undefined ? message.threshold : $root.google.ai.generativelanguage.v1alpha.SafetySetting.HarmBlockThreshold[message.threshold] : message.threshold;
                            return object;
                        };
    
                        /**
                         * Converts this SafetySetting to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SafetySetting.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SafetySetting
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.SafetySetting
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SafetySetting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.SafetySetting";
                        };
    
                        /**
                         * HarmBlockThreshold enum.
                         * @name google.ai.generativelanguage.v1alpha.SafetySetting.HarmBlockThreshold
                         * @enum {number}
                         * @property {number} HARM_BLOCK_THRESHOLD_UNSPECIFIED=0 HARM_BLOCK_THRESHOLD_UNSPECIFIED value
                         * @property {number} BLOCK_LOW_AND_ABOVE=1 BLOCK_LOW_AND_ABOVE value
                         * @property {number} BLOCK_MEDIUM_AND_ABOVE=2 BLOCK_MEDIUM_AND_ABOVE value
                         * @property {number} BLOCK_ONLY_HIGH=3 BLOCK_ONLY_HIGH value
                         * @property {number} BLOCK_NONE=4 BLOCK_NONE value
                         * @property {number} OFF=5 OFF value
                         */
                        SafetySetting.HarmBlockThreshold = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "HARM_BLOCK_THRESHOLD_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BLOCK_LOW_AND_ABOVE"] = 1;
                            values[valuesById[2] = "BLOCK_MEDIUM_AND_ABOVE"] = 2;
                            values[valuesById[3] = "BLOCK_ONLY_HIGH"] = 3;
                            values[valuesById[4] = "BLOCK_NONE"] = 4;
                            values[valuesById[5] = "OFF"] = 5;
                            return values;
                        })();
    
                        return SafetySetting;
                    })();
    
                    v1alpha.File = (function() {
    
                        /**
                         * Properties of a File.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IFile
                         * @property {google.ai.generativelanguage.v1alpha.IVideoMetadata|null} [videoMetadata] File videoMetadata
                         * @property {string|null} [name] File name
                         * @property {string|null} [displayName] File displayName
                         * @property {string|null} [mimeType] File mimeType
                         * @property {number|Long|null} [sizeBytes] File sizeBytes
                         * @property {google.protobuf.ITimestamp|null} [createTime] File createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] File updateTime
                         * @property {google.protobuf.ITimestamp|null} [expirationTime] File expirationTime
                         * @property {Uint8Array|null} [sha256Hash] File sha256Hash
                         * @property {string|null} [uri] File uri
                         * @property {google.ai.generativelanguage.v1alpha.File.State|null} [state] File state
                         * @property {google.rpc.IStatus|null} [error] File error
                         */
    
                        /**
                         * Constructs a new File.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a File.
                         * @implements IFile
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IFile=} [properties] Properties to set
                         */
                        function File(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * File videoMetadata.
                         * @member {google.ai.generativelanguage.v1alpha.IVideoMetadata|null|undefined} videoMetadata
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.videoMetadata = null;
    
                        /**
                         * File name.
                         * @member {string} name
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.name = "";
    
                        /**
                         * File displayName.
                         * @member {string} displayName
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.displayName = "";
    
                        /**
                         * File mimeType.
                         * @member {string} mimeType
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.mimeType = "";
    
                        /**
                         * File sizeBytes.
                         * @member {number|Long} sizeBytes
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.sizeBytes = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * File createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.createTime = null;
    
                        /**
                         * File updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.updateTime = null;
    
                        /**
                         * File expirationTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expirationTime
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.expirationTime = null;
    
                        /**
                         * File sha256Hash.
                         * @member {Uint8Array} sha256Hash
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.sha256Hash = $util.newBuffer([]);
    
                        /**
                         * File uri.
                         * @member {string} uri
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.uri = "";
    
                        /**
                         * File state.
                         * @member {google.ai.generativelanguage.v1alpha.File.State} state
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.state = 0;
    
                        /**
                         * File error.
                         * @member {google.rpc.IStatus|null|undefined} error
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        File.prototype.error = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * File metadata.
                         * @member {"videoMetadata"|undefined} metadata
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         */
                        Object.defineProperty(File.prototype, "metadata", {
                            get: $util.oneOfGetter($oneOfFields = ["videoMetadata"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new File instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFile=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.File} File instance
                         */
                        File.create = function create(properties) {
                            return new File(properties);
                        };
    
                        /**
                         * Encodes the specified File message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.File.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFile} message File message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        File.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.mimeType);
                            if (message.sizeBytes != null && Object.hasOwnProperty.call(message, "sizeBytes"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.sizeBytes);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.expirationTime != null && Object.hasOwnProperty.call(message, "expirationTime"))
                                $root.google.protobuf.Timestamp.encode(message.expirationTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.sha256Hash != null && Object.hasOwnProperty.call(message, "sha256Hash"))
                                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.sha256Hash);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.uri);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.state);
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.videoMetadata != null && Object.hasOwnProperty.call(message, "videoMetadata"))
                                $root.google.ai.generativelanguage.v1alpha.VideoMetadata.encode(message.videoMetadata, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified File message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.File.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IFile} message File message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        File.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a File message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.File} File
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        File.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.File();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 12: {
                                        message.videoMetadata = $root.google.ai.generativelanguage.v1alpha.VideoMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.mimeType = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.sizeBytes = reader.int64();
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.expirationTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.sha256Hash = reader.bytes();
                                        break;
                                    }
                                case 9: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 11: {
                                        message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a File message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.File} File
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        File.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a File message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        File.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.videoMetadata != null && message.hasOwnProperty("videoMetadata")) {
                                properties.metadata = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.VideoMetadata.verify(message.videoMetadata);
                                    if (error)
                                        return "videoMetadata." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                if (!$util.isString(message.mimeType))
                                    return "mimeType: string expected";
                            if (message.sizeBytes != null && message.hasOwnProperty("sizeBytes"))
                                if (!$util.isInteger(message.sizeBytes) && !(message.sizeBytes && $util.isInteger(message.sizeBytes.low) && $util.isInteger(message.sizeBytes.high)))
                                    return "sizeBytes: integer|Long expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.expirationTime != null && message.hasOwnProperty("expirationTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expirationTime);
                                if (error)
                                    return "expirationTime." + error;
                            }
                            if (message.sha256Hash != null && message.hasOwnProperty("sha256Hash"))
                                if (!(message.sha256Hash && typeof message.sha256Hash.length === "number" || $util.isString(message.sha256Hash)))
                                    return "sha256Hash: buffer expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 10:
                                    break;
                                }
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.rpc.Status.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a File message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.File} File
                         */
                        File.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.File)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.File();
                            if (object.videoMetadata != null) {
                                if (typeof object.videoMetadata !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.File.videoMetadata: object expected");
                                message.videoMetadata = $root.google.ai.generativelanguage.v1alpha.VideoMetadata.fromObject(object.videoMetadata);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.mimeType != null)
                                message.mimeType = String(object.mimeType);
                            if (object.sizeBytes != null)
                                if ($util.Long)
                                    (message.sizeBytes = $util.Long.fromValue(object.sizeBytes)).unsigned = false;
                                else if (typeof object.sizeBytes === "string")
                                    message.sizeBytes = parseInt(object.sizeBytes, 10);
                                else if (typeof object.sizeBytes === "number")
                                    message.sizeBytes = object.sizeBytes;
                                else if (typeof object.sizeBytes === "object")
                                    message.sizeBytes = new $util.LongBits(object.sizeBytes.low >>> 0, object.sizeBytes.high >>> 0).toNumber();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.File.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.File.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.expirationTime != null) {
                                if (typeof object.expirationTime !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.File.expirationTime: object expected");
                                message.expirationTime = $root.google.protobuf.Timestamp.fromObject(object.expirationTime);
                            }
                            if (object.sha256Hash != null)
                                if (typeof object.sha256Hash === "string")
                                    $util.base64.decode(object.sha256Hash, message.sha256Hash = $util.newBuffer($util.base64.length(object.sha256Hash)), 0);
                                else if (object.sha256Hash.length >= 0)
                                    message.sha256Hash = object.sha256Hash;
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "PROCESSING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "FAILED":
                            case 10:
                                message.state = 10;
                                break;
                            }
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.File.error: object expected");
                                message.error = $root.google.rpc.Status.fromObject(object.error);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a File message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.File} message File
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        File.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.mimeType = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.sizeBytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.sizeBytes = options.longs === String ? "0" : 0;
                                object.createTime = null;
                                object.updateTime = null;
                                object.expirationTime = null;
                                if (options.bytes === String)
                                    object.sha256Hash = "";
                                else {
                                    object.sha256Hash = [];
                                    if (options.bytes !== Array)
                                        object.sha256Hash = $util.newBuffer(object.sha256Hash);
                                }
                                object.uri = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.error = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                object.mimeType = message.mimeType;
                            if (message.sizeBytes != null && message.hasOwnProperty("sizeBytes"))
                                if (typeof message.sizeBytes === "number")
                                    object.sizeBytes = options.longs === String ? String(message.sizeBytes) : message.sizeBytes;
                                else
                                    object.sizeBytes = options.longs === String ? $util.Long.prototype.toString.call(message.sizeBytes) : options.longs === Number ? new $util.LongBits(message.sizeBytes.low >>> 0, message.sizeBytes.high >>> 0).toNumber() : message.sizeBytes;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.expirationTime != null && message.hasOwnProperty("expirationTime"))
                                object.expirationTime = $root.google.protobuf.Timestamp.toObject(message.expirationTime, options);
                            if (message.sha256Hash != null && message.hasOwnProperty("sha256Hash"))
                                object.sha256Hash = options.bytes === String ? $util.base64.encode(message.sha256Hash, 0, message.sha256Hash.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha256Hash) : message.sha256Hash;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.ai.generativelanguage.v1alpha.File.State[message.state] === undefined ? message.state : $root.google.ai.generativelanguage.v1alpha.File.State[message.state] : message.state;
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.rpc.Status.toObject(message.error, options);
                            if (message.videoMetadata != null && message.hasOwnProperty("videoMetadata")) {
                                object.videoMetadata = $root.google.ai.generativelanguage.v1alpha.VideoMetadata.toObject(message.videoMetadata, options);
                                if (options.oneofs)
                                    object.metadata = "videoMetadata";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this File to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        File.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for File
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.File
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        File.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.File";
                        };
    
                        /**
                         * State enum.
                         * @name google.ai.generativelanguage.v1alpha.File.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} PROCESSING=1 PROCESSING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} FAILED=10 FAILED value
                         */
                        File.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PROCESSING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[10] = "FAILED"] = 10;
                            return values;
                        })();
    
                        return File;
                    })();
    
                    v1alpha.VideoMetadata = (function() {
    
                        /**
                         * Properties of a VideoMetadata.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IVideoMetadata
                         * @property {google.protobuf.IDuration|null} [videoDuration] VideoMetadata videoDuration
                         */
    
                        /**
                         * Constructs a new VideoMetadata.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a VideoMetadata.
                         * @implements IVideoMetadata
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IVideoMetadata=} [properties] Properties to set
                         */
                        function VideoMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VideoMetadata videoDuration.
                         * @member {google.protobuf.IDuration|null|undefined} videoDuration
                         * @memberof google.ai.generativelanguage.v1alpha.VideoMetadata
                         * @instance
                         */
                        VideoMetadata.prototype.videoDuration = null;
    
                        /**
                         * Creates a new VideoMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.VideoMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IVideoMetadata=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.VideoMetadata} VideoMetadata instance
                         */
                        VideoMetadata.create = function create(properties) {
                            return new VideoMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified VideoMetadata message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.VideoMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.VideoMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IVideoMetadata} message VideoMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VideoMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.videoDuration != null && Object.hasOwnProperty.call(message, "videoDuration"))
                                $root.google.protobuf.Duration.encode(message.videoDuration, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VideoMetadata message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.VideoMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.VideoMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IVideoMetadata} message VideoMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VideoMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VideoMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.VideoMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.VideoMetadata} VideoMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VideoMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.VideoMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.videoDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VideoMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.VideoMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.VideoMetadata} VideoMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VideoMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VideoMetadata message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.VideoMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VideoMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.videoDuration != null && message.hasOwnProperty("videoDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.videoDuration);
                                if (error)
                                    return "videoDuration." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a VideoMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.VideoMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.VideoMetadata} VideoMetadata
                         */
                        VideoMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.VideoMetadata)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.VideoMetadata();
                            if (object.videoDuration != null) {
                                if (typeof object.videoDuration !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.VideoMetadata.videoDuration: object expected");
                                message.videoDuration = $root.google.protobuf.Duration.fromObject(object.videoDuration);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VideoMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.VideoMetadata
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.VideoMetadata} message VideoMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VideoMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.videoDuration = null;
                            if (message.videoDuration != null && message.hasOwnProperty("videoDuration"))
                                object.videoDuration = $root.google.protobuf.Duration.toObject(message.videoDuration, options);
                            return object;
                        };
    
                        /**
                         * Converts this VideoMetadata to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.VideoMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VideoMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VideoMetadata
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.VideoMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VideoMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.VideoMetadata";
                        };
    
                        return VideoMetadata;
                    })();
    
                    v1alpha.FileService = (function() {
    
                        /**
                         * Constructs a new FileService service.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a FileService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function FileService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (FileService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = FileService;
    
                        /**
                         * Creates new FileService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {FileService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        FileService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.FileService|createFile}.
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @typedef CreateFileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.CreateFileResponse} [response] CreateFileResponse
                         */
    
                        /**
                         * Calls CreateFile.
                         * @function createFile
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.ICreateFileRequest} request CreateFileRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.FileService.CreateFileCallback} callback Node-style callback called with the error, if any, and CreateFileResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FileService.prototype.createFile = function createFile(request, callback) {
                            return this.rpcCall(createFile, $root.google.ai.generativelanguage.v1alpha.CreateFileRequest, $root.google.ai.generativelanguage.v1alpha.CreateFileResponse, request, callback);
                        }, "name", { value: "CreateFile" });
    
                        /**
                         * Calls CreateFile.
                         * @function createFile
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.ICreateFileRequest} request CreateFileRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.CreateFileResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.FileService|listFiles}.
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @typedef ListFilesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.ListFilesResponse} [response] ListFilesResponse
                         */
    
                        /**
                         * Calls ListFiles.
                         * @function listFiles
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IListFilesRequest} request ListFilesRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.FileService.ListFilesCallback} callback Node-style callback called with the error, if any, and ListFilesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FileService.prototype.listFiles = function listFiles(request, callback) {
                            return this.rpcCall(listFiles, $root.google.ai.generativelanguage.v1alpha.ListFilesRequest, $root.google.ai.generativelanguage.v1alpha.ListFilesResponse, request, callback);
                        }, "name", { value: "ListFiles" });
    
                        /**
                         * Calls ListFiles.
                         * @function listFiles
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IListFilesRequest} request ListFilesRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.ListFilesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.FileService|getFile}.
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @typedef GetFileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.File} [response] File
                         */
    
                        /**
                         * Calls GetFile.
                         * @function getFile
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGetFileRequest} request GetFileRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.FileService.GetFileCallback} callback Node-style callback called with the error, if any, and File
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FileService.prototype.getFile = function getFile(request, callback) {
                            return this.rpcCall(getFile, $root.google.ai.generativelanguage.v1alpha.GetFileRequest, $root.google.ai.generativelanguage.v1alpha.File, request, callback);
                        }, "name", { value: "GetFile" });
    
                        /**
                         * Calls GetFile.
                         * @function getFile
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGetFileRequest} request GetFileRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.File>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.FileService|deleteFile}.
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @typedef DeleteFileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteFile.
                         * @function deleteFile
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteFileRequest} request DeleteFileRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.FileService.DeleteFileCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FileService.prototype.deleteFile = function deleteFile(request, callback) {
                            return this.rpcCall(deleteFile, $root.google.ai.generativelanguage.v1alpha.DeleteFileRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteFile" });
    
                        /**
                         * Calls DeleteFile.
                         * @function deleteFile
                         * @memberof google.ai.generativelanguage.v1alpha.FileService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteFileRequest} request DeleteFileRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        return FileService;
                    })();
    
                    v1alpha.CreateFileRequest = (function() {
    
                        /**
                         * Properties of a CreateFileRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ICreateFileRequest
                         * @property {google.ai.generativelanguage.v1alpha.IFile|null} [file] CreateFileRequest file
                         */
    
                        /**
                         * Constructs a new CreateFileRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a CreateFileRequest.
                         * @implements ICreateFileRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ICreateFileRequest=} [properties] Properties to set
                         */
                        function CreateFileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFileRequest file.
                         * @member {google.ai.generativelanguage.v1alpha.IFile|null|undefined} file
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileRequest
                         * @instance
                         */
                        CreateFileRequest.prototype.file = null;
    
                        /**
                         * Creates a new CreateFileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICreateFileRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.CreateFileRequest} CreateFileRequest instance
                         */
                        CreateFileRequest.create = function create(properties) {
                            return new CreateFileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFileRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CreateFileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICreateFileRequest} message CreateFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.file != null && Object.hasOwnProperty.call(message, "file"))
                                $root.google.ai.generativelanguage.v1alpha.File.encode(message.file, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFileRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CreateFileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICreateFileRequest} message CreateFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.CreateFileRequest} CreateFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.CreateFileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.file = $root.google.ai.generativelanguage.v1alpha.File.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.CreateFileRequest} CreateFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFileRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.file != null && message.hasOwnProperty("file")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.File.verify(message.file);
                                if (error)
                                    return "file." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateFileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.CreateFileRequest} CreateFileRequest
                         */
                        CreateFileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.CreateFileRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.CreateFileRequest();
                            if (object.file != null) {
                                if (typeof object.file !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CreateFileRequest.file: object expected");
                                message.file = $root.google.ai.generativelanguage.v1alpha.File.fromObject(object.file);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.CreateFileRequest} message CreateFileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.file = null;
                            if (message.file != null && message.hasOwnProperty("file"))
                                object.file = $root.google.ai.generativelanguage.v1alpha.File.toObject(message.file, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateFileRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateFileRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateFileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.CreateFileRequest";
                        };
    
                        return CreateFileRequest;
                    })();
    
                    v1alpha.CreateFileResponse = (function() {
    
                        /**
                         * Properties of a CreateFileResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface ICreateFileResponse
                         * @property {google.ai.generativelanguage.v1alpha.IFile|null} [file] CreateFileResponse file
                         */
    
                        /**
                         * Constructs a new CreateFileResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a CreateFileResponse.
                         * @implements ICreateFileResponse
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.ICreateFileResponse=} [properties] Properties to set
                         */
                        function CreateFileResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFileResponse file.
                         * @member {google.ai.generativelanguage.v1alpha.IFile|null|undefined} file
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileResponse
                         * @instance
                         */
                        CreateFileResponse.prototype.file = null;
    
                        /**
                         * Creates a new CreateFileResponse instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICreateFileResponse=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.CreateFileResponse} CreateFileResponse instance
                         */
                        CreateFileResponse.create = function create(properties) {
                            return new CreateFileResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFileResponse message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CreateFileResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICreateFileResponse} message CreateFileResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFileResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.file != null && Object.hasOwnProperty.call(message, "file"))
                                $root.google.ai.generativelanguage.v1alpha.File.encode(message.file, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFileResponse message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.CreateFileResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ICreateFileResponse} message CreateFileResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFileResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFileResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.CreateFileResponse} CreateFileResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFileResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.CreateFileResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.file = $root.google.ai.generativelanguage.v1alpha.File.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFileResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.CreateFileResponse} CreateFileResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFileResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFileResponse message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFileResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.file != null && message.hasOwnProperty("file")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.File.verify(message.file);
                                if (error)
                                    return "file." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateFileResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.CreateFileResponse} CreateFileResponse
                         */
                        CreateFileResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.CreateFileResponse)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.CreateFileResponse();
                            if (object.file != null) {
                                if (typeof object.file !== "object")
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.CreateFileResponse.file: object expected");
                                message.file = $root.google.ai.generativelanguage.v1alpha.File.fromObject(object.file);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFileResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.CreateFileResponse} message CreateFileResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFileResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.file = null;
                            if (message.file != null && message.hasOwnProperty("file"))
                                object.file = $root.google.ai.generativelanguage.v1alpha.File.toObject(message.file, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateFileResponse to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFileResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateFileResponse
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.CreateFileResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateFileResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.CreateFileResponse";
                        };
    
                        return CreateFileResponse;
                    })();
    
                    v1alpha.ListFilesRequest = (function() {
    
                        /**
                         * Properties of a ListFilesRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IListFilesRequest
                         * @property {number|null} [pageSize] ListFilesRequest pageSize
                         * @property {string|null} [pageToken] ListFilesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListFilesRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a ListFilesRequest.
                         * @implements IListFilesRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IListFilesRequest=} [properties] Properties to set
                         */
                        function ListFilesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFilesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @instance
                         */
                        ListFilesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFilesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @instance
                         */
                        ListFilesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListFilesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListFilesRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.ListFilesRequest} ListFilesRequest instance
                         */
                        ListFilesRequest.create = function create(properties) {
                            return new ListFilesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFilesRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ListFilesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListFilesRequest} message ListFilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFilesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFilesRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ListFilesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListFilesRequest} message ListFilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFilesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFilesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.ListFilesRequest} ListFilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFilesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.ListFilesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFilesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.ListFilesRequest} ListFilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFilesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFilesRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFilesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFilesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.ListFilesRequest} ListFilesRequest
                         */
                        ListFilesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.ListFilesRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.ListFilesRequest();
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFilesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ListFilesRequest} message ListFilesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFilesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListFilesRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFilesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFilesRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFilesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.ListFilesRequest";
                        };
    
                        return ListFilesRequest;
                    })();
    
                    v1alpha.ListFilesResponse = (function() {
    
                        /**
                         * Properties of a ListFilesResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IListFilesResponse
                         * @property {Array.<google.ai.generativelanguage.v1alpha.IFile>|null} [files] ListFilesResponse files
                         * @property {string|null} [nextPageToken] ListFilesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListFilesResponse.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a ListFilesResponse.
                         * @implements IListFilesResponse
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IListFilesResponse=} [properties] Properties to set
                         */
                        function ListFilesResponse(properties) {
                            this.files = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFilesResponse files.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.IFile>} files
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @instance
                         */
                        ListFilesResponse.prototype.files = $util.emptyArray;
    
                        /**
                         * ListFilesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @instance
                         */
                        ListFilesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListFilesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListFilesResponse=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.ListFilesResponse} ListFilesResponse instance
                         */
                        ListFilesResponse.create = function create(properties) {
                            return new ListFilesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFilesResponse message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ListFilesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListFilesResponse} message ListFilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFilesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.files != null && message.files.length)
                                for (var i = 0; i < message.files.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.File.encode(message.files[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFilesResponse message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.ListFilesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IListFilesResponse} message ListFilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFilesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFilesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.ListFilesResponse} ListFilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFilesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.ListFilesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.files && message.files.length))
                                            message.files = [];
                                        message.files.push($root.google.ai.generativelanguage.v1alpha.File.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFilesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.ListFilesResponse} ListFilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFilesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFilesResponse message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFilesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.files != null && message.hasOwnProperty("files")) {
                                if (!Array.isArray(message.files))
                                    return "files: array expected";
                                for (var i = 0; i < message.files.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.File.verify(message.files[i]);
                                    if (error)
                                        return "files." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFilesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.ListFilesResponse} ListFilesResponse
                         */
                        ListFilesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.ListFilesResponse)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.ListFilesResponse();
                            if (object.files) {
                                if (!Array.isArray(object.files))
                                    throw TypeError(".google.ai.generativelanguage.v1alpha.ListFilesResponse.files: array expected");
                                message.files = [];
                                for (var i = 0; i < object.files.length; ++i) {
                                    if (typeof object.files[i] !== "object")
                                        throw TypeError(".google.ai.generativelanguage.v1alpha.ListFilesResponse.files: object expected");
                                    message.files[i] = $root.google.ai.generativelanguage.v1alpha.File.fromObject(object.files[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFilesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.ListFilesResponse} message ListFilesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFilesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.files = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.files && message.files.length) {
                                object.files = [];
                                for (var j = 0; j < message.files.length; ++j)
                                    object.files[j] = $root.google.ai.generativelanguage.v1alpha.File.toObject(message.files[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListFilesResponse to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFilesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFilesResponse
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.ListFilesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFilesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.ListFilesResponse";
                        };
    
                        return ListFilesResponse;
                    })();
    
                    v1alpha.GetFileRequest = (function() {
    
                        /**
                         * Properties of a GetFileRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IGetFileRequest
                         * @property {string|null} [name] GetFileRequest name
                         */
    
                        /**
                         * Constructs a new GetFileRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a GetFileRequest.
                         * @implements IGetFileRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IGetFileRequest=} [properties] Properties to set
                         */
                        function GetFileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFileRequest name.
                         * @member {string} name
                         * @memberof google.ai.generativelanguage.v1alpha.GetFileRequest
                         * @instance
                         */
                        GetFileRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.GetFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGetFileRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.GetFileRequest} GetFileRequest instance
                         */
                        GetFileRequest.create = function create(properties) {
                            return new GetFileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFileRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GetFileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.GetFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGetFileRequest} message GetFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFileRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GetFileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GetFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGetFileRequest} message GetFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.GetFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.GetFileRequest} GetFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.GetFileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GetFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.GetFileRequest} GetFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFileRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.GetFileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.GetFileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.GetFileRequest} GetFileRequest
                         */
                        GetFileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.GetFileRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.GetFileRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.GetFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.GetFileRequest} message GetFileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFileRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.GetFileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetFileRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.GetFileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetFileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.GetFileRequest";
                        };
    
                        return GetFileRequest;
                    })();
    
                    v1alpha.DeleteFileRequest = (function() {
    
                        /**
                         * Properties of a DeleteFileRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IDeleteFileRequest
                         * @property {string|null} [name] DeleteFileRequest name
                         */
    
                        /**
                         * Constructs a new DeleteFileRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a DeleteFileRequest.
                         * @implements IDeleteFileRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteFileRequest=} [properties] Properties to set
                         */
                        function DeleteFileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFileRequest name.
                         * @member {string} name
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteFileRequest
                         * @instance
                         */
                        DeleteFileRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteFileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteFileRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.DeleteFileRequest} DeleteFileRequest instance
                         */
                        DeleteFileRequest.create = function create(properties) {
                            return new DeleteFileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFileRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.DeleteFileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteFileRequest} message DeleteFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFileRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.DeleteFileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IDeleteFileRequest} message DeleteFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.DeleteFileRequest} DeleteFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.DeleteFileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.DeleteFileRequest} DeleteFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFileRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteFileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteFileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.ai.generativelanguage.v1alpha.DeleteFileRequest} DeleteFileRequest
                         */
                        DeleteFileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.ai.generativelanguage.v1alpha.DeleteFileRequest)
                                return object;
                            var message = new $root.google.ai.generativelanguage.v1alpha.DeleteFileRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteFileRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.DeleteFileRequest} message DeleteFileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFileRequest to JSON.
                         * @function toJSON
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteFileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteFileRequest
                         * @function getTypeUrl
                         * @memberof google.ai.generativelanguage.v1alpha.DeleteFileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteFileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.ai.generativelanguage.v1alpha.DeleteFileRequest";
                        };
    
                        return DeleteFileRequest;
                    })();
    
                    v1alpha.GenerativeService = (function() {
    
                        /**
                         * Constructs a new GenerativeService service.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a GenerativeService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function GenerativeService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (GenerativeService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = GenerativeService;
    
                        /**
                         * Creates new GenerativeService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {GenerativeService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        GenerativeService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.GenerativeService|generateContent}.
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @typedef GenerateContentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.GenerateContentResponse} [response] GenerateContentResponse
                         */
    
                        /**
                         * Calls GenerateContent.
                         * @function generateContent
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateContentRequest} request GenerateContentRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.GenerativeService.GenerateContentCallback} callback Node-style callback called with the error, if any, and GenerateContentResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.generateContent = function generateContent(request, callback) {
                            return this.rpcCall(generateContent, $root.google.ai.generativelanguage.v1alpha.GenerateContentRequest, $root.google.ai.generativelanguage.v1alpha.GenerateContentResponse, request, callback);
                        }, "name", { value: "GenerateContent" });
    
                        /**
                         * Calls GenerateContent.
                         * @function generateContent
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateContentRequest} request GenerateContentRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.GenerateContentResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.GenerativeService|generateAnswer}.
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @typedef GenerateAnswerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.GenerateAnswerResponse} [response] GenerateAnswerResponse
                         */
    
                        /**
                         * Calls GenerateAnswer.
                         * @function generateAnswer
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateAnswerRequest} request GenerateAnswerRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.GenerativeService.GenerateAnswerCallback} callback Node-style callback called with the error, if any, and GenerateAnswerResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.generateAnswer = function generateAnswer(request, callback) {
                            return this.rpcCall(generateAnswer, $root.google.ai.generativelanguage.v1alpha.GenerateAnswerRequest, $root.google.ai.generativelanguage.v1alpha.GenerateAnswerResponse, request, callback);
                        }, "name", { value: "GenerateAnswer" });
    
                        /**
                         * Calls GenerateAnswer.
                         * @function generateAnswer
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateAnswerRequest} request GenerateAnswerRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.GenerateAnswerResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.GenerativeService|streamGenerateContent}.
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @typedef StreamGenerateContentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.GenerateContentResponse} [response] GenerateContentResponse
                         */
    
                        /**
                         * Calls StreamGenerateContent.
                         * @function streamGenerateContent
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateContentRequest} request GenerateContentRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.GenerativeService.StreamGenerateContentCallback} callback Node-style callback called with the error, if any, and GenerateContentResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.streamGenerateContent = function streamGenerateContent(request, callback) {
                            return this.rpcCall(streamGenerateContent, $root.google.ai.generativelanguage.v1alpha.GenerateContentRequest, $root.google.ai.generativelanguage.v1alpha.GenerateContentResponse, request, callback);
                        }, "name", { value: "StreamGenerateContent" });
    
                        /**
                         * Calls StreamGenerateContent.
                         * @function streamGenerateContent
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateContentRequest} request GenerateContentRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.GenerateContentResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.GenerativeService|embedContent}.
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @typedef EmbedContentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.EmbedContentResponse} [response] EmbedContentResponse
                         */
    
                        /**
                         * Calls EmbedContent.
                         * @function embedContent
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IEmbedContentRequest} request EmbedContentRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.GenerativeService.EmbedContentCallback} callback Node-style callback called with the error, if any, and EmbedContentResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.embedContent = function embedContent(request, callback) {
                            return this.rpcCall(embedContent, $root.google.ai.generativelanguage.v1alpha.EmbedContentRequest, $root.google.ai.generativelanguage.v1alpha.EmbedContentResponse, request, callback);
                        }, "name", { value: "EmbedContent" });
    
                        /**
                         * Calls EmbedContent.
                         * @function embedContent
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IEmbedContentRequest} request EmbedContentRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.EmbedContentResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.GenerativeService|batchEmbedContents}.
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @typedef BatchEmbedContentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.BatchEmbedContentsResponse} [response] BatchEmbedContentsResponse
                         */
    
                        /**
                         * Calls BatchEmbedContents.
                         * @function batchEmbedContents
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IBatchEmbedContentsRequest} request BatchEmbedContentsRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.GenerativeService.BatchEmbedContentsCallback} callback Node-style callback called with the error, if any, and BatchEmbedContentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.batchEmbedContents = function batchEmbedContents(request, callback) {
                            return this.rpcCall(batchEmbedContents, $root.google.ai.generativelanguage.v1alpha.BatchEmbedContentsRequest, $root.google.ai.generativelanguage.v1alpha.BatchEmbedContentsResponse, request, callback);
                        }, "name", { value: "BatchEmbedContents" });
    
                        /**
                         * Calls BatchEmbedContents.
                         * @function batchEmbedContents
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IBatchEmbedContentsRequest} request BatchEmbedContentsRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.BatchEmbedContentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.GenerativeService|countTokens}.
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @typedef CountTokensCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.CountTokensResponse} [response] CountTokensResponse
                         */
    
                        /**
                         * Calls CountTokens.
                         * @function countTokens
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.ICountTokensRequest} request CountTokensRequest message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.GenerativeService.CountTokensCallback} callback Node-style callback called with the error, if any, and CountTokensResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.countTokens = function countTokens(request, callback) {
                            return this.rpcCall(countTokens, $root.google.ai.generativelanguage.v1alpha.CountTokensRequest, $root.google.ai.generativelanguage.v1alpha.CountTokensResponse, request, callback);
                        }, "name", { value: "CountTokens" });
    
                        /**
                         * Calls CountTokens.
                         * @function countTokens
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.ICountTokensRequest} request CountTokensRequest message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.CountTokensResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.ai.generativelanguage.v1alpha.GenerativeService|bidiGenerateContent}.
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @typedef BidiGenerateContentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.ai.generativelanguage.v1alpha.BidiGenerateContentServerMessage} [response] BidiGenerateContentServerMessage
                         */
    
                        /**
                         * Calls BidiGenerateContent.
                         * @function bidiGenerateContent
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IBidiGenerateContentClientMessage} request BidiGenerateContentClientMessage message or plain object
                         * @param {google.ai.generativelanguage.v1alpha.GenerativeService.BidiGenerateContentCallback} callback Node-style callback called with the error, if any, and BidiGenerateContentServerMessage
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GenerativeService.prototype.bidiGenerateContent = function bidiGenerateContent(request, callback) {
                            return this.rpcCall(bidiGenerateContent, $root.google.ai.generativelanguage.v1alpha.BidiGenerateContentClientMessage, $root.google.ai.generativelanguage.v1alpha.BidiGenerateContentServerMessage, request, callback);
                        }, "name", { value: "BidiGenerateContent" });
    
                        /**
                         * Calls BidiGenerateContent.
                         * @function bidiGenerateContent
                         * @memberof google.ai.generativelanguage.v1alpha.GenerativeService
                         * @instance
                         * @param {google.ai.generativelanguage.v1alpha.IBidiGenerateContentClientMessage} request BidiGenerateContentClientMessage message or plain object
                         * @returns {Promise<google.ai.generativelanguage.v1alpha.BidiGenerateContentServerMessage>} Promise
                         * @variation 2
                         */
    
                        return GenerativeService;
                    })();
    
                    /**
                     * TaskType enum.
                     * @name google.ai.generativelanguage.v1alpha.TaskType
                     * @enum {number}
                     * @property {number} TASK_TYPE_UNSPECIFIED=0 TASK_TYPE_UNSPECIFIED value
                     * @property {number} RETRIEVAL_QUERY=1 RETRIEVAL_QUERY value
                     * @property {number} RETRIEVAL_DOCUMENT=2 RETRIEVAL_DOCUMENT value
                     * @property {number} SEMANTIC_SIMILARITY=3 SEMANTIC_SIMILARITY value
                     * @property {number} CLASSIFICATION=4 CLASSIFICATION value
                     * @property {number} CLUSTERING=5 CLUSTERING value
                     * @property {number} QUESTION_ANSWERING=6 QUESTION_ANSWERING value
                     * @property {number} FACT_VERIFICATION=7 FACT_VERIFICATION value
                     */
                    v1alpha.TaskType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TASK_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "RETRIEVAL_QUERY"] = 1;
                        values[valuesById[2] = "RETRIEVAL_DOCUMENT"] = 2;
                        values[valuesById[3] = "SEMANTIC_SIMILARITY"] = 3;
                        values[valuesById[4] = "CLASSIFICATION"] = 4;
                        values[valuesById[5] = "CLUSTERING"] = 5;
                        values[valuesById[6] = "QUESTION_ANSWERING"] = 6;
                        values[valuesById[7] = "FACT_VERIFICATION"] = 7;
                        return values;
                    })();
    
                    v1alpha.GenerateContentRequest = (function() {
    
                        /**
                         * Properties of a GenerateContentRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @interface IGenerateContentRequest
                         * @property {string|null} [model] GenerateContentRequest model
                         * @property {google.ai.generativelanguage.v1alpha.IContent|null} [systemInstruction] GenerateContentRequest systemInstruction
                         * @property {Array.<google.ai.generativelanguage.v1alpha.IContent>|null} [contents] GenerateContentRequest contents
                         * @property {Array.<google.ai.generativelanguage.v1alpha.ITool>|null} [tools] GenerateContentRequest tools
                         * @property {google.ai.generativelanguage.v1alpha.IToolConfig|null} [toolConfig] GenerateContentRequest toolConfig
                         * @property {Array.<google.ai.generativelanguage.v1alpha.ISafetySetting>|null} [safetySettings] GenerateContentRequest safetySettings
                         * @property {google.ai.generativelanguage.v1alpha.IGenerationConfig|null} [generationConfig] GenerateContentRequest generationConfig
                         * @property {string|null} [cachedContent] GenerateContentRequest cachedContent
                         */
    
                        /**
                         * Constructs a new GenerateContentRequest.
                         * @memberof google.ai.generativelanguage.v1alpha
                         * @classdesc Represents a GenerateContentRequest.
                         * @implements IGenerateContentRequest
                         * @constructor
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateContentRequest=} [properties] Properties to set
                         */
                        function GenerateContentRequest(properties) {
                            this.contents = [];
                            this.tools = [];
                            this.safetySettings = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateContentRequest model.
                         * @member {string} model
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.model = "";
    
                        /**
                         * GenerateContentRequest systemInstruction.
                         * @member {google.ai.generativelanguage.v1alpha.IContent|null|undefined} systemInstruction
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.systemInstruction = null;
    
                        /**
                         * GenerateContentRequest contents.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.IContent>} contents
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.contents = $util.emptyArray;
    
                        /**
                         * GenerateContentRequest tools.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.ITool>} tools
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.tools = $util.emptyArray;
    
                        /**
                         * GenerateContentRequest toolConfig.
                         * @member {google.ai.generativelanguage.v1alpha.IToolConfig|null|undefined} toolConfig
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.toolConfig = null;
    
                        /**
                         * GenerateContentRequest safetySettings.
                         * @member {Array.<google.ai.generativelanguage.v1alpha.ISafetySetting>} safetySettings
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.safetySettings = $util.emptyArray;
    
                        /**
                         * GenerateContentRequest generationConfig.
                         * @member {google.ai.generativelanguage.v1alpha.IGenerationConfig|null|undefined} generationConfig
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.generationConfig = null;
    
                        /**
                         * GenerateContentRequest cachedContent.
                         * @member {string|null|undefined} cachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @instance
                         */
                        GenerateContentRequest.prototype.cachedContent = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GenerateContentRequest _systemInstruction.
                         * @member {"systemInstruction"|undefined} _systemInstruction
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @instance
                         */
                        Object.defineProperty(GenerateContentRequest.prototype, "_systemInstruction", {
                            get: $util.oneOfGetter($oneOfFields = ["systemInstruction"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerateContentRequest _generationConfig.
                         * @member {"generationConfig"|undefined} _generationConfig
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @instance
                         */
                        Object.defineProperty(GenerateContentRequest.prototype, "_generationConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["generationConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GenerateContentRequest _cachedContent.
                         * @member {"cachedContent"|undefined} _cachedContent
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @instance
                         */
                        Object.defineProperty(GenerateContentRequest.prototype, "_cachedContent", {
                            get: $util.oneOfGetter($oneOfFields = ["cachedContent"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GenerateContentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateContentRequest=} [properties] Properties to set
                         * @returns {google.ai.generativelanguage.v1alpha.GenerateContentRequest} GenerateContentRequest instance
                         */
                        GenerateContentRequest.create = function create(properties) {
                            return new GenerateContentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateContentRequest message. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GenerateContentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateContentRequest} message GenerateContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateContentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.model != null && Object.hasOwnProperty.call(message, "model"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.model);
                            if (message.contents != null && message.contents.length)
                                for (var i = 0; i < message.contents.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.Content.encode(message.contents[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.safetySettings != null && message.safetySettings.length)
                                for (var i = 0; i < message.safetySettings.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.SafetySetting.encode(message.safetySettings[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.generationConfig != null && Object.hasOwnProperty.call(message, "generationConfig"))
                                $root.google.ai.generativelanguage.v1alpha.GenerationConfig.encode(message.generationConfig, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.tools != null && message.tools.length)
                                for (var i = 0; i < message.tools.length; ++i)
                                    $root.google.ai.generativelanguage.v1alpha.Tool.encode(message.tools[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.toolConfig != null && Object.hasOwnProperty.call(message, "toolConfig"))
                                $root.google.ai.generativelanguage.v1alpha.ToolConfig.encode(message.toolConfig, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.systemInstruction != null && Object.hasOwnProperty.call(message, "systemInstruction"))
                                $root.google.ai.generativelanguage.v1alpha.Content.encode(message.systemInstruction, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.cachedContent != null && Object.hasOwnProperty.call(message, "cachedContent"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.cachedContent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateContentRequest message, length delimited. Does not implicitly {@link google.ai.generativelanguage.v1alpha.GenerateContentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @static
                         * @param {google.ai.generativelanguage.v1alpha.IGenerateContentRequest} message GenerateContentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateContentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateContentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.ai.generativelanguage.v1alpha.GenerateContentRequest} GenerateContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateContentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.ai.generativelanguage.v1alpha.GenerateContentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.model = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.systemInstruction = $root.google.ai.generativelanguage.v1alpha.Content.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        if (!(message.contents && message.contents.length))
                                            message.contents = [];
                                        message.contents.push($root.google.ai.generativelanguage.v1alpha.Content.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        if (!(message.tools && message.tools.length))
                                            message.tools = [];
                                        message.tools.push($root.google.ai.generativelanguage.v1alpha.Tool.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 7: {
                                        message.toolConfig = $root.google.ai.generativelanguage.v1alpha.ToolConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.safetySettings && message.safetySettings.length))
                                            message.safetySettings = [];
                                        message.safetySettings.push($root.google.ai.generativelanguage.v1alpha.SafetySetting.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.generationConfig = $root.google.ai.generativelanguage.v1alpha.GenerationConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.cachedContent = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateContentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.ai.generativelanguage.v1alpha.GenerateContentRequest} GenerateContentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateContentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateContentRequest message.
                         * @function verify
                         * @memberof google.ai.generativelanguage.v1alpha.GenerateContentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateContentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.model != null && message.hasOwnProperty("model"))
                                if (!$util.isString(message.model))
                                    return "model: string expected";
                            if (message.systemInstruction != null && message.hasOwnProperty("systemInstruction")) {
                                properties._systemInstruction = 1;
                                {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Content.verify(message.systemInstruction);
                                    if (error)
                                        return "systemInstruction." + error;
                                }
                            }
                            if (message.contents != null && message.hasOwnProperty("contents")) {
                                if (!Array.isArray(message.contents))
                                    return "contents: array expected";
                                for (var i = 0; i < message.contents.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Content.verify(message.contents[i]);
                                    if (error)
                                        return "contents." + error;
                                }
                            }
                            if (message.tools != null && message.hasOwnProperty("tools")) {
                                if (!Array.isArray(message.tools))
                                    return "tools: array expected";
                                for (var i = 0; i < message.tools.length; ++i) {
                                    var error = $root.google.ai.generativelanguage.v1alpha.Tool.verify(message.tools[i]);
                                    if (error)
                                        return "tools." + error;
                                }
                            }
                            if (message.toolConfig != null && message.hasOwnProperty("toolConfig")) {
                                var error = $root.google.ai.generativelanguage.v1alpha.ToolConfig.verify(message.toolConfig);
                                if (error)
                                    return "toolConfig." + error;
                            }
    